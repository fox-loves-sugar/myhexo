<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分布式锁</title>
      <link href="/myhexo/2020/12/29/date1229/"/>
      <url>/myhexo/2020/12/29/date1229/</url>
      
        <content type="html"><![CDATA[<h3 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h3><ul><li>思考：高并发情况，会不会出现问题？</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"></span><br><span class="line"><span class="comment"># 锁的使用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testlock</span>(<span class="params">request</span>):</span></span><br><span class="line">    res = User.objects.get(pk=<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 查不到会报错</span></span><br><span class="line">    <span class="keyword">if</span> res.num &gt; <span class="number">0</span>:</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">        <span class="comment"># 人为延缓流程</span></span><br><span class="line">        <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> c:</span><br><span class="line">            c.execute(<span class="string">&#x27;update user set num = num - 1 where id = 1&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;钱包为空&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>什么是qbs</li></ul><p>引入xampp（Apache+MySQL+PHP+PERL），是一种很好的压测工具，不用认为压测，其中有一个指令对qbs的解释很好</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ab -c100 -n500</span><br><span class="line"><span class="meta">#</span><span class="bash"> -c：并发   -n：500人</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 500/100 5s完成请求（通常是1:4 1:5）</span></span><br></pre></td></tr></table></figure><p>这就说明了，高并发情况下，逻辑是对的，但是代码会出现问题</p><h3 id="2-锁的概念"><a href="#2-锁的概念" class="headerlink" title="2 锁的概念"></a>2 锁的概念</h3><h4 id="2-1-本地锁"><a href="#2-1-本地锁" class="headerlink" title="2.1 本地锁"></a>2.1 本地锁</h4><ul><li>线程是不需要加锁的，因为在Cpython中存在GIL全局解释器锁</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地锁</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_it</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> lock.acquire():    </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">                num = num + n</span><br><span class="line">                num = num - n</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            lock.release()</span><br><span class="line">    print(num)</span><br><span class="line">threads - [</span><br><span class="line">    threading.Thread(target=change_it, args=(<span class="number">8</span>,)),</span><br><span class="line">    threading.Thread(target=change_it, args=(<span class="number">10</span>,))</span><br><span class="line">]</span><br><span class="line">lock = threading.Lock()</span><br><span class="line">[t.start() <span class="keyword">for</span> t <span class="keyword">in</span> threads]</span><br><span class="line">[t.join() <span class="keyword">for</span> t <span class="keyword">in</span> threads]</span><br></pre></td></tr></table></figure><h4 id="2-2-分布式锁"><a href="#2-2-分布式锁" class="headerlink" title="2.2 分布式锁"></a>2.2 分布式锁</h4><ul><li>共用一把锁（全局锁，基于redis）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">setnx locknx test</span><br><span class="line"><span class="comment"># key locknx value test</span></span><br><span class="line">setnx locknx task</span><br><span class="line"><span class="comment"># 发现无法更改</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="comment"># 证明：获取</span></span><br><span class="line">get locknx</span><br><span class="line"><span class="string">&#x27;test&#x27;</span></span><br><span class="line"><span class="comment"># 释放锁</span></span><br><span class="line"><span class="keyword">del</span> locknx</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 56行bind 127.0.0.1 注释掉，允许别人访问自己的redis</span></span><br><span class="line"><span class="comment"># 不会引发资源冲突</span></span><br><span class="line"><span class="comment"># 隐患：如果正在访问的时候宕机，永久锁入</span></span><br><span class="line"><span class="comment"># 加一个延时锁</span></span><br><span class="line">expire locknx <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="3-mysql-django-实现锁机制"><a href="#3-mysql-django-实现锁机制" class="headerlink" title="3 mysql + django 实现锁机制"></a>3 mysql + django 实现锁机制</h3><h4 id="3-1-mysql中常见的锁"><a href="#3-1-mysql中常见的锁" class="headerlink" title="3.1 mysql中常见的锁"></a>3.1 mysql中常见的锁</h4><h5 id="3-1-1-乐观锁"><a href="#3-1-1-乐观锁" class="headerlink" title="3.1.1 乐观锁"></a>3.1.1 乐观锁</h5><p>不操作不加锁，读取不加</p><h5 id="3-1-2-悲观锁"><a href="#3-1-2-悲观锁" class="headerlink" title="3.1.2 悲观锁"></a>3.1.2 悲观锁</h5><p>读取就加锁，持悲观态度</p><h4 id="3-2-启发文件"><a href="#3-2-启发文件" class="headerlink" title="3.2 启发文件"></a>3.2 启发文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@contextmanager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_lock</span>(<span class="params">lock_id, expire_second, **kwargs</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param lock_id: 锁id</span></span><br><span class="line"><span class="string">    :param expire_second: 过期时间</span></span><br><span class="line"><span class="string">    :param kwargs: 用于以后自定义传入参数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    dead_lock = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加锁</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            MyLock.objects.create(<span class="built_in">id</span>=lock_id)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> django.db.utils.IntegrityError:</span><br><span class="line">            <span class="comment"># 出错看是在运行中还是死锁</span></span><br><span class="line">            ctime = datetime.datetime.now() - datetime.timedelta(seconds=expire_second)</span><br><span class="line">            <span class="keyword">if</span> MyLock.objects.<span class="built_in">filter</span>(Q(<span class="built_in">id</span>=lock_id) &amp; Q(create_time__gt=ctime)).exists():</span><br><span class="line">                print(<span class="string">&#x27;当前任务执行中&#x27;</span>)</span><br><span class="line">                <span class="comment"># time.sleep(5)</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 排除刚好任务执行完的那一刻，还未释放锁就加锁的情况</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> dead_lock:</span><br><span class="line">                    dead_lock = <span class="literal">True</span></span><br><span class="line">                    time.sleep(<span class="number">5</span>)</span><br><span class="line">                <span class="comment"># 删除死锁</span></span><br><span class="line">                MyLock.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=lock_id).delete()</span><br><span class="line">                print(<span class="string">&#x27;死锁&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 执行任务</span></span><br><span class="line">    <span class="keyword">yield</span> kwargs</span><br><span class="line">    <span class="comment"># 去锁</span></span><br><span class="line">    MyLock.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=lock_id).delete()</span><br></pre></td></tr></table></figure><h4 id="3-3-具体代码"><a href="#3-3-具体代码" class="headerlink" title="3.3 具体代码"></a>3.3 具体代码</h4><h5 id="3-3-1-models-py"><a href="#3-3-1-models-py" class="headerlink" title="3.3.1 models.py"></a>3.3.1 models.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLock</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = models.AutoField(auto_created=<span class="literal">True</span>, primary_key=<span class="literal">True</span>, serialize=<span class="literal">False</span>,verbose_name=<span class="string">&#x27;ID&#x27;</span>)</span><br><span class="line">    create_time = models.DateTimeField(auto_now=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;创建锁时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;my_lock_model&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="3-3-2-views-py"><a href="#3-3-2-views-py" class="headerlink" title="3.3.2 views.py"></a>3.3.2 views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalletView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">            dead_lock = <span class="literal">False</span></span><br><span class="line">            <span class="comment"># 加锁</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    lock = MyLock.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span> lock:</span><br><span class="line">                        print(<span class="string">&#x27;程序运行中，请等待&#x27;</span>)</span><br><span class="line">                        time.sleep(<span class="number">5</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        MyLock.objects.create(<span class="built_in">id</span>=<span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">except</span> django.db.utils.IntegrityError:</span><br><span class="line">                    <span class="comment"># 出错看是在运行中还是死锁</span></span><br><span class="line">                    ctime = datetime.datetime.now() - datetime.timedelta(seconds=<span class="number">60</span>)</span><br><span class="line">                    <span class="keyword">if</span> MyLock.objects.<span class="built_in">filter</span>(Q(<span class="built_in">id</span>=<span class="number">1</span>) &amp; Q(create_time__gt=ctime)).exists():</span><br><span class="line">                        print(<span class="string">&#x27;当前任务执行中&#x27;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment"># 排除刚好任务执行完的那一刻，还未释放锁就加锁的情况</span></span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> dead_lock:</span><br><span class="line">                            dead_lock = <span class="literal">True</span></span><br><span class="line">                            time.sleep(<span class="number">5</span>)</span><br><span class="line">                        <span class="comment"># 删除死锁</span></span><br><span class="line">                        MyLock.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>).delete()</span><br><span class="line">                        print(<span class="string">&#x27;死锁&#x27;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">            user_id = <span class="number">3</span></span><br><span class="line">            give_money = <span class="number">1</span></span><br><span class="line">            wallet = WalletModel.objects.get(user_id=user_id)</span><br><span class="line">            <span class="keyword">if</span> give_money &lt;= wallet.money:</span><br><span class="line">                WalletModel.objects.<span class="built_in">filter</span>(user_id=user_id).update(money=F(<span class="string">&#x27;money&#x27;</span>) - give_money)</span><br><span class="line">            print(<span class="string">&#x27;释放锁&#x27;</span>)</span><br><span class="line">            MyLock.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>).delete()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;提现成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-redis-django-实现分布式锁"><a href="#4-redis-django-实现分布式锁" class="headerlink" title="4 redis + django 实现分布式锁"></a>4 redis + django 实现分布式锁</h3><h4 id="4-1-分布式锁"><a href="#4-1-分布式锁" class="headerlink" title="4.1 分布式锁"></a>4.1 分布式锁</h4><p>分布式锁的本质是占一个坑，当别的进程也要来占坑时发现已经被占，就会放弃或者稍后重试。占坑一般使用setnx指令，只允许一个客户端占坑。先来先占，用完了再调用del指令释放坑。先来先占，用完了再调用del指令释放坑。为了解决死锁，引入expire过期时间。（这种竞争解决方案还可以考虑消息队列）</p><h4 id="4-2-具体代码"><a href="#4-2-具体代码" class="headerlink" title="4.2 具体代码"></a>4.2 具体代码</h4><h5 id="4-2-1-views-py"><a href="#4-2-1-views-py" class="headerlink" title="4.2.1 views.py"></a>4.2.1 views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalletView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        user_info = decodeToken(request)</span><br><span class="line">        user_id = user_info.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        user = WalletModel.objects.<span class="built_in">filter</span>(user_id=user_id).first()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            money = <span class="built_in">float</span>(request.data.get(<span class="string">&#x27;money&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值错误&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">400</span>, <span class="string">&#x27;error&#x27;</span>: e&#125;)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">               <span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line">               <span class="comment"># decimal 和 float 不能叠加，要把 float 转换</span></span><br><span class="line">               user.money += Decimal(money)</span><br><span class="line">               user.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            WalletModel.objects.create(money=money, user_id=user_id)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> money &lt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            coupon_code = create_code(<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">100</span> &lt;= money &lt; <span class="number">300</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;3&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了10元无门槛红包哦&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">            <span class="keyword">elif</span> <span class="number">300</span> &lt;= money &lt; <span class="number">500</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;1&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了一张满300减50的优惠券&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">            <span class="keyword">elif</span> <span class="number">500</span> &lt;= money &lt; <span class="number">1000</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;2&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了终生八折优惠&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">import</span> redis</span><br><span class="line">        r = redis.Redis(db=<span class="number">15</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">        dead_lock = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                r.setnx(<span class="string">&#x27;locknx&#x27;</span>, <span class="string">&#x27;lock&#x27;</span>)</span><br><span class="line">                r.expire(<span class="string">&#x27;locknx&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> django.db.utils.IntegrityError:</span><br><span class="line">                <span class="comment"># 出错看是在运行中还是死锁</span></span><br><span class="line">                <span class="keyword">if</span> r.get(<span class="string">&#x27;locknx&#x27;</span>):</span><br><span class="line">                    print(<span class="string">&#x27;当前任务执行中&#x27;</span>)</span><br><span class="line">                    time.sleep(<span class="number">5</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 排除刚好任务执行完的那一刻，还未释放锁就加锁的情况</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> dead_lock:</span><br><span class="line">                        dead_lock = <span class="literal">True</span></span><br><span class="line">                        time.sleep(<span class="number">5</span>)</span><br><span class="line">                    <span class="comment"># 删除死锁</span></span><br><span class="line">                    r.delete(<span class="string">&#x27;locknx&#x27;</span>)</span><br><span class="line">                    print(<span class="string">&#x27;死锁&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">        user_info = decodeToken(request)</span><br><span class="line">        user_id = user_info.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        give_money = <span class="built_in">float</span>(request.data.get(<span class="string">&#x27;money&#x27;</span>))</span><br><span class="line">        wallet = WalletModel.objects.get(user_id=user_id)</span><br><span class="line">        <span class="keyword">if</span> give_money &lt;= wallet.money:</span><br><span class="line">            WalletModel.objects.<span class="built_in">filter</span>(user_id=user_id).update(money=F(<span class="string">&#x27;money&#x27;</span>)-give_money)</span><br><span class="line">        r.delete(<span class="string">&#x27;locknx&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;提现成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="5-小结"><a href="#5-小结" class="headerlink" title="5 小结"></a>5 小结</h3><ul><li>相比之下</li></ul><p>redis性能好，测试mysql有的时候会失败，而且跑完100并发需要86秒，但是redis只需要9秒，不同锁有不同的应用场景，这才是重中之中</p>]]></content>
      
      
      
        <tags>
            
            <tag> 优惠分布式锁，redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排行榜</title>
      <link href="/myhexo/2020/12/28/date1228/"/>
      <url>/myhexo/2020/12/28/date1228/</url>
      
        <content type="html"><![CDATA[<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h3><p>最早的排行榜，起源于在魔兽世界游戏的拍卖行，常规数据库mysql无法实现这一功能，但是redis可以解决。</p><p>redis的有序集合，可以实现这一功能。有序集合的底层是哈希（可以去重）和链表（指针，指向下一个元素的内存地址，方便插入）的结合。</p><ul><li>数组：某一数组的某一位置插入元祖，巨大成本错位，数组的缺陷（但是查询快），可以折半查找</li><li>链表：链表查询慢，但是插入快，不能做折半查找，不知道长度，指针指向内存地址，无序，顺序查找（一个一个进行比对），for循环，跳表（123456789，查13579，跳跃性查找，弊端：把奇数节点拿到了，原节点不能删除，平白无故多了百分之五十的存储空间，以空间换时间）</li></ul><p>为什么有序集合，确保唯一性，有序</p><h3 id="2-redis相关"><a href="#2-redis相关" class="headerlink" title="2 redis相关"></a>2 redis相关</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 10.0.17763.1518]</span><br><span class="line">(c) 2018 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\86156&gt;redis-cli</span><br><span class="line">127.0.0.1:6379&gt; select 8</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[8]&gt; zadd myscore 3 a# 插入</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379[8]&gt; zadd myscore 4 b</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379[8]&gt; zincrby myscore 5 a# 自增</span><br><span class="line">&quot;8&quot;</span><br><span class="line">127.0.0.1:6379[8]&gt; zrange myscore 0 10# 获取（django中是列表）</span><br><span class="line">1) &quot;b&quot;</span><br><span class="line">2) &quot;a&quot;</span><br><span class="line">127.0.0.1:6379[8]&gt; zscore myscore a</span><br><span class="line">&quot;8&quot;</span><br><span class="line">127.0.0.1:6379[8]&gt; zscore myscore c</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure><h3 id="3-实战代码"><a href="#3-实战代码" class="headerlink" title="3 实战代码"></a>3 实战代码</h3><ul><li>redis里面只需要加几行代码，并新写一个视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 排序所需代码</span></span><br><span class="line">r = redis.Redis(db=<span class="number">9</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">    m = r.zscore(<span class="string">&#x27;money&#x27;</span>, user_id)</span><br><span class="line">    <span class="comment"># 如果有数据，要自增</span></span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        r.zincrby(user_id, user_id, money)</span><br><span class="line">    <span class="comment"># 没有的话，直接插入即可</span></span><br><span class="line">    r.zadd(<span class="string">&#x27;money&#x27;</span>, &#123;user_id: money&#125;)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> UserModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一个新的视图函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScoreView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">import</span> redis</span><br><span class="line">        r = redis.Redis(db=<span class="number">9</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">        <span class="built_in">list</span> = r.zrange(<span class="string">&#x27;money&#x27;</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">        score_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>[::<span class="number">-1</span>]:</span><br><span class="line">            <span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line">            username = UserModel.objects.get(pk=i).username</span><br><span class="line">            value = r.zscore(<span class="string">&#x27;money&#x27;</span>, i)</span><br><span class="line">            <span class="built_in">dict</span>[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">            <span class="built_in">dict</span>[<span class="string">&#x27;money&#x27;</span>] = value</span><br><span class="line">            score_list.append(<span class="built_in">dict</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;data&#x27;</span>:score_list&#125;)    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 二维码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优惠券</title>
      <link href="/myhexo/2020/12/28/date1228s/"/>
      <url>/myhexo/2020/12/28/date1228s/</url>
      
        <content type="html"><![CDATA[<h3 id="1-优惠券"><a href="#1-优惠券" class="headerlink" title="1 优惠券"></a>1 优惠券</h3><ul><li>充值以及充值成功之间要有优惠券</li></ul><h4 id="1-1-生成随机码"><a href="#1-1-生成随机码" class="headerlink" title="1.1 生成随机码"></a>1.1 生成随机码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">code = string.digits + string.ascii_letters</span><br><span class="line">print(code)</span><br><span class="line"><span class="comment"># 生成字符串（4位）</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCode</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.sample(code, <span class="number">4</span>))</span><br><span class="line">   <span class="comment"># 样本</span></span><br><span class="line">print(getCode())</span><br><span class="line"><span class="comment"># 重复率高</span></span><br><span class="line"><span class="comment"># 为了降低重复率</span></span><br><span class="line"><span class="comment"># 可以进行分位</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">key</span>(<span class="params">group</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;-&#x27;</span>.join([getCode() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(group)])</span><br><span class="line"><span class="comment"># 列表推导式弊端，可读性降低，左边是逻辑，右边是循环</span></span><br><span class="line">print(key(<span class="number">4</span>))</span><br></pre></td></tr></table></figure><h4 id="1-2-Django端"><a href="#1-2-Django端" class="headerlink" title="1.2 Django端"></a>1.2 Django端</h4><h5 id="1-2-1-models-py"><a href="#1-2-1-models-py" class="headerlink" title="1.2.1 models.py"></a>1.2.1 models.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> UserModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalletModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    money = models.DecimalField(max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    user = models.ForeignKey(UserModel, on_delete=models.CASCADE)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;wallet_model&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CouponModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    coupon_choice = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;满300减50&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;八折优惠&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;无门槛10元红包&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    user = models.ForeignKey(UserModel, on_delete=models.CASCADE)</span><br><span class="line">    coupon = models.CharField(choices=coupon_choice, max_length=<span class="number">30</span>)</span><br><span class="line">    code = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    create_time = models.DateTimeField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 这里添加创建时间，是为了计算优惠券的有效时间</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;coupon_model&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="1-2-2-views-py"><a href="#1-2-2-views-py" class="headerlink" title="1.2.2 views.py"></a>1.2.2 views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WalletView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        user_info = decodeToken(request)</span><br><span class="line">        user_id = user_info.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        user = WalletModel.objects.<span class="built_in">filter</span>(user_id=user_id).first()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            money = <span class="built_in">float</span>(request.data.get(<span class="string">&#x27;money&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值错误&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">400</span>, <span class="string">&#x27;error&#x27;</span>: e&#125;)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">               <span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line">               <span class="comment"># decimal 和 float 不能叠加，要把 float 转换</span></span><br><span class="line">               user.money += Decimal(money)</span><br><span class="line">               user.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            WalletModel.objects.create(money=money, user_id=user_id)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> money &lt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            coupon_code = create_code(<span class="number">4</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="number">100</span> &lt;= money &lt; <span class="number">300</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;3&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了10元无门槛红包哦&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">            <span class="keyword">elif</span> <span class="number">300</span> &lt;= money &lt; <span class="number">500</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;1&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了一张满300减50的优惠券&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line">            <span class="keyword">elif</span> <span class="number">500</span> &lt;= money &lt; <span class="number">1000</span>:</span><br><span class="line">                CouponModel.objects.create(code=coupon_code, coupon=<span class="string">&#x27;2&#x27;</span>, user_id=user_id)</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;充值成功，同时您获取了终生八折优惠&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><h5 id="1-2-3-utils-py"><a href="#1-2-3-utils-py" class="headerlink" title="1.2.3 utils.py"></a>1.2.3 utils.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成优惠券随机码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">code = string.digits + string.ascii_letters</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_code</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.sample(code, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_code</span>(<span class="params">group</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;-&#x27;</span>.join([get_code() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(group)])</span><br></pre></td></tr></table></figure><h5 id="1-2-4-MyAuthorization-py"><a href="#1-2-4-MyAuthorization-py" class="headerlink" title="1.2.4  MyAuthorization.py"></a>1.2.4  MyAuthorization.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.utils <span class="keyword">import</span> jwt_decode_handler</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> jwt <span class="keyword">import</span> exceptions</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decodeToken</span>(<span class="params">request</span>):</span></span><br><span class="line">    token = request.META.get(<span class="string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(&#x27;this is token&#x27;, token)</span></span><br><span class="line">    <span class="comment"># user_info = jwt_decode_handler(token[4:])</span></span><br><span class="line">    <span class="comment"># return user_info</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user_info = jwt.decode(token[<span class="number">4</span>:], settings.SECRET_KEY)</span><br><span class="line">        <span class="comment"># print(&#x27;this is user_info&#x27;, user_info)</span></span><br><span class="line">    <span class="keyword">except</span> exceptions.ExpiredSignatureError:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;token已经失效&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> jwt.DecodeError:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;token认证失败&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> jwt.InvalidIssuer:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;非法的token&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> user_info</span><br></pre></td></tr></table></figure><h4 id="1-3-Vue端"><a href="#1-3-Vue端" class="headerlink" title="1.3 Vue端"></a>1.3 Vue端</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;钱包充值&lt;&#x2F;h1&gt;</span><br><span class="line">        充值金额：&lt;a-input v-model&#x3D;&quot;costMoney&quot; style&#x3D;&quot;width:200px;&quot;&gt;&lt;&#x2F;a-input&gt;</span><br><span class="line">        &lt;a-button @click&#x3D;&quot;payWallet&quot;&gt;充值&lt;&#x2F;a-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">import &#123; post_wallet &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            costMoney:&#39;&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        payWallet()&#123;</span><br><span class="line">            let data&#x3D;&#123;</span><br><span class="line">                &#39;money&#39;: this.costMoney</span><br><span class="line">            &#125;</span><br><span class="line">            post_wallet(data).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 优惠券 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信三方支付+二维码生成</title>
      <link href="/myhexo/2020/12/27/date1226/"/>
      <url>/myhexo/2020/12/27/date1226/</url>
      
        <content type="html"><![CDATA[<h3 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h3><ul><li>前言</li></ul><p>主要介绍了微信小程序内部支付的流程，然而实际上微信小程序有一定的局限性，也就是用户范围仅限于小程序内部生态圈，在生活中真正具有广泛性、高效性、使用方便性的支付方式还得是扫码支付，扫码的优点在于推广成本低，上至钓鱼台国宾馆，下至发廊地摊都能用，打印出来就完事了，而相比其他支付方式，现金的找零及假钞问题，信用卡的办理门槛、pos机的沉没成本，就算微信可集成的h5支付和小程序支付，奈何很多老年人根本不会用小程序和手机浏览器，更别说再进行支付操作了，所以基于二维码的扫码支付的确是非常符合国情的。本次我们使用前后端分离项目Vue.js+Django来集成微信的扫码支付功能，体验一下21世纪泛用性最高的支付方式。</p><h3 id="1-相关操作"><a href="#1-相关操作" class="headerlink" title="1 相关操作"></a>1 相关操作</h3><h4 id="1-1-注册微信公众平台"><a href="#1-1-注册微信公众平台" class="headerlink" title="1.1 注册微信公众平台"></a>1.1 注册微信公众平台</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://mp.weixin.qq.com</span></span><br></pre></td></tr></table></figure><h5 id="1-1-1-获得开发者id和秘钥"><a href="#1-1-1-获得开发者id和秘钥" class="headerlink" title="1.1.1 获得开发者id和秘钥"></a>1.1.1 获得开发者id和秘钥</h5><ul><li>appid &amp; appsecret</li></ul><h5 id="1-1-2-获取微信支付接口的权限"><a href="#1-1-2-获取微信支付接口的权限" class="headerlink" title="1.1.2 获取微信支付接口的权限"></a>1.1.2 获取微信支付接口的权限</h5><h4 id="1-2-注册微信支付商户平台"><a href="#1-2-注册微信支付商户平台" class="headerlink" title="1.2 注册微信支付商户平台"></a>1.2 注册微信支付商户平台</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://pay.weixin.qq.com/</span></span><br></pre></td></tr></table></figure><h5 id="1-2-1-获取微信支付的商户号"><a href="#1-2-1-获取微信支付的商户号" class="headerlink" title="1.2.1  获取微信支付的商户号"></a>1.2.1  获取微信支付的商户号</h5><ul><li>在账户信息页面</li></ul><h4 id="1-3-获取微信支付接口的秘钥"><a href="#1-3-获取微信支付接口的秘钥" class="headerlink" title="1.3  获取微信支付接口的秘钥"></a>1.3  获取微信支付接口的秘钥</h4><ul><li>账户中心-&gt;api安全</li></ul><h4 id="1-4-配置支付域名"><a href="#1-4-配置支付域名" class="headerlink" title="1.4  配置支付域名"></a>1.4  配置支付域名</h4><ul><li>产品中心-&gt;开发配置页面</li></ul><h4 id="1-5-相关注意事项"><a href="#1-5-相关注意事项" class="headerlink" title="1.5 相关注意事项"></a>1.5 相关注意事项</h4><h5 id="1-5-1-域名"><a href="#1-5-1-域名" class="headerlink" title="1.5.1 域名"></a>1.5.1 域名</h5><p>这里不像微信小程序，小程序只能允许https协议接口，而扫码支付域名既支持https也支持http，非常方便，同时注意域名必须是一个备案域名。</p><h5 id="1-5-2-微信接口使用xml"><a href="#1-5-2-微信接口使用xml" class="headerlink" title="1.5.2 微信接口使用xml"></a>1.5.2 微信接口使用xml</h5><p>qrcode模块用来生成二维码，bs4模块用来将微信接口返回的xml解析成json，在21世纪的第二十个年头，微信接口居然还在使用原始的xml，这种反人类行为实在不能理解。</p><h3 id="2-业务流程说明"><a href="#2-业务流程说明" class="headerlink" title="2 业务流程说明"></a>2 业务流程说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）商户后台系统根据用户选购的商品生成订单。</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）用户确认支付后调用微信支付【统一下单API】生成预支付交易；</span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）微信支付系统收到请求后生成预支付交易单，并返回交易会话的二维码链接code_url。</span><br><span class="line"></span><br><span class="line">（<span class="number">4</span>）商户后台系统根据返回的code_url生成二维码。</span><br><span class="line"></span><br><span class="line">（<span class="number">5</span>）用户打开微信“扫一扫”扫描二维码，微信客户端将扫码内容发送到微信支付系统。</span><br><span class="line"></span><br><span class="line">（<span class="number">6</span>）微信支付系统收到客户端请求，验证链接有效性后发起用户支付，要求用户授权。</span><br><span class="line"></span><br><span class="line">（<span class="number">7</span>）用户在微信客户端输入密码，确认支付后，微信客户端提交授权。</span><br><span class="line"></span><br><span class="line">（<span class="number">8</span>）微信支付系统根据用户授权完成支付交易。</span><br><span class="line"></span><br><span class="line">（<span class="number">9</span>）微信支付系统完成支付交易后给微信客户端返回交易结果，并将交易结果通过短信、微信消息提示用户。微信客户端展示支付交易结果页面。</span><br><span class="line"></span><br><span class="line">（<span class="number">10</span>）微信支付系统通过发送异步消息通知商户后台系统支付结果。商户后台系统需回复接收情况，通知微信后台系统不再发送该单的支付通知。</span><br><span class="line"></span><br><span class="line">（<span class="number">11</span>）未收到支付通知的情况，商户后台系统调用【查询订单API】。</span><br><span class="line"></span><br><span class="line">（<span class="number">12</span>）商户确认订单已支付后给用户发货。</span><br></pre></td></tr></table></figure><h3 id="3-Django"><a href="#3-Django" class="headerlink" title="3 Django"></a>3 Django</h3><h4 id="3-1-需要安装的包"><a href="#3-1-需要安装的包" class="headerlink" title="3.1 需要安装的包"></a>3.1 需要安装的包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install lxml</span><br><span class="line">pip install qrcode</span><br></pre></td></tr></table></figure><h4 id="3-2-utils-py"><a href="#3-2-utils-py" class="headerlink" title="3.2 utils.py"></a>3.2 utils.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> qrcode</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, HttpResponseRedirect</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans_xml_to_dict</span>(<span class="params">data_xml</span>):</span></span><br><span class="line">    soup = BeautifulSoup(data_xml, features=<span class="string">&#x27;xml&#x27;</span>)</span><br><span class="line">    xml = soup.find(<span class="string">&#x27;xml&#x27;</span>)  <span class="comment"># 解析XML</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> xml:</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">    data_dict = <span class="built_in">dict</span>([(item.name, item.text) <span class="keyword">for</span> item <span class="keyword">in</span> xml.find_all()])</span><br><span class="line">    <span class="keyword">return</span> data_dict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans_dict_to_xml</span>(<span class="params">data_dict</span>):</span>  <span class="comment"># 定义字典转XML的函数</span></span><br><span class="line">    data_xml = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">sorted</span>(data_dict.keys()):  <span class="comment"># 遍历字典排序后的key</span></span><br><span class="line">        v = data_dict.get(k)  <span class="comment"># 取出字典中key对应的value</span></span><br><span class="line">        <span class="keyword">if</span> k == <span class="string">&#x27;detail&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> v.startswith(<span class="string">&#x27;&lt;![CDATA[&#x27;</span>):  <span class="comment"># 添加XML标记</span></span><br><span class="line">            v = <span class="string">&#x27;&lt;![CDATA[&#123;&#125;]]&gt;&#x27;</span>.<span class="built_in">format</span>(v)</span><br><span class="line">        data_xml.append(<span class="string">&#x27;&lt;&#123;key&#125;&gt;&#123;value&#125;&lt;/&#123;key&#125;&gt;&#x27;</span>.<span class="built_in">format</span>(key=k, value=v))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;xml&gt;&#123;&#125;&lt;/xml&gt;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;&#x27;</span>.join(data_xml))  <span class="comment"># 返回XML</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sign</span>(<span class="params">data_dict, key</span>):</span>  <span class="comment"># 签名函数，参数为签名的数据和密钥</span></span><br><span class="line">    params_list = <span class="built_in">sorted</span>(data_dict.items(), key=<span class="keyword">lambda</span> e: e[<span class="number">0</span>], reverse=<span class="literal">False</span>)  <span class="comment"># 参数字典倒排序为列表</span></span><br><span class="line">    params_str = <span class="string">&quot;&amp;&quot;</span>.join(<span class="string">u&quot;&#123;&#125;=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(k, v) <span class="keyword">for</span> k, v <span class="keyword">in</span> params_list) + <span class="string">&#x27;&amp;key=&#x27;</span> + key</span><br><span class="line">    <span class="comment"># 组织参数字符串并在末尾添加商户交易密钥</span></span><br><span class="line">    md5 = hashlib.md5()  <span class="comment"># 使用MD5加密模式</span></span><br><span class="line">    md5.update(params_str.encode())  <span class="comment"># 将参数字符串传入</span></span><br><span class="line">    sign = md5.hexdigest().upper()  <span class="comment"># 完成加密并转为大写</span></span><br><span class="line">    <span class="keyword">return</span> sign</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wx_pay</span>(<span class="params">request</span>):</span></span><br><span class="line">    url = <span class="string">&#x27;https://api.mch.weixin.qq.com/pay/unifiedorder&#x27;</span>  <span class="comment"># 微信扫码支付接口</span></span><br><span class="line">    key = <span class="string">&#x27;945bec9df3614cffb74e39aba8fbf7d7&#x27;</span>  <span class="comment">#</span></span><br><span class="line">    total_fee = <span class="number">1</span> <span class="comment">#支付金额，单位分</span></span><br><span class="line">    body = <span class="string">&#x27;123456&#x27;</span>  <span class="comment"># 商品描述</span></span><br><span class="line">    out_trade_no = <span class="string">&#x27;order_%s&#x27;</span> % random.randrange(<span class="number">100000</span>, <span class="number">999999</span>)  <span class="comment"># 订单编号</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;appid&#x27;</span>: <span class="string">&#x27;wx092344a76b9979ff&#x27;</span>,  <span class="comment"># APPID</span></span><br><span class="line">        <span class="string">&#x27;mch_id&#x27;</span>: <span class="string">&#x27;1602932608&#x27;</span>,  <span class="comment"># 商户号</span></span><br><span class="line">        <span class="string">&#x27;notify_url&#x27;</span>: <span class="string">&#x27;http://wxpay.v3u.cn/wx_back/&#x27;</span>,  <span class="comment"># 回调地址</span></span><br><span class="line">        <span class="string">&#x27;product_id&#x27;</span>: <span class="string">&#x27;goods_%s&#x27;</span> % random.randrange(<span class="number">100000</span>, <span class="number">999999</span>),  <span class="comment"># 商品编号</span></span><br><span class="line">        <span class="string">&#x27;trade_type&#x27;</span>: <span class="string">&#x27;NATIVE&#x27;</span>,  <span class="comment"># 支付类型（扫码支付）</span></span><br><span class="line">        <span class="string">&#x27;spbill_create_ip&#x27;</span>: <span class="string">&#x27;114.254.176.137&#x27;</span>,  <span class="comment"># 发送请求服务器的IP地址</span></span><br><span class="line">        <span class="string">&#x27;total_fee&#x27;</span>: total_fee,  <span class="comment"># 订单总金额</span></span><br><span class="line">        <span class="string">&#x27;out_trade_no&#x27;</span>: out_trade_no,  <span class="comment"># 订单编号</span></span><br><span class="line">        <span class="string">&#x27;body&#x27;</span>: body,  <span class="comment"># 商品描述</span></span><br><span class="line">        <span class="string">&#x27;nonce_str&#x27;</span>: <span class="string">&#x27;ibuaiVcKdpRxkhJA&#x27;</span>  <span class="comment"># 字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">    sign = get_sign(params, key)  <span class="comment"># 获取签名</span></span><br><span class="line">    params.setdefault(<span class="string">&#x27;sign&#x27;</span>, sign)  <span class="comment"># 添加签名到参数字典</span></span><br><span class="line">    xml = trans_dict_to_xml(params)  <span class="comment"># 转换字典为XML</span></span><br><span class="line">    response = requests.request(<span class="string">&#x27;post&#x27;</span>, url, data=xml)  <span class="comment"># 以POST方式向微信公众平台服务器发起请求</span></span><br><span class="line">    data_dict = trans_xml_to_dict(response.content)  <span class="comment"># 将请求返回的数据转为字典</span></span><br><span class="line">    print(data_dict)</span><br><span class="line">    qrcode_name = out_trade_no + <span class="string">&#x27;.png&#x27;</span>  <span class="comment"># 支付二维码图片保存路径</span></span><br><span class="line">    <span class="keyword">if</span> data_dict.get(<span class="string">&#x27;return_code&#x27;</span>) == <span class="string">&#x27;SUCCESS&#x27;</span>:  <span class="comment"># 如果请求成功</span></span><br><span class="line">        img = qrcode.make(data_dict.get(<span class="string">&#x27;code_url&#x27;</span>))  <span class="comment"># 创建支付二维码片</span></span><br><span class="line">        img.save(<span class="string">&#x27;./static/upload/&#x27;</span> + qrcode_name)  <span class="comment"># 保存支付二维码,自己的地址，upload自己创建的</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(json.dumps(&#123;<span class="string">&#x27;img&#x27;</span>:qrcode_name&#125;))</span><br></pre></td></tr></table></figure><h4 id="3-3-urls-py"><a href="#3-3-urls-py" class="headerlink" title="3.3 urls.py"></a>3.3 urls.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, re_path</span><br><span class="line"><span class="keyword">from</span> eventlet <span class="keyword">import</span> serve</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> walletapp.utils <span class="keyword">import</span> payment, payment_execute, wx_pay</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;paypal/&#x27;</span>, payment),            <span class="comment"># 支付地址</span></span><br><span class="line">    path(<span class="string">&#x27;execute/&#x27;</span>, payment_execute),   <span class="comment"># 回调</span></span><br><span class="line">    <span class="comment"># path(&#x27;refund/&#x27;, payment_execute),   # 退款</span></span><br><span class="line">    path(<span class="string">&#x27;wx_pay/&#x27;</span>, wx_pay),             <span class="comment"># wx支付</span></span><br><span class="line">    re_path(<span class="string">&#x27;^static/upload/(?P&lt;path&gt;.*)$&#x27;</span>, serve, &#123;<span class="string">&#x27;document_root&#x27;</span>:<span class="string">&#x27;/static/upload/&#x27;</span>&#125;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="4-Vue端"><a href="#4-Vue端" class="headerlink" title="4  Vue端"></a>4  Vue端</h3><h4 id="4-1-payFor-vue"><a href="#4-1-payFor-vue" class="headerlink" title="4.1 payFor.vue"></a>4.1 payFor.vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;wx&lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;a-form-item v-bind&#x3D;&quot;formItemLayout&quot; label&#x3D;&quot;金额&quot; style&#x3D;&quot;width:200px;margin-left:650px&quot;&gt;</span><br><span class="line">                &lt;a-input v-model&#x3D;&quot;money&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;a-form-item&gt;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">            &lt;a-form-item v-bind&#x3D;&quot;tailFormItemLayout&quot;&gt;</span><br><span class="line">                &lt;a-button type&#x3D;&quot;primary&quot; html-type&#x3D;&quot;submit&quot; @click&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">                    生成二维码</span><br><span class="line">                &lt;&#x2F;a-button&gt;</span><br><span class="line">            &lt;&#x2F;a-form-item&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;a-form-item v-bind&#x3D;&quot;formItemLayout&quot; label&#x3D;&quot;二维码&quot;&gt;</span><br><span class="line">    </span><br><span class="line">                &lt;img :src&#x3D;&quot;src&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;a-form-item&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            money:&quot;1&quot;,</span><br><span class="line">            src:&quot;&quot;,</span><br><span class="line">            formItemLayout: &#123;</span><br><span class="line">                labelCol: &#123;</span><br><span class="line">                xs: &#123; span: 24 &#125;,</span><br><span class="line">                sm: &#123; span: 8 &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                wrapperCol: &#123;</span><br><span class="line">                xs: &#123; span: 24 &#125;,</span><br><span class="line">                sm: &#123; span: 16 &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            tailFormItemLayout: &#123;</span><br><span class="line">                wrapperCol: &#123;</span><br><span class="line">                xs: &#123;</span><br><span class="line">                    span: 24,</span><br><span class="line">                    offset: 0,</span><br><span class="line">                &#125;,</span><br><span class="line">                sm: &#123;</span><br><span class="line">                    span: 16,</span><br><span class="line">                    offset: 8,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            dataSource: [</span><br><span class="line">                    &#123;</span><br><span class="line">                    key: &#39;0&#39;,</span><br><span class="line">                    name: &#39;Edward King 0&#39;,</span><br><span class="line">                    age: &#39;32&#39;,</span><br><span class="line">                    address: &#39;London, Park Lane no. 0&#39;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                    key: &#39;1&#39;,</span><br><span class="line">                    name: &#39;Edward King 1&#39;,</span><br><span class="line">                    age: &#39;32&#39;,</span><br><span class="line">                    address: &#39;London, Park Lane no. 1&#39;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            columns: [</span><br><span class="line">                    &#123;</span><br><span class="line">                    title: &#39;name&#39;,</span><br><span class="line">                    dataIndex: &#39;name&#39;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                    title: &#39;age&#39;,</span><br><span class="line">                    dataIndex: &#39;age&#39;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                    title: &#39;address&#39;,</span><br><span class="line">                    dataIndex: &#39;address&#39;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                    title: &#39;operation&#39;,</span><br><span class="line">                    dataIndex: &#39;operation&#39;,</span><br><span class="line">                    scopedSlots: &#123; customRender: &#39;operation&#39; &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">                submit:function()&#123;</span><br><span class="line"></span><br><span class="line">                    axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:1594&#x2F;wallet&#x2F;wx_pay&#x2F;&#39;).then((result) &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">                    console.log(result.data.img);</span><br><span class="line"></span><br><span class="line">                    this.src &#x3D; &quot;http:&#x2F;&#x2F;127.0.0.1:1594&#x2F;static&#x2F;upload&#x2F;&quot;+result.data.img</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                onDelete(key) &#123;</span><br><span class="line">                    console.log(this.dataSource[key]);</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 三方支付 </tag>
            
            <tag> 微信支付 </tag>
            
            <tag> 二维码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>payPal跨境支付</title>
      <link href="/myhexo/2020/12/26/date1225/"/>
      <url>/myhexo/2020/12/26/date1225/</url>
      
        <content type="html"><![CDATA[<h4 id="三方支付前言"><a href="#三方支付前言" class="headerlink" title="三方支付前言"></a>三方支付前言</h4><ul><li>一旦回调不成功支付宝不光用支付id可以查询支付状态，也可以用订单id查询</li><li>微信支付为什么要有钱包<ul><li>为了解耦（减少耦合度，银行对接充值，购买逻辑和钱包结合，下方三个都改成充值业务，简化操作）</li></ul></li><li>与支付宝，微信相比，Paypal的优势是实时获取汇率</li></ul><h3 id="1-payPal跨境支付平台"><a href="#1-payPal跨境支付平台" class="headerlink" title="1 payPal跨境支付平台"></a>1 payPal跨境支付平台</h3><ul><li>Python3+Django2集成PayPal(贝宝)跨境支付三方接口以及订单查询和退款业务</li></ul><h4 id="1-1-前言"><a href="#1-1-前言" class="headerlink" title="1.1 前言"></a>1.1 前言</h4><p>​        如果您所在的公司涉及外贸或者跨境支付业务，那一定听说过大名鼎鼎的PayPal，总的来说，PayPal在跨国贸易里的优势还是比较大的，作为一种外贸支付方式，目前在国际贸易支付服务中倍受亿万用户追捧，是全球商户和消费者最受欢迎的电子支付方式之一，在跨境交易中有着超过90%的卖家和超过85%的买家认可并正在使用PayPal电子支付业务。当然，PayPal国际业务体量如此惊人，肯定不是毫无原因的。</p><p>​        PayPal支付的优势就是其业务网络遍布全球。目前PayPal的庞大网络覆盖了全球200多个国家，可提供20多种语言服务，并接受100多种货币付款和56种货币提现。同时，还允许在账户中持有25种货币余额。换句话说，只要付款人拥有一个PayPal账户，他就拥有了在200多个国家进行电子支付购物，并在需要服务的时候享受到母语支持的各种便捷服务。</p><h4 id="1-2-网址"><a href="#1-2-网址" class="headerlink" title="1.2 网址"></a>1.2 网址</h4><h5 id="1-2-1-官网"><a href="#1-2-1-官网" class="headerlink" title="1.2.1 官网"></a>1.2.1 官网</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://www.paypal.com</span></span><br></pre></td></tr></table></figure><h5 id="1-2-2-开发者平台"><a href="#1-2-2-开发者平台" class="headerlink" title="1.2.2 开发者平台"></a>1.2.2 开发者平台</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://developer.paypal.com/developer/accounts/</span></span><br></pre></td></tr></table></figure><h4 id="1-3-具体代码"><a href="#1-3-具体代码" class="headerlink" title="1.3 具体代码"></a>1.3 具体代码</h4><ul><li>django端代码</li></ul><h5 id="1-3-1-utils-py"><a href="#1-3-1-utils-py" class="headerlink" title="1.3.1 utils.py"></a>1.3.1 utils.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> paypalrestsdk</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成订单号</span></span><br><span class="line"><span class="keyword">from</span> MyAuthorization <span class="keyword">import</span> decodeToken</span><br><span class="line"><span class="keyword">from</span> walletapp.models <span class="keyword">import</span> OrderModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_trade_no</span>():</span></span><br><span class="line">    d = datetime.datetime.now()</span><br><span class="line">    base = <span class="string">&#x27;Maple&#x27;</span></span><br><span class="line">    time_str = <span class="string">&#x27;%04d%02d%02d%02d%02d%02d&#x27;</span> % (d.year, d.month, d.day, d.hour, d.minute, d.second)</span><br><span class="line">    rand_num = <span class="built_in">str</span>(random.randint(<span class="number">10000</span>, <span class="number">99999</span>))</span><br><span class="line">    <span class="keyword">return</span> base + time_str + rand_num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payment</span>(<span class="params">request</span>):</span></span><br><span class="line">    total = <span class="built_in">int</span>(request.GET.get(<span class="string">&#x27;total&#x27;</span>))</span><br><span class="line">    token = request.GET.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    paypalrestsdk.configure(&#123;</span><br><span class="line">        <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;sandbox&quot;</span>,              <span class="comment"># sandbox代表沙盒</span></span><br><span class="line">        <span class="string">&quot;client_id&quot;</span>: <span class="string">&quot;AfWM56tDHEiAIWWDAP_CjsK3CWuZnmBcjCZczaM3gpGuvhoTO2UiWgn4rCmgJdEmAEKjsIC6w2VCENuM&quot;</span>,</span><br><span class="line">        <span class="string">&quot;client_secret&quot;</span>: <span class="string">&quot;EFVWfHa5fMiVT8TIqiJPn14O5y7Rp_yGmiRnTF3K_LYGqg4DtfF5AsLy83EWy_owdrU5SySROx2JI_41&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    payment = paypalrestsdk.Payment(&#123;</span><br><span class="line">        <span class="string">&quot;intent&quot;</span>: <span class="string">&quot;sale&quot;</span>,</span><br><span class="line">        <span class="string">&quot;payer&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;payment_method&quot;</span>: <span class="string">&quot;paypal&quot;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;redirect_urls&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;return_url&quot;</span>: <span class="string">&quot;http://localhost:1594/wallet/execute/?user_token=&quot;</span> + token + <span class="string">&#x27;&amp;total=&#x27;</span> + <span class="built_in">str</span>(total),  <span class="comment"># 支付成功跳转页面</span></span><br><span class="line">            <span class="string">&quot;cancel_url&quot;</span>: <span class="string">&quot;http://localhost:8080/pay_for&quot;</span>&#125;,  <span class="comment"># 取消支付页面</span></span><br><span class="line">        <span class="string">&quot;transactions&quot;</span>: [&#123;</span><br><span class="line">            <span class="string">&quot;amount&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;total&quot;</span>: total,</span><br><span class="line">                <span class="string">&quot;currency&quot;</span>: <span class="string">&quot;USD&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;description&quot;</span>: <span class="string">&quot;可可爱订单支付&quot;</span>&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payment.create():</span><br><span class="line">        print(<span class="string">&quot;Payment created successfully&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> payment.links:</span><br><span class="line">            <span class="keyword">if</span> link.rel == <span class="string">&quot;approval_url&quot;</span>:</span><br><span class="line">                approval_url = <span class="built_in">str</span>(link.href)</span><br><span class="line">                print(<span class="string">&quot;Redirect for approval: %s&quot;</span> % (approval_url))</span><br><span class="line">                <span class="keyword">return</span> redirect(approval_url)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(payment.error)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&quot;支付失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payment_execute</span>(<span class="params">request</span>):</span></span><br><span class="line"></span><br><span class="line">    paymentid = request.GET.get(<span class="string">&quot;paymentId&quot;</span>)    <span class="comment"># 订单id</span></span><br><span class="line">    payerid = request.GET.get(<span class="string">&quot;PayerID&quot;</span>)        <span class="comment"># 支付者id</span></span><br><span class="line"></span><br><span class="line">    payment = paypalrestsdk.Payment.find(paymentid)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> payment.execute(&#123;<span class="string">&quot;payer_id&quot;</span>: payerid&#125;):</span><br><span class="line">        print(<span class="string">&quot;Payment execute successfully&quot;</span>)</span><br><span class="line">        <span class="comment"># 生成订单号</span></span><br><span class="line">        number = create_trade_no()</span><br><span class="line">        print(<span class="number">123</span>, number)</span><br><span class="line">        token = request.GET.get(<span class="string">&#x27;user_token&#x27;</span>)</span><br><span class="line">        user_info = jwt.decode(token, settings.SECRET_KEY)</span><br><span class="line">        money = request.GET.get(<span class="string">&#x27;total&#x27;</span>)</span><br><span class="line">        OrderModel.objects.create(user_id=user_info.get(<span class="string">&#x27;user_id&#x27;</span>), order_id=number, pay_id=paymentid, money=<span class="built_in">int</span>(money), method=<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&quot;支付成功&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(payment.error)        <span class="comment"># Error Hash</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&quot;支付失败&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="1-3-2-urls-py"><a href="#1-3-2-urls-py" class="headerlink" title="1.3.2 urls.py"></a>1.3.2 urls.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> walletapp.utils <span class="keyword">import</span> payment, payment_execute</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;paypal/&#x27;</span>, payment),            <span class="comment"># 支付地址</span></span><br><span class="line">    path(<span class="string">&#x27;execute/&#x27;</span>, payment_execute),   <span class="comment"># 回调</span></span><br><span class="line">    <span class="comment"># path(&#x27;refund/&#x27;, payment_execute),   # 退款</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="1-3-3-前端测试代码"><a href="#1-3-3-前端测试代码" class="headerlink" title="1.3.3 前端测试代码"></a>1.3.3 前端测试代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        支付金额：&lt;a-input v-model&#x3D;&quot;money&quot;&gt;&lt;&#x2F;a-input&gt;</span><br><span class="line">        &lt;a-button @click&#x3D;&quot;payPal&quot;&gt;支付&lt;&#x2F;a-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#39;axios&#39;</span><br><span class="line">&#x2F;&#x2F; import &#123; get_paypal &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            money:&#39;&#39;,</span><br><span class="line">            token:localStorage.getItem(&#39;token&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        payPal()&#123;</span><br><span class="line">            window.location.href &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:1594&#x2F;wallet&#x2F;paypal&#x2F;?total&#x3D;&#39;+this.money+&#39;&amp;token&#x3D;&#39;+this.token</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1-4-3-获取信息"><a href="#1-4-3-获取信息" class="headerlink" title="1.4.3 获取信息"></a>1.4.3 获取信息</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">id1: PAYID-L7UHOHQ2UP62622M5482824G </span><br><span class="line">id2: <span class="number">69</span>KKTUUH2AXXE </span><br><span class="line">id3: &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;PAYID-L7UHOHQ2UP62622M5482824G&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;intent&#x27;</span>: <span class="string">&#x27;sale&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;created&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;cart&#x27;</span>: <span class="string">&#x27;3YB50174X4033431P&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;payer&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;payment_method&#x27;</span>: </span><br><span class="line">        <span class="string">&#x27;paypal&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;VERIFIED&#x27;</span>, </span><br><span class="line">        <span class="string">&#x27;payer_info&#x27;</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;sb-5ib4l4352663@personal.example.com&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;first_name&#x27;</span>: <span class="string">&#x27;John&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;last_name&#x27;</span>: <span class="string">&#x27;Doe&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;payer_id&#x27;</span>: <span class="string">&#x27;69KKTUUH2AXXE&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;shipping_address&#x27;</span>: &#123;</span><br><span class="line">                        <span class="string">&#x27;recipient_name&#x27;</span>: <span class="string">&#x27;Doe John&#x27;</span>, </span><br><span class="line">                        <span class="string">&#x27;line1&#x27;</span>: <span class="string">&#x27;NO 1 Nan Jin Road&#x27;</span>, </span><br><span class="line">                        <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Shanghai&#x27;</span>, </span><br><span class="line">                        <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;Shanghai&#x27;</span>, </span><br><span class="line">                        <span class="string">&#x27;postal_code&#x27;</span>: <span class="string">&#x27;200000&#x27;</span>, </span><br><span class="line">                        <span class="string">&#x27;country_code&#x27;</span>: <span class="string">&#x27;C2&#x27;</span></span><br><span class="line">                    &#125;, </span><br><span class="line">             <span class="string">&#x27;country_code&#x27;</span>: <span class="string">&#x27;C2&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&#x27;transactions&#x27;</span>: [&#123;</span><br><span class="line">            <span class="string">&#x27;amount&#x27;</span>: &#123;<span class="string">&#x27;total&#x27;</span>: <span class="string">&#x27;5.00&#x27;</span>, <span class="string">&#x27;currency&#x27;</span>: <span class="string">&#x27;USD&#x27;</span>&#125;, </span><br><span class="line">            <span class="string">&#x27;payee&#x27;</span>: &#123;<span class="string">&#x27;merchant_id&#x27;</span>: <span class="string">&#x27;DQ2MFCBJPSDHN&#x27;</span>, <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;sb-wmmee4354779@business.example.com&#x27;</span>&#125;, </span><br><span class="line">            <span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;可可爱订单支付&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;item_list&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;shipping_address&#x27;</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;recipient_name&#x27;</span>: <span class="string">&#x27;Doe John&#x27;</span>, <span class="string">&#x27;line1&#x27;</span>: <span class="string">&#x27;NO 1 Nan Jin Road&#x27;</span>, <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;state&#x27;</span>: <span class="string">&#x27;Shanghai&#x27;</span>, <span class="string">&#x27;postal_code&#x27;</span>: <span class="string">&#x27;200000&#x27;</span>, <span class="string">&#x27;country_code&#x27;</span>: <span class="string">&#x27;C2&#x27;</span>&#125;&#125;, <span class="string">&#x27;related_resources&#x27;</span>: []</span><br><span class="line">        &#125;], </span><br><span class="line">    <span class="string">&#x27;redirect_urls&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;return_url&#x27;</span>: <span class="string">&#x27;http://localhost:1594/wallet/execute/?paymentId=PAYID-L7UHOHQ2UP62622M5482824G&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;cancel_url&#x27;</span>: <span class="string">&#x27;http://localhost:3000/paypal/cancel/&#x27;</span></span><br><span class="line">        &#125;, </span><br><span class="line">    <span class="string">&#x27;create_time&#x27;</span>: <span class="string">&#x27;2020-12-27T11:59:25Z&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;update_time&#x27;</span>: <span class="string">&#x27;2020-12-27T11:59:55Z&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;links&#x27;</span>: [&#123;</span><br><span class="line">            <span class="string">&#x27;href&#x27;</span>: <span class="string">&#x27;https://api.sandbox.paypal.com/v1/payments/payment/PAYID-L7UHOHQ2UP62622M5482824G&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;rel&#x27;</span>: <span class="string">&#x27;self&#x27;</span>, <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;GET&#x27;</span>&#125;, </span><br><span class="line">              &#123;<span class="string">&#x27;href&#x27;</span>: <span class="string">&#x27;https://api.sandbox.paypal.com/v1/payments/payment/PAYID-L7UHOHQ2UP62622M5482824G/execute&#x27;</span>, <span class="string">&#x27;rel&#x27;</span>: <span class="string">&#x27;execute&#x27;</span>, <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>&#125;, </span><br><span class="line">              &#123;<span class="string">&#x27;href&#x27;</span>: <span class="string">&#x27;https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&amp;token=EC-3YB50174X4033431P&#x27;</span>, <span class="string">&#x27;rel&#x27;</span>: <span class="string">&#x27;approval_url&#x27;</span>, <span class="string">&#x27;method&#x27;</span>: <span class="string">&#x27;REDIRECT&#x27;</span>&#125;</span><br><span class="line">        ]&#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-4-有效信息"><a href="#1-4-4-有效信息" class="headerlink" title="1.4.4 有效信息"></a>1.4.4 有效信息</h5><ul><li><p>订单状态</p></li><li><p>订单号</p><ul><li>根据这个可以查询交易流水</li></ul></li></ul><ul><li>订单创建时间</li></ul><ul><li>价格</li></ul><h5 id="1-4-5-查询交易流水"><a href="#1-4-5-查询交易流水" class="headerlink" title="1.4.5 查询交易流水"></a>1.4.5 查询交易流水</h5><ul><li>根据pay_id 进行退款</li></ul><h4 id="1-5-总结"><a href="#1-5-总结" class="headerlink" title="1.5 总结"></a>1.5 总结</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">总体而言，没有什么特别的难度，整个支付流程相对支付宝来说，更加的紧凑，但是做支付安全是第一要务，就个人体验（仅是个人体验）层面来说，支付宝在安全方面做的还是要比Paypal略强一些，起码在信用卡欺诈和盗刷方面风控做的更好，在风险保障和赔付方面都有提供保险，当然由于金融环境的差异较大，并不是说Paypal的风控做的不好，只是机制不同，在国外，如果持卡人的信用卡被盗刷，一般发卡组织会让商家去承担责任，而国内只能在交易环节设置更多的验证，本质上说是要持卡人承担责任。这也是为什么支付宝的风控看起来更好的原因。</span><br><span class="line"></span><br><span class="line">最后就是关于费率问题，Paypal官方给出的费率是每笔交易收取3.9%+$0.3（根据你的交易流水，比例可以优惠，具体下限看接入者的月营业额度），不过这可是美刀，不得不说这个费率是相当的高，但是国内做境外支付的电商，一般还是要接入Paypal作为支付方式。支付宝的费率基本上在1.2%左右，具体的费率也看交易流水，有实力的下限可以做到基本没有，单纯的看费率似乎支付宝更有优势，但是别忘记了，这样对比是不科学的，因为凡是接入Paypal的都是看中覆盖外币业务的地区，费率则是投资人该考虑的问题了。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> paypal </tag>
            
            <tag> 三方支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步底层代码实现邮件发送</title>
      <link href="/myhexo/2020/12/24/date1224/"/>
      <url>/myhexo/2020/12/24/date1224/</url>
      
        <content type="html"><![CDATA[<h3 id="1-栈和队列"><a href="#1-栈和队列" class="headerlink" title="1 栈和队列"></a>1 栈和队列</h3><h4 id="1-1-队列"><a href="#1-1-队列" class="headerlink" title="1.1 队列"></a>1.1 队列</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyQueue</span>:</span></span><br><span class="line">    <span class="comment"># 默认继承object类，python3里面不需要写</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># def __init__(self, s):带参，初始化需要传参</span></span><br><span class="line"><span class="comment"># 是初始化方法，没有返回值，__new__是构造方法，有返回值。构造方法优先于初始化列表</span></span><br><span class="line">       self.s = []</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, x:<span class="built_in">int</span></span>) -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="comment"># 声明类型，减少bug，提高代码可读性</span></span><br><span class="line">        <span class="comment"># 箭头方法：代表返回值，什么也不返回，方法被建立后，返回什么</span></span><br><span class="line">        self.s.append(x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>) -&gt; int:</span></span><br><span class="line">        <span class="comment"># 拿到值做任务（task_id————&gt;任务id）</span></span><br><span class="line">        <span class="keyword">return</span> self.s.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">empty</span>(<span class="params">self</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">bool</span>(self.s)</span><br><span class="line"></span><br><span class="line">myq = MyQueue()</span><br><span class="line">my.push(<span class="number">1</span>)</span><br><span class="line">print(myq.pop())</span><br><span class="line">print(myq.empty())</span><br></pre></td></tr></table></figure><h4 id="1-2-栈"><a href="#1-2-栈" class="headerlink" title="1.2 栈"></a>1.2 栈</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">self.s = []</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, x:<span class="built_in">int</span></span>) -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        self.s.append(x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> sekf.s.pop()</span><br><span class="line">    <span class="comment"># 默认从最后删除</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">size</span>(<span class="params">self</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.s)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">empty</span>(<span class="params">self</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span> self.s == []</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 位运算，十进制转换二进制</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transform</span>(<span class="params">num:<span class="built_in">int</span></span>) -&gt; str:</span></span><br><span class="line">    stack1 = MyStack()</span><br><span class="line">    <span class="keyword">while</span> num != <span class="number">0</span>:</span><br><span class="line">        remain = num % <span class="number">2</span><span class="comment"># 取余</span></span><br><span class="line">        num = <span class="built_in">int</span>(num/<span class="number">2</span>)</span><br><span class="line">        stack1.push(remain)<span class="comment"># 入栈</span></span><br><span class="line">    w = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> stack.empty():</span><br><span class="line">        s += <span class="built_in">str</span>(stack1.pop())</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">print(transform(<span class="number">13</span>))</span><br></pre></td></tr></table></figure><h3 id="2-异步引入"><a href="#2-异步引入" class="headerlink" title="2 异步引入"></a>2 异步引入</h3><h4 id="2-1-导入原因"><a href="#2-1-导入原因" class="headerlink" title="2.1 导入原因"></a>2.1 导入原因</h4><p>由于django自身模型导致等待任务，阻塞，所以引入异步这个概念。针对于celery模型的思考，其实质就是一个消息队列，采用的是异步消费。异步任务队列是一个容器，遵循的是先进先出，继承的是基础类。针对于异步操作，我们可以引入多进程，多线程以及协程实现。但是针对于性能的考虑，我首先引入了多线程，但是线程切换仍然十分浪费资源，最合适的应该是协程。</p><h4 id="2-2-思考导入"><a href="#2-2-思考导入" class="headerlink" title="2.2 思考导入"></a>2.2 思考导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job1</span>():</span></span><br><span class="line">    print(<span class="string">&quot;I&#x27;m working for job1&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    print(<span class="string">&quot;job1:&quot;</span>, datetime.datetime.now())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job2</span>():</span></span><br><span class="line">    print(<span class="string">&quot;I&#x27;m working for job2&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    print(<span class="string">&quot;job2:&quot;</span>, datetime.datetime.now())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job1_task</span>():</span></span><br><span class="line">    threading.Thread(target=job1).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">job2_task</span>():</span></span><br><span class="line">    threading.Thread(target=job2).start()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    schedule.every(<span class="number">1</span>).seconds.do(job1_task)</span><br><span class="line">    schedule.every(<span class="number">1</span>).seconds.do(job2_task)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        schedule.run_pending()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">run()</span><br></pre></td></tr></table></figure><h4 id="2-3-静态方法"><a href="#2-3-静态方法" class="headerlink" title="2.3 静态方法"></a>2.3 静态方法</h4><ul><li>使用的注意事项</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Action</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.backend = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">    <span class="comment"># @staticmethod         # 使用 @staticmethod方法，不再使用类中的属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">act</span>(<span class="params">self</span>):</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self.backend:</span><br><span class="line">            print(i)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&#x27;运行秒数：&#x27;</span>, end-start)</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span>():</span></span><br><span class="line">        print(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a = Action()</span><br><span class="line">print(a.act())</span><br><span class="line">Action.tell()<span class="comment"># 不需要实例化对象和方法，直接调用</span></span><br></pre></td></tr></table></figure><h4 id="2-4-底层代码实现异步"><a href="#2-4-底层代码实现异步" class="headerlink" title="2.4 底层代码实现异步"></a>2.4 底层代码实现异步</h4><h5 id="2-4-1-多线程（第一次思考）"><a href="#2-4-1-多线程（第一次思考）" class="headerlink" title="2.4.1 多线程（第一次思考）"></a>2.4.1 多线程（第一次思考）</h5><ul><li>代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># asynchronous</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># backend消息队列--------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BackendQueue</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.queue_list = []</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, x:<span class="built_in">int</span></span>) -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        self.queue_list.append(x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> self.queue_list.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">empty</span>(<span class="params">self</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">bool</span>(self.queue_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># myq = BackendQueue()</span></span><br><span class="line"><span class="comment"># myq.push(1)         # 存入任务id</span></span><br><span class="line"><span class="comment"># myq.push(2)</span></span><br><span class="line"><span class="comment"># myq.push(3)</span></span><br><span class="line"><span class="comment"># myq.push(4)</span></span><br><span class="line"><span class="comment"># # myq.queue_list是backend中的数据</span></span><br><span class="line"><span class="comment"># task_list = []            # 获取到的任务id列表</span></span><br><span class="line"><span class="comment"># for i in myq.queue_list:    # 从任务id列表中取出任务id交付 worker</span></span><br><span class="line"><span class="comment">#     task_list.append(i)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># worker执行任务-----------------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">asynchronous_task</span>(<span class="params">task</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;任务id:&#x27;</span>, task, <span class="string">&#x27;正在执行&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 采用多线程，worker异步执行</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">asynchronous_worker</span>(<span class="params">task_list</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(task_list)):     <span class="comment"># 根据列表长度设置相应线程数</span></span><br><span class="line">        task = task_list[i]             <span class="comment"># 获取任务id</span></span><br><span class="line">        t = threading.Thread(target=asynchronous_task(task))</span><br><span class="line">        t.start()</span><br><span class="line">        print(<span class="string">&#x27;任务执行结果：&#x27;</span>, task, <span class="string">&#x27;执行完毕&#x27;</span>)              <span class="comment"># 执行结果存入redis</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调函数-------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runQueue</span>():</span></span><br><span class="line">    myq = BackendQueue()</span><br><span class="line">    myq.push(<span class="number">1</span>)  <span class="comment"># 存入任务id</span></span><br><span class="line">    myq.push(<span class="number">2</span>)</span><br><span class="line">    myq.push(<span class="number">3</span>)</span><br><span class="line">    myq.push(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># myq.queue_list是backend中的数据</span></span><br><span class="line">    task_list = []  <span class="comment"># 获取到的任务id列表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> myq.queue_list:  <span class="comment"># 从任务id列表中取出任务id交付 worker</span></span><br><span class="line">        task_list.append(i)</span><br><span class="line">    asynchronous_worker(task_list)</span><br><span class="line"></span><br><span class="line">runQueue()</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">redis:--&gt;[1, 2, 3, 4]</span><br><span class="line">任务<span class="built_in">id</span>: <span class="number">1</span> 正在执行</span><br><span class="line">任务执行结果： <span class="number">1</span> 执行完毕</span><br><span class="line">任务<span class="built_in">id</span>: <span class="number">2</span> 正在执行</span><br><span class="line">任务执行结果： <span class="number">2</span> 执行完毕</span><br><span class="line">任务<span class="built_in">id</span>: <span class="number">3</span> 正在执行</span><br><span class="line">任务执行结果： <span class="number">3</span> 执行完毕</span><br><span class="line">任务<span class="built_in">id</span>: <span class="number">4</span> 正在执行</span><br><span class="line">任务执行结果： <span class="number">4</span> 执行完毕</span><br><span class="line">redis:--&gt;&#123;</span><br><span class="line">    <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;2&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>:<span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-2-多线程（课上代码优化）"><a href="#2-4-2-多线程（课上代码优化）" class="headerlink" title="2.4.2 多线程（课上代码优化）"></a>2.4.2 多线程（课上代码优化）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RedisQueue</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, key, **redis_kwargs</span>):</span></span><br><span class="line">        <span class="comment"># **redis_kwargs 为字典，不定长参数，可传可不传（如果是docker，一定要传，因为docker是端口映射技术）</span></span><br><span class="line">        <span class="comment"># key是形参，必须传</span></span><br><span class="line">        <span class="comment"># *args必须死元祖或者列表</span></span><br><span class="line">        self.__db = redis.Redis(**redis_kwargs)</span><br><span class="line">        <span class="comment"># __db私有变量</span></span><br><span class="line">        self.key = key</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qsize</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__db.llen(self.key)</span><br><span class="line">    <span class="comment"># 返回队列长度</span></span><br><span class="line">        <span class="comment"># list适合任务队列 </span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        self._db.rpush(self.key, item)</span><br><span class="line">        <span class="comment"># rpush 代表从右侧入队</span></span><br><span class="line">        <span class="comment"># lpush 代表从左边入队</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>):</span></span><br><span class="line">        item = self.__db.lpop(self.key)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"><span class="comment"># q = RedisQueue(&#x27;mykey&#x27;)</span></span><br><span class="line"><span class="comment"># for i in range(5):</span></span><br><span class="line"><span class="comment">#     q.push()# 消费换成 pop()，异步消费</span></span><br><span class="line"><span class="comment">#     print(i)</span></span><br><span class="line"><span class="comment">#     time.sleep(1)</span></span><br><span class="line"><span class="comment"># print(q.qsize())# celery底层，没有执行，就放入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dojob</span>():</span></span><br><span class="line">    q = ReidsQueue(<span class="string">&#x27;mykey&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        result = q.pop()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">    thread = threading.Tread(target=dojob)</span><br><span class="line">    thread.start()</span><br></pre></td></tr></table></figure><h3 id="3-Django中异步实现"><a href="#3-Django中异步实现" class="headerlink" title="3 Django中异步实现"></a>3 Django中异步实现</h3><h4 id="3-1-我的思考"><a href="#3-1-我的思考" class="headerlink" title="3.1 我的思考"></a>3.1 我的思考</h4><ul><li>线程切换十分耗时，所以我们采用协程，更加轻量级</li><li>协程是并发（多进程多线程是并行）</li><li>经过深思熟虑，后来发现，不用传递参数，只是执行任务的时候，所需参数在数据库中存储的id不同，所以只需要绑定taskid和用户id放入redis，就可以实现这个效果啦！！！</li></ul><h4 id="3-2-实现代码"><a href="#3-2-实现代码" class="headerlink" title="3.2 实现代码"></a>3.2 实现代码</h4><h5 id="3-2-1-send-email-py"><a href="#3-2-1-send-email-py" class="headerlink" title="3.2.1 send_email.py"></a>3.2.1 send_email.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 邮箱配置</span></span><br><span class="line"><span class="comment"># 配置邮件发送</span></span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.core.mail <span class="keyword">import</span> send_mail</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> UserModel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">EmailInform</span>(<span class="params">user_id</span>):</span></span><br><span class="line">        email = UserModel.objects.<span class="built_in">filter</span>(pk=user_id).first().email</span><br><span class="line">        print(<span class="number">123</span>, email)</span><br><span class="line">        username = UserModel.objects.<span class="built_in">filter</span>(pk=user_id).first().username</span><br><span class="line">        print(<span class="number">234</span>, username)</span><br><span class="line">        subject = <span class="string">&#x27;一个可爱的通知\(^o^)/~&#x27;</span></span><br><span class="line">        message = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        from_email = settings.EMAIL_FROM</span><br><span class="line">        recipient_list = [email]</span><br><span class="line">        html_message = <span class="string">&#x27;dear&#123;&#125;,您有新的通知信息了！&#x27;</span>.<span class="built_in">format</span>(username)</span><br><span class="line">        send_mail(subject=subject,</span><br><span class="line">                  message=message,</span><br><span class="line">                  from_email=from_email,</span><br><span class="line">                  recipient_list=recipient_list,</span><br><span class="line">                  html_message=html_message)</span><br></pre></td></tr></table></figure><h5 id="3-2-2-asynchronous-py"><a href="#3-2-2-asynchronous-py" class="headerlink" title="3.2.2 asynchronous.py"></a>3.2.2 asynchronous.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 协程----------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把任务放入消息队列，本次定义2个任务一执行</span></span><br><span class="line"><span class="comment"># 存入任务id的队列是 5号库</span></span><br><span class="line"><span class="comment"># 存入任务结果的队列是 6号库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> noticeapp.send_email <span class="keyword">import</span> EmailInform</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoticeQueue</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        self.__db = redis.Redis(db=<span class="number">5</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">        self.key = <span class="string">&#x27;queue&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="comment"># 从右侧入队</span></span><br><span class="line">        self.__db.rpush(self.key, item)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 从左侧出队</span></span><br><span class="line">        <span class="keyword">return</span> self.__db.lpop(self.key)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qsize</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 查看队列长度</span></span><br><span class="line">        <span class="keyword">return</span> self.__db.llen(self.key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行任务的worker</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">email_worker</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 存放任务结果</span></span><br><span class="line">    r = redis.Redis(db=<span class="number">6</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">    key = request.GET.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">    <span class="comment"># 也可以写获取用户token，通过解码再获取</span></span><br><span class="line">    q = NoticeQueue(<span class="string">&#x27;queue&#x27;</span>)</span><br><span class="line">    q.push(key)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> q.qsize() == <span class="number">0</span>:      <span class="comment"># 没有任务直接退出</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> q.qsize() &gt;= <span class="number">2</span>:    <span class="comment"># 每两个执行一次，执行成功，就在列表中删除任务id</span></span><br><span class="line">            user_id1 = <span class="built_in">int</span>(q.pop())</span><br><span class="line">            user_id2 = <span class="built_in">int</span>(q.pop())</span><br><span class="line">            print(user_id1)</span><br><span class="line">            print(user_id2)</span><br><span class="line">            t1 = gevent.spawn(EmailInform, user_id1)</span><br><span class="line">            t2 = gevent.spawn(EmailInform, user_id2)</span><br><span class="line">            t1.join()       <span class="comment"># 等待协程执行完毕</span></span><br><span class="line">            t2.join()</span><br><span class="line">            r.<span class="built_in">set</span>(user_id1, <span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">            r.<span class="built_in">set</span>(user_id2, <span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;okok&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            user_id = <span class="built_in">int</span>(q.pop())</span><br><span class="line">            t = gevent.spawn(EmailInform, user_id)</span><br><span class="line">            t.join()</span><br><span class="line">            r.<span class="built_in">set</span>(user_id,<span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;等待执行&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="3-2-3-urls-py"><a href="#3-2-3-urls-py" class="headerlink" title="3.2.3 urls.py"></a>3.2.3 urls.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> noticeapp.asynchronous <span class="keyword">import</span> email_worker</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;email_worker/&#x27;</span>, email_worker)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>还是有一点小小的bug，但是基础都已经实现了，同时接到很多的时候，就可以异步啦，测试的时候注释掉一个的效果！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 异步 </tag>
            
            <tag> 线程，协程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB + DWebSocket 实现聊天室</title>
      <link href="/myhexo/2020/10/23/date1223/"/>
      <url>/myhexo/2020/10/23/date1223/</url>
      
        <content type="html"><![CDATA[<h3 id="1-引入定时器"><a href="#1-引入定时器" class="headerlink" title="1 引入定时器"></a>1 引入定时器</h3><ul><li>celery中也有定时器，但实质上，底层认知如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dojob</span>():</span></span><br><span class="line">    requests.get(<span class="string">&#x27;http://127.0.0.1:1594/sendmsg/?msg=&quot;xxx&quot;&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;运行任务了&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loopfunc</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    dojob()</span></span><br><span class="line"><span class="string">    time.sleep(60)</span></span><br><span class="line"><span class="string">    # 定时器</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">loopfunc()</span></span><br></pre></td></tr></table></figure><h3 id="2-表结构"><a href="#2-表结构" class="headerlink" title="2 表结构"></a>2 表结构</h3><h4 id="2-1-消息表"><a href="#2-1-消息表" class="headerlink" title="2.1 消息表"></a>2.1 消息表</h4><ul><li>设置三个字段，分别是 id，message，chat_id</li><li>集合名称是聊天表的uuid</li></ul><h4 id="2-2-聊天表"><a href="#2-2-聊天表" class="headerlink" title="2.2 聊天表"></a>2.2 聊天表</h4><ul><li>设置三个字段，分别为id，user_a，user_b， uuid</li><li>因为mongodb存储的方式为集合，所以 _id 是唯一的，所以存储的chat_id我设定为uuid字符串，并且为对应消息表的集合名称！</li></ul><h3 id="3-Django端"><a href="#3-Django端" class="headerlink" title="3 Django端"></a>3 Django端</h3><h4 id="3-1-utils-py"><a href="#3-1-utils-py" class="headerlink" title="3.1 utils.py"></a>3.1 utils.py</h4><ul><li>开发存在一定问题，后续排查bug</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 聊天室</span></span><br><span class="line"></span><br><span class="line">text_list = []</span><br><span class="line">tmp = []</span><br><span class="line">user_a = <span class="string">&#x27;&#x27;</span></span><br><span class="line">user_b = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line">message_id = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line"><span class="comment"># 最关键的id，foreign集合中它的值是所对应聊天记录的集合名！！！！</span></span><br><span class="line"><span class="meta">@accept_websocket</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_send_message</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 修改全局变量</span></span><br><span class="line">    <span class="keyword">global</span> user_a</span><br><span class="line">    <span class="keyword">global</span> user_b</span><br><span class="line">    <span class="keyword">global</span> message_id</span><br><span class="line">    <span class="keyword">import</span> pymongo</span><br><span class="line">    client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">    db = client[<span class="string">&#x27;gogogo_db&#x27;</span>]</span><br><span class="line">    <span class="built_in">set</span> = db[<span class="string">&#x27;foreign&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> request.is_websocket():</span><br><span class="line">        <span class="comment"># 解密，为了存储聊天信息</span></span><br><span class="line">        user_info = jwt.decode(request.GET.get(<span class="string">&#x27;token&#x27;</span>), settings.SECRET_KEY)</span><br><span class="line">        user_id = user_info.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        <span class="comment"># 匹配用户，两个用户才建立聊天表（储存用户id）</span></span><br><span class="line">        <span class="keyword">if</span> user_a == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            user_a = user_id</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> user_a != user_id <span class="keyword">and</span> user_b == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                user_b = user_id</span><br><span class="line">                <span class="keyword">if</span> user_a &gt; user_b:</span><br><span class="line">                    <span class="comment"># 小的在前，大的在后</span></span><br><span class="line">                    user_a, user_b = user_b, user_a</span><br><span class="line">                    print(user_a, user_b, <span class="string">&#x27;匹配成功&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> user_a != <span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> user_b != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            obj = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">set</span>.find(&#123;<span class="string">&quot;user_id_a&quot;</span>: user_a, <span class="string">&quot;user_id_b&quot;</span>: user_b&#125;)]</span><br><span class="line">            <span class="keyword">if</span> obj:</span><br><span class="line">                message_id = obj[<span class="number">0</span>].get(<span class="string">&#x27;message_id&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">set</span>.insert(</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="string">&#x27;user_id_a&#x27;</span>: user_a,</span><br><span class="line">                        <span class="string">&#x27;user_id_b&#x27;</span>: user_b,</span><br><span class="line">                        <span class="string">&#x27;message_id&#x27;</span>: message_id</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">            tmp.append(request.websocket)</span><br><span class="line">            <span class="comment"># 把所有连接的 websocket 都加入 tmp 列表中</span></span><br><span class="line">            <span class="keyword">for</span> message <span class="keyword">in</span> request.websocket:</span><br><span class="line">                <span class="keyword">if</span> message <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    message = message.decode()</span><br><span class="line">                    <span class="comment"># message.decode() 是前端发送来的消息</span></span><br><span class="line">                    <span class="comment"># print(time.time(), message.decode())</span></span><br><span class="line">                    sat = db[message_id]</span><br><span class="line">                    <span class="comment"># 存入数据，根据聊天表的 message_id 做表名</span></span><br><span class="line">                    sat.insert(</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="string">&#x27;user_id&#x27;</span>: user_id,</span><br><span class="line">                            <span class="string">&#x27;message&#x27;</span>: message</span><br><span class="line">                        &#125;</span><br><span class="line">                    )</span><br><span class="line">                    <span class="keyword">for</span> ws <span class="keyword">in</span> tmp:</span><br><span class="line">                        text = db[message_id].find()</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> text:</span><br><span class="line">                            dic = &#123;&#125;</span><br><span class="line">                            dic[<span class="string">&#x27;user_id&#x27;</span>] = i[<span class="string">&#x27;user_id&#x27;</span>]</span><br><span class="line">                            dic[<span class="string">&#x27;username&#x27;</span>] = UserModel.objects.get(pk=<span class="built_in">int</span>(i[<span class="string">&#x27;user_id&#x27;</span>])).username</span><br><span class="line">                            dic[<span class="string">&#x27;message&#x27;</span>] = i[<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line">                            text_list.append(dic)</span><br><span class="line">                    <span class="keyword">import</span> json</span><br><span class="line">                    request.websocket.send(json.dumps(text_list))</span><br><span class="line">                        <span class="comment"># json.dumps(text_list, ensure_ascii=False)</span></span><br><span class="line">                        <span class="comment"># 不加 ensure_ascii = False 会乱码，加了无法传递，会断开连接，前端想办法吧</span></span><br></pre></td></tr></table></figure><h4 id="3-2-urls-py"><a href="#3-2-urls-py" class="headerlink" title="3.2 urls.py"></a>3.2 urls.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sharesapp <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> sharesapp.utils <span class="keyword">import</span> websocketlink, admin_send_message</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;shares_add/&#x27;</span>, views.SharesWeekKView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;websocketlink/&#x27;</span>, websocketlink),</span><br><span class="line">    path(<span class="string">&#x27;send_message_admin/&#x27;</span>, admin_send_message)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="3-3-Questions"><a href="#3-3-Questions" class="headerlink" title="3.3 Questions"></a>3.3 Questions</h4><p>存在问题，request.websocket.send()传递的是unicode编码的字符，需要注意！</p><p>websocket总是异常启动失败，后续等待排查</p><h3 id="4-Vue端"><a href="#4-Vue端" class="headerlink" title="4 Vue端"></a>4 Vue端</h3><h4 id="4-1-UserOnline-vue"><a href="#4-1-UserOnline-vue" class="headerlink" title="4.1 UserOnline.vue"></a>4.1 UserOnline.vue</h4><pre><code class="vue">&lt;template&gt;      &lt;div&gt;        &lt;a-button type=&quot;primary&quot; @click=&quot;showModal&quot;&gt;            实时聊天             &lt;/a-button&gt;        &lt;a-modal v-model=&quot;visible&quot; title=&quot;聊天框&quot; @ok=&quot;handleOk&quot;&gt;                          &lt;div style=&quot;height: 100px&quot;&gt;            &lt;p&gt;历史记录：&lt;/p&gt;            &lt;table&gt;              &lt;tr v-for=&quot;(h, item) in history&quot; :key=&quot;item&quot;&gt;                &lt;td&gt;&#123;&#123;h.username&#125;&#125;:&lt;/td&gt;                &lt;td&gt;&#123;&#123;h.message&#125;&#125;&lt;/td&gt;              &lt;/tr&gt;            &lt;/table&gt;          &lt;/div&gt;                     &lt;p&gt;&lt;a-textarea style=&quot;height: 100px&quot; v-model=&quot;message&quot;&gt;&lt;/a-textarea&gt;&lt;/p&gt;                     &lt;p&gt;&lt;a-button style=&quot;float: right&quot; @click=&quot;sendMessage&quot;&gt;发送消息&lt;/a-button&gt;&lt;/p&gt;          &lt;br /&gt;        &lt;/a-modal&gt;       &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;  data() &#123;    return &#123;      visible: false,      message: &quot;&quot;,      path: &quot;ws://127.0.0.1:1594/shares/send_message_admin/&quot;,      socket: &quot;&quot;,      token: localStorage.getItem(&#39;token&#39;),      history:[]    &#125;;  &#125;,  methods: &#123;    showModal() &#123;      this.visible = true;      this.init();    &#125;,    handleOk(e) &#123;      console.log(this.value);      console.log(e);      this.visible = false;    &#125;,    init: function () &#123;      if (typeof WebSocket === &quot;undefined&quot;) &#123;        alert(&quot;您的浏览器不支持socket&quot;);      &#125; else &#123;        // 实例化socket        this.socket = new WebSocket(this.path + &#39;?token=&#39; + this.token);        // 监听socket连接        this.socket.onopen = this.open;        // 监听socket错误信息        this.socket.onerror = this.error;        // 监听socket消息        this.socket.onmessage = this.getMessage;      &#125;    &#125;,    open: function (msg) &#123;      console.log(&quot;socket连接成功&quot;);    &#125;,    error: function () &#123;      console.log(&quot;连接错误&quot;);    &#125;,    getMessage: function (msg) &#123;      this.history = JSON.parse(msg.data)      console.log(&quot;后端传来的数据&quot;, msg.data); // 打印后台返回的数据    &#125;,    sendMessage: function () &#123;      this.socket.send(this.message); // 发送给后台的数据    &#125;,    close: function () &#123;      console.log(&quot;socket已经关闭&quot;);    &#125;,  &#125;,  destroyed() &#123;    // 销毁监听    this.socket.onclose = this.close;  &#125;,  mounted() &#123;&#125;,&#125;;&lt;/script&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> websocket </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB+Echarts+DWebSocket</title>
      <link href="/myhexo/2020/10/21/date1222/"/>
      <url>/myhexo/2020/10/21/date1222/</url>
      
        <content type="html"><![CDATA[<h3 id="1-MongoDB-在-Django中的配置方法"><a href="#1-MongoDB-在-Django中的配置方法" class="headerlink" title="1 MongoDB 在 Django中的配置方法"></a>1 MongoDB 在 Django中的配置方法</h3><h4 id="1-1-全局配置"><a href="#1-1-全局配置" class="headerlink" title="1.1 全局配置"></a>1.1 全局配置</h4><ul><li>settings中定义，和Mysql不冲突，但是在可视化工具中发现，数据库名字会多很多个下划线</li></ul><h5 id="1-1-1-settings-py"><a href="#1-1-1-settings-py" class="headerlink" title="1.1.1 settings.py"></a>1.1.1 settings.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;gogogo_db&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1594184&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;gogogo_mongodb&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mongoengine</span><br><span class="line">mongoengine.connect(<span class="string">&#x27;gogogo_mongodb&#x27;</span>)   <span class="comment"># 数据库名字</span></span><br></pre></td></tr></table></figure><h5 id="1-1-2-models-py"><a href="#1-1-2-models-py" class="headerlink" title="1.1.2 models.py"></a>1.1.2 models.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mongoengine</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SharesWWeekKDB</span>(<span class="params">mongoengine.Document</span>):</span></span><br><span class="line">    date = mongoengine.DateField()</span><br><span class="line">    monday_start = mongoengine.DecimalField(max_digits=<span class="number">5</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    friday_end = mongoengine.DecimalField(max_digits=<span class="number">5</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">max</span> = mongoengine.DecimalField(max_digits=<span class="number">5</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">min</span> = mongoengine.DecimalField(max_digits=<span class="number">5</span>, decimal_places=<span class="number">2</span>)</span><br><span class="line">    turnover = mongoengine.IntField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;sharesweekk&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-局部配置"><a href="#1-2-局部配置" class="headerlink" title="1.2 局部配置"></a>1.2 局部配置</h4><ul><li>views视图中加入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">db = client[<span class="string">&#x27;gogogo_db&#x27;</span>]</span><br><span class="line"><span class="built_in">set</span> = db[<span class="string">&#x27;shares&#x27;</span>]</span><br><span class="line"><span class="built_in">set</span>.insert(</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;date&#x27;</span>:date,</span><br><span class="line">                <span class="string">&#x27;monday_start&#x27;</span>: monday_start,</span><br><span class="line">                <span class="string">&#x27;friday_end&#x27;</span>: friday_end,</span><br><span class="line">                <span class="string">&#x27;max&#x27;</span>: <span class="built_in">max</span>,</span><br><span class="line">                <span class="string">&#x27;min&#x27;</span>: <span class="built_in">min</span>,</span><br><span class="line">                <span class="string">&#x27;turnover&#x27;</span>: turnover</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h3 id="2-Echarts-Vue"><a href="#2-Echarts-Vue" class="headerlink" title="2 Echarts + Vue"></a>2 Echarts + Vue</h3><ul><li>一种可视化工具，可以在前端实现不同的图哦~</li><li>安装方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts --save</span><br></pre></td></tr></table></figure><ul><li>配置全局</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts&#x27;</span></span><br><span class="line">Vue.prototype.$echarts = echarts</span><br></pre></td></tr></table></figure><h4 id="2-1-扇形统计图"><a href="#2-1-扇形统计图" class="headerlink" title="2.1 扇形统计图"></a>2.1 扇形统计图</h4><h5 id="2-1-1-代码实例"><a href="#2-1-1-代码实例" class="headerlink" title="2.1.1 代码实例"></a>2.1.1 代码实例</h5><ul><li>vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;analyzeSystem&quot;&gt;</span><br><span class="line">    &lt;div :class&#x3D;&quot;className&quot; :id&#x3D;&quot;id&quot; :style&#x3D;&quot;&#123;height:height,width:width&#125;&quot; ref&#x3D;&quot;myEchart&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import echarts from &quot;echarts&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;analyzeSystem&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    className: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;yourClassName&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    id: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;yourID&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    width: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;500px&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    height: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &quot;500px&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      chart: null</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.initChart();</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    if (!this.chart) &#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    this.chart.dispose();</span><br><span class="line">    this.chart &#x3D; null;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initChart() &#123;</span><br><span class="line">      this.chart &#x3D; echarts.init(this.$refs.myEchart);</span><br><span class="line">      &#x2F;&#x2F; 把配置和数据放这里</span><br><span class="line">      this.chart.setOption(&#123;</span><br><span class="line">        backgroundColor: &quot;#2c343c&quot;,</span><br><span class="line"></span><br><span class="line">        title: &#123;</span><br><span class="line">          text: &quot;Customized Pie&quot;,</span><br><span class="line">          left: &quot;center&quot;,</span><br><span class="line">          top: 20,</span><br><span class="line">          textStyle: &#123;</span><br><span class="line">            color: &quot;#ccc&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        tooltip: &#123;</span><br><span class="line">          trigger: &quot;item&quot;,</span><br><span class="line">          formatter: &quot;&#123;a&#125; &lt;br&#x2F;&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&quot;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        visualMap: &#123;</span><br><span class="line">          show: false,</span><br><span class="line">          min: 80,</span><br><span class="line">          max: 600,</span><br><span class="line">          inRange: &#123;</span><br><span class="line">            colorLightness: [0, 1]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">          &#123;</span><br><span class="line">            name: &quot;访问来源&quot;,</span><br><span class="line">            type: &quot;pie&quot;,</span><br><span class="line">            radius: &quot;55%&quot;,</span><br><span class="line">            center: [&quot;50%&quot;, &quot;50%&quot;],</span><br><span class="line">            data: [</span><br><span class="line">              &#123; value: 335, name: &quot;直接访问&quot; &#125;,</span><br><span class="line">              &#123; value: 310, name: &quot;邮件营销&quot; &#125;,</span><br><span class="line">              &#123; value: 274, name: &quot;联盟广告&quot; &#125;,</span><br><span class="line">              &#123; value: 235, name: &quot;视频广告&quot; &#125;,</span><br><span class="line">              &#123; value: 400, name: &quot;搜索引擎&quot; &#125;</span><br><span class="line">            ].sort(function(a, b) &#123;</span><br><span class="line">              return a.value - b.value;</span><br><span class="line">            &#125;),</span><br><span class="line">            roseType: &quot;radius&quot;,</span><br><span class="line">            label: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                  color: &quot;rgba(255, 255, 255, 0.3)&quot;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            labelLine: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  color: &quot;rgba(255, 255, 255, 0.3)&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                smooth: 0.2,</span><br><span class="line">                length: 10,</span><br><span class="line">                length2: 20</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              normal: &#123;</span><br><span class="line">                color: &quot;#c23531&quot;,</span><br><span class="line">                shadowBlur: 200,</span><br><span class="line">                shadowColor: &quot;rgba(0, 0, 0, 0.5)&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            animationType: &quot;scale&quot;,</span><br><span class="line">            animationEasing: &quot;elasticOut&quot;,</span><br><span class="line">            animationDelay: function(idx) &#123;</span><br><span class="line">              return Math.random() * 200;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h4 id="2-2-折线图"><a href="#2-2-折线图" class="headerlink" title="2.2 折线图"></a>2.2 折线图</h4><h5 id="2-2-1-代码实例"><a href="#2-2-1-代码实例" class="headerlink" title="2.2.1 代码实例"></a>2.2.1 代码实例</h5><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SharesWeekKView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        date = request.data.get(<span class="string">&#x27;date&#x27;</span>)</span><br><span class="line">        monday_start = request.data.get(<span class="string">&#x27;monday_start&#x27;</span>)</span><br><span class="line">        friday_end = request.data.get(<span class="string">&#x27;friday_end&#x27;</span>)</span><br><span class="line">        <span class="built_in">max</span> = request.data.get(<span class="string">&#x27;max&#x27;</span>)</span><br><span class="line">        <span class="built_in">min</span> = request.data.get(<span class="string">&#x27;min&#x27;</span>)</span><br><span class="line">        turnover = request.data.get(<span class="string">&#x27;turnover&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> pymongo</span><br><span class="line">        client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">        db = client[<span class="string">&#x27;gogogo_db&#x27;</span>]</span><br><span class="line">        <span class="built_in">set</span> = db[<span class="string">&#x27;shares&#x27;</span>]</span><br><span class="line">        <span class="built_in">set</span>.insert(</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;date&#x27;</span>:date,</span><br><span class="line">                <span class="string">&#x27;monday_start&#x27;</span>: monday_start,</span><br><span class="line">                <span class="string">&#x27;friday_end&#x27;</span>: friday_end,</span><br><span class="line">                <span class="string">&#x27;max&#x27;</span>: <span class="built_in">max</span>,</span><br><span class="line">                <span class="string">&#x27;min&#x27;</span>: <span class="built_in">min</span>,</span><br><span class="line">                <span class="string">&#x27;turnover&#x27;</span>: turnover</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> Response(<span class="string">&#x27;okok&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">import</span> pymongo</span><br><span class="line">        client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">        db = client[<span class="string">&#x27;gogogo_db&#x27;</span>]</span><br><span class="line">        <span class="built_in">set</span> = db[<span class="string">&#x27;shares&#x27;</span>]</span><br><span class="line">        list_mongodb = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">set</span>.find():</span><br><span class="line">            dic=&#123;&#125;</span><br><span class="line">            dic[<span class="string">&#x27;date&#x27;</span>] = i[<span class="string">&#x27;date&#x27;</span>]</span><br><span class="line">            dic[<span class="string">&#x27;monday_start&#x27;</span>] = i[<span class="string">&#x27;monday_start&#x27;</span>]</span><br><span class="line">            dic[<span class="string">&#x27;friday_end&#x27;</span>] = i[<span class="string">&#x27;friday_end&#x27;</span>]</span><br><span class="line">            dic[<span class="string">&#x27;max&#x27;</span>] = i[<span class="string">&#x27;max&#x27;</span>]</span><br><span class="line">            dic[<span class="string">&#x27;min&#x27;</span>] = i[<span class="string">&#x27;min&#x27;</span>]</span><br><span class="line">            dic[<span class="string">&#x27;turnover&#x27;</span>] = i[<span class="string">&#x27;turnover&#x27;</span>]</span><br><span class="line">            list_mongodb.append(dic)</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;data&#x27;</span>: list_mongodb, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>ShareWeekK.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;h1&gt;股票周k&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;chartLineBox&quot; style&#x3D;&quot;width: 90%;height: 70vh;&quot;&gt; &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import echarts from &quot;echarts&quot;;</span><br><span class="line">import &#123; get_share_week_k &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;analyzeSystem&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      chart: null,</span><br><span class="line">      shareList:[],</span><br><span class="line">      dateList:[],</span><br><span class="line">      maxList:[],</span><br><span class="line">      minList:[],</span><br><span class="line">      monMoney:[],</span><br><span class="line">      fridayMoney:[]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, </span><br><span class="line">    methods:&#123;</span><br><span class="line">        &#x2F;&#x2F; getList()&#123;</span><br><span class="line">        &#x2F;&#x2F;     get_share_week_k().then(res&#x3D;&gt;&#123;</span><br><span class="line">        &#x2F;&#x2F;     console.log(res.data)</span><br><span class="line">        &#x2F;&#x2F;     this.shareList &#x3D; res.data</span><br><span class="line">        &#x2F;&#x2F;         for(var i&#x3D;0;i&lt;this.shareList.length;i++)&#123;</span><br><span class="line">        &#x2F;&#x2F;             this.dateList.push(this.shareList[i][&#39;date&#39;])</span><br><span class="line">        &#x2F;&#x2F;             this.moneyList.push(this.shareList[i][&#39;max&#39;])</span><br><span class="line">        &#x2F;&#x2F;             this.numberList.push(this.shareList[i][&#39;turnover&#39;])</span><br><span class="line">        &#x2F;&#x2F;     &#125;</span><br><span class="line">        &#x2F;&#x2F; &#125;)</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted()&#123;</span><br><span class="line">        &#x2F;&#x2F; this.getList()</span><br><span class="line">        get_share_week_k().then(res&#x3D;&gt;&#123;</span><br><span class="line">            console.log(res.data)</span><br><span class="line">            this.shareList &#x3D; res.data</span><br><span class="line">                for(var i&#x3D;0;i&lt;this.shareList.length;i++)&#123;</span><br><span class="line">                    this.dateList.push(this.shareList[i][&#39;date&#39;])</span><br><span class="line">                    this.maxList.push(this.shareList[i][&#39;max&#39;])</span><br><span class="line">                    this.minList.push(this.shareList[i][&#39;min&#39;])</span><br><span class="line">                    this.monMoney.push(this.shareList[i][&#39;monday_start&#39;])</span><br><span class="line">                    this.fridayMoney.push(this.shareList[i][&#39;friday_end&#39;])</span><br><span class="line">            &#125;</span><br><span class="line">            this.chartLine &#x3D; echarts.init(document.getElementById(&#39;chartLineBox&#39;));</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 指定图表的配置项和数据</span><br><span class="line">        var option &#x3D; &#123;</span><br><span class="line">            tooltip: &#123;              &#x2F;&#x2F;设置tip提示</span><br><span class="line">                trigger: &#39;axis&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            </span><br><span class="line">            legend: &#123;               &#x2F;&#x2F;设置区分（哪条线属于什么）</span><br><span class="line">                data:[&#39;MAX 股价&#39;,&#39;MIN 股价&#39;, &#39;周一开盘价&#39;, &#39;周五收盘价&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            color: [&#39;#8AE09F&#39;, &#39;#FA6F53&#39;, &#39;pink&#39;, &#39;blue&#39;],       &#x2F;&#x2F;设置区分（每条线是什么颜色，和 legend 一一对应）</span><br><span class="line">            xAxis: &#123;                &#x2F;&#x2F;设置x轴</span><br><span class="line">                type: &#39;category&#39;,</span><br><span class="line">                boundaryGap: false,     &#x2F;&#x2F;坐标轴两边不留白</span><br><span class="line">                data: this.dateList,</span><br><span class="line">                name: &#39;DATE&#39;,           &#x2F;&#x2F;X轴 name</span><br><span class="line">                nameTextStyle: &#123;        &#x2F;&#x2F;坐标轴名称的文字样式</span><br><span class="line">                    color: &#39;#FA6F53&#39;,</span><br><span class="line">                    fontSize: 16,</span><br><span class="line">                    padding: [0, 0, 0, 20]</span><br><span class="line">                &#125;,</span><br><span class="line">                axisLine: &#123;             &#x2F;&#x2F;坐标轴轴线相关设置。</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            yAxis: &#123;</span><br><span class="line">                name: &#39;SALES VOLUME&#39;,</span><br><span class="line">                nameTextStyle: &#123;</span><br><span class="line">                    color: &#39;#FA6F53&#39;,</span><br><span class="line">                    fontSize: 16,</span><br><span class="line">                    padding: [0, 0, 10, 0]</span><br><span class="line">                &#125;,</span><br><span class="line">                axisLine: &#123;</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                type: &#39;value&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            series: [</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;周一开盘价&#39;,</span><br><span class="line">                data:  this.monMoney,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;pink&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                name: &#39;周五收盘价&#39;,</span><br><span class="line">                data:  this.fridayMoney,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;blue&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;MIN 股价&#39;,</span><br><span class="line">                data: this.minList,</span><br><span class="line">                type: &#39;line&#39;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;MAX 股价&#39;,</span><br><span class="line">                data:  this.maxList,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;#8AE09F&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              </span><br><span class="line">              &#125;,</span><br><span class="line">          ]</span><br><span class="line">        &#125;;</span><br><span class="line"> </span><br><span class="line">        &#x2F;&#x2F; 使用刚指定的配置项和数据显示图表。</span><br><span class="line">        this.chartLine.setOption(option);</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="3-DWebSocket"><a href="#3-DWebSocket" class="headerlink" title="3 DWebSocket"></a>3 DWebSocket</h3><ul><li>http 只能是前端请求后端，后端被动接受，ws 可以双向，视图中持久化连接，没有return</li></ul><p>WebSocket是一种在单个TCP连接上进行全双工通信的协议</p><p>WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。</p><p>现在，很多网站为了实现推送技术，所用的技术都是轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。</p><p>而比较新的技术去做轮询的效果是Comet。这种技术虽然可以双向通信，但依然需要反复发出请求。而且在Comet中，普遍采用的长链接，也会消耗服务器资源。</p><p>在这种情况下，HTML5定义了WebSocket协议，能更好的节省服务器资源和带宽，并且能够更实时地进行通讯数据库项目展示。</p><ul><li>django实现websocket大致上有两种方式，一种channels，一种是dwebsocket。channels依赖于redis，twisted等，相比之下使用dwebsocket要更为方便一些。</li></ul><h4 id="3-1-dwebsocket-安装和配置"><a href="#3-1-dwebsocket-安装和配置" class="headerlink" title="3.1 dwebsocket 安装和配置"></a>3.1 dwebsocket 安装和配置</h4><h5 id="3-1-1-安装"><a href="#3-1-1-安装" class="headerlink" title="3.1.1 安装"></a>3.1.1 安装</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install dwebsocket</span><br></pre></td></tr></table></figure><h5 id="3-1-2-配置"><a href="#3-1-2-配置" class="headerlink" title="3.1.2 配置"></a>3.1.2 配置</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    .....</span><br><span class="line">    .....</span><br><span class="line">    <span class="string">&#x27;dwebsocket&#x27;</span>,</span><br><span class="line">]</span><br><span class="line">WEBSOCKET_ACCEPT_ALL=<span class="literal">True</span>   <span class="comment"># 可以允许每一个单独的视图实用websockets</span></span><br></pre></td></tr></table></figure><h4 id="3-2-dwebsocket-方法"><a href="#3-2-dwebsocket-方法" class="headerlink" title="3.2 dwebsocket 方法"></a>3.2 dwebsocket 方法</h4><ul><li>request.is_websocket()<ul><li>如果是个websocket请求返回True，如果是个普通的http请求返回False,可以用这个方法区分它们。</li></ul></li><li>request.websocket<ul><li>在一个websocket请求建立之后，这个请求将会有一个websocket属性，用来给客户端提供一个简单的api通讯，如果request.is_websocket()是False，这个属性将是None。</li></ul></li><li>WebSocket.wait()<ul><li>返回一个客户端发送的信息，在客户端关闭连接之前他不会返回任何值，这种情况下，方法将返回None</li></ul></li><li>WebSocket.read()<ul><li>如果没有从客户端接收到新的消息，read方法会返回一个新的消息，如果没有，就不返回。这是一个替代wait的非阻塞方法</li></ul></li><li>WebSocket.count_messages()<ul><li>返回消息队列数量</li></ul></li><li>WebSocket.has_messages()<ul><li>如果有新消息返回True，否则返回False</li></ul></li><li>WebSocket.send(message)<ul><li>向客户端发送消息</li></ul></li><li>WebSocket.<code>__iter__</code>()<ul><li>websocket迭代器</li></ul></li></ul><h3 id="4-dwebsocket-django-mongodb-echarts-实现实时数据更新"><a href="#4-dwebsocket-django-mongodb-echarts-实现实时数据更新" class="headerlink" title="4 dwebsocket + django + mongodb + echarts 实现实时数据更新"></a>4 dwebsocket + django + mongodb + echarts 实现实时数据更新</h3><h4 id="4-1-参考代码"><a href="#4-1-参考代码" class="headerlink" title="4.1 参考代码"></a>4.1 参考代码</h4><h5 id="4-1-1-vue代码"><a href="#4-1-1-vue代码" class="headerlink" title="4.1.1 vue代码"></a>4.1.1 vue代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-layout id&#x3D;&quot;components-layout-demo-custom-trigger&quot;&gt;</span><br><span class="line">    &lt;a-layout-sider v-model&#x3D;&quot;collapsed&quot; :trigger&#x3D;&quot;null&quot; collapsible&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;logo&quot; &#x2F;&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;leftmenu :menu_number&#x3D;&#39;2&#39; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;a-layout-sider&gt;</span><br><span class="line">    &lt;a-layout&gt;</span><br><span class="line">      &lt;a-layout-header style&#x3D;&quot;background: #fff; padding: 0&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;a-icon</span><br><span class="line">          class&#x3D;&quot;trigger&quot;</span><br><span class="line">          :type&#x3D;&quot;collapsed ? &#39;menu-unfold&#39; : &#39;menu-fold&#39;&quot;</span><br><span class="line">          @click&#x3D;&quot;() &#x3D;&gt; (collapsed &#x3D; !collapsed)&quot;</span><br><span class="line">        &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div style&#x3D;&quot;float:right&quot;&gt;123123&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;a-layout-header&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a-layout-content</span><br><span class="line">        :style&#x3D;&quot;&#123; margin: &#39;24px 16px&#39;, padding: &#39;24px&#39;, background: &#39;#fff&#39;, minHeight: &#39;500px&#39; &#125;&quot;&gt;</span><br><span class="line">        </span><br><span class="line">       </span><br><span class="line">        &lt;div v-for&#x3D;&quot;item in msglist&quot; :key&#x3D;&quot;item.id&quot;&gt;</span><br><span class="line">          </span><br><span class="line">          &#123;&#123; item &#125;&#125;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;openbox&quot;&gt;咨询客服&lt;&#x2F;a-button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;a-modal v-model&#x3D;&quot;show&quot; @ok&#x3D;&quot;myok&quot;&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;p&gt;客服：说了什么&lt;&#x2F;p&gt;</span><br><span class="line">            &lt;p&gt;客户：说了什么&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;a-modal&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;&#x2F;a-layout-content&gt;</span><br><span class="line">    &lt;&#x2F;a-layout&gt;</span><br><span class="line">  &lt;&#x2F;a-layout&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">&#x2F;&#x2F; import leftmenu from &#39;.&#x2F;leftmenu.vue&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      show:false,</span><br><span class="line">      &#x2F;&#x2F;聊天记录</span><br><span class="line">      msglist:[],</span><br><span class="line">      msg: &quot;这是一个变量&quot;,</span><br><span class="line">      collapsed: false,</span><br><span class="line">      &#x2F;&#x2F;列</span><br><span class="line">      columns:[</span><br><span class="line">        &#123;title:&quot;uid&quot;,dataIndex:&quot;uid&quot;&#125;,</span><br><span class="line">        &#123;title:&quot;username&quot;,dataIndex:&quot;username&quot;&#125;,</span><br><span class="line">        &#x2F;&#x2F;指定操作列</span><br><span class="line">        &#123;title:&#39;operation&#39;,dataIndex:&#39;operation&#39;,</span><br><span class="line">        scopedSlots:&#123;customRender:&#39;operation&#39;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &#x2F;&#x2F;数据</span><br><span class="line">      dataSource:[</span><br><span class="line">        &#123;key:&#39;1&#39;,uid:1,username:&quot;小红&quot;&#125;,</span><br><span class="line">        &#123;key:&#39;2&#39;,uid:2,username:&quot;小王&quot;&#125;</span><br><span class="line">      ]</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">    var _this &#x3D; this;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;判断浏览器是否支持websocket</span><br><span class="line">    if(&quot;WebSocket&quot; in window)&#123;</span><br><span class="line"></span><br><span class="line">       console.log(&quot;支持&quot;);</span><br><span class="line">       &#x2F;&#x2F;生成websocket链接</span><br><span class="line">       var ws &#x3D; new WebSocket(&quot;ws:&#x2F;&#x2F;localhost:1594&#x2F;shares&#x2F;websocketlink&#x2F;&quot;);</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;发送链接请求</span><br><span class="line">       ws.onopen &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line">          ws.send(&quot;test&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;发送消息</span><br><span class="line">       ws.onmessage &#x3D; function(evt)&#123;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F;将获取信息打印</span><br><span class="line">          var received_msg &#x3D; evt.data;</span><br><span class="line"></span><br><span class="line">          alert(received_msg);</span><br><span class="line">          _this.msglist.push(received_msg);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;捕获断开链接</span><br><span class="line">       ws.onclose &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line">          console.log(&quot;链接已经关闭&quot;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">  </span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    myok:function()&#123;</span><br><span class="line"></span><br><span class="line">        this.show &#x3D; false;</span><br><span class="line">    &#125;,</span><br><span class="line">    openbox:function()&#123;</span><br><span class="line">        this.show &#x3D; true;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;删除操作</span><br><span class="line">    onDelete(key) &#123;</span><br><span class="line">      console.log(key);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">#components-layout-demo-custom-trigger .trigger &#123;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  line-height: 64px;</span><br><span class="line">  padding: 0 24px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  transition: color 0.3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#components-layout-demo-custom-trigger .trigger:hover &#123;</span><br><span class="line">  color: #1890ff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#components-layout-demo-custom-trigger .logo &#123;</span><br><span class="line">  height: 32px;</span><br><span class="line">  background: rgba(255, 255, 255, 0.2);</span><br><span class="line">  margin: 16px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h5 id="4-1-1-views代码"><a href="#4-1-1-views代码" class="headerlink" title="4.1.1 views代码"></a>4.1.1 views代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dwebsocket.decorators <span class="keyword">import</span> accept_websocket <span class="comment">#引入dwbsocket的accept_websocket装饰器</span></span><br><span class="line"></span><br><span class="line">clients=&#123;&#125; <span class="comment">#创建客户端列表，存储所有在线客户端</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许接受ws请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="comment">#websocket接口</span></span><br><span class="line"><span class="comment">#客户端列表</span></span><br><span class="line"><span class="meta">@accept_websocket</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">websocketlink</span>(<span class="params">request</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> request.is_websocket():</span><br><span class="line"></span><br><span class="line">userid = <span class="built_in">str</span>(uuid.uuid1())</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">message = request.websocket.wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> message:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">&#x27;websocket链接成功&#x27;</span>+<span class="built_in">str</span>(message))</span><br><span class="line">clients[userid] = request.websocket</span><br></pre></td></tr></table></figure><h4 id="4-2-Django端"><a href="#4-2-Django端" class="headerlink" title="4.2 Django端"></a>4.2 Django端</h4><h5 id="4-2-1-urls-py"><a href="#4-2-1-urls-py" class="headerlink" title="4.2.1 urls.py"></a>4.2.1 urls.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sharesapp <span class="keyword">import</span> views</span><br><span class="line"><span class="keyword">from</span> sharesapp.utils <span class="keyword">import</span> websocketlink</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;shares_add/&#x27;</span>, views.SharesWeekKView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;websocketlink/&#x27;</span>, websocketlink)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="4-2-2-utils-py"><a href="#4-2-2-utils-py" class="headerlink" title="4.2.2 utils.py"></a>4.2.2 utils.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> dwebsocket.decorators <span class="keyword">import</span> accept_websocket <span class="comment"># 引入dwbsocket的accept_websocket装饰器</span></span><br><span class="line"></span><br><span class="line">clients=&#123;&#125; <span class="comment"># 创建客户端列表，存储所有在线客户端</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许接受ws请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line"><span class="comment"># websocket接口</span></span><br><span class="line"><span class="comment"># 客户端列表</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@accept_websocket</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">websocketlink</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.is_websocket():</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># message = request.websocket.wait()</span></span><br><span class="line">            <span class="comment"># import time</span></span><br><span class="line">            <span class="comment"># time.sleep(10)</span></span><br><span class="line">            <span class="comment"># if not message:</span></span><br><span class="line">            <span class="comment">#     break</span></span><br><span class="line">            <span class="comment"># else:</span></span><br><span class="line">                <span class="keyword">import</span> pymongo</span><br><span class="line">                client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">                db = client[<span class="string">&#x27;gogogo_db&#x27;</span>]</span><br><span class="line">                <span class="built_in">set</span> = db[<span class="string">&#x27;shares&#x27;</span>]</span><br><span class="line">                list_mongodb = []</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">set</span>.find():</span><br><span class="line">                    dic = &#123;&#125;</span><br><span class="line">                    dic[<span class="string">&#x27;date&#x27;</span>] = i[<span class="string">&#x27;date&#x27;</span>]</span><br><span class="line">                    dic[<span class="string">&#x27;monday_start&#x27;</span>] = i[<span class="string">&#x27;monday_start&#x27;</span>]</span><br><span class="line">                    dic[<span class="string">&#x27;friday_end&#x27;</span>] = i[<span class="string">&#x27;friday_end&#x27;</span>]</span><br><span class="line">                    dic[<span class="string">&#x27;max&#x27;</span>] = i[<span class="string">&#x27;max&#x27;</span>]</span><br><span class="line">                    dic[<span class="string">&#x27;min&#x27;</span>] = i[<span class="string">&#x27;min&#x27;</span>]</span><br><span class="line">                    dic[<span class="string">&#x27;turnover&#x27;</span>] = i[<span class="string">&#x27;turnover&#x27;</span>]</span><br><span class="line">                    list_mongodb.append(dic)</span><br><span class="line">                print(list_mongodb)</span><br><span class="line">                <span class="keyword">import</span> json</span><br><span class="line">                request.websocket.send(json.dumps(list_mongodb))</span><br><span class="line">                <span class="keyword">import</span> time</span><br><span class="line">                time.sleep(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h4 id="4-3-Vue端"><a href="#4-3-Vue端" class="headerlink" title="4.3 Vue端"></a>4.3 Vue端</h4><ul><li>DwebSocket.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;股票周k&lt;&#x2F;h1&gt;</span><br><span class="line">        &lt;div id&#x3D;&quot;chartLineBox&quot; style&#x3D;&quot;width: 90%;height: 70vh;&quot;&gt; &lt;&#x2F;div&gt;     </span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import echarts from &quot;echarts&quot;;</span><br><span class="line">import &#123; get_share_week_k &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      shareList:[],</span><br><span class="line">      dateList:[],</span><br><span class="line">      maxList:[],</span><br><span class="line">      minList:[],</span><br><span class="line">      monMoney:[],</span><br><span class="line">      fridayMoney:[],   </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">    var _this &#x3D; this;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;判断浏览器是否支持websocket</span><br><span class="line">    if(&quot;WebSocket&quot; in window)&#123;</span><br><span class="line"></span><br><span class="line">       console.log(&quot;支持&quot;);</span><br><span class="line">       &#x2F;&#x2F;生成websocket链接</span><br><span class="line">       var ws &#x3D; new WebSocket(&quot;ws:&#x2F;&#x2F;localhost:1594&#x2F;shares&#x2F;websocketlink&#x2F;&quot;);</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;发送链接请求</span><br><span class="line">       ws.onopen &#x3D; function(e)&#123;</span><br><span class="line">          ws.send(&quot;发送数据&quot;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;发送消息</span><br><span class="line">       ws.onmessage &#x3D; function(evt)&#123;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F;将获取信息打印</span><br><span class="line">          this.shareList &#x3D; JSON.parse(evt.data)</span><br><span class="line">          console.log(JSON.parse(evt.data))</span><br><span class="line">          &#x2F;&#x2F; this.getList()</span><br><span class="line">        &#x2F;&#x2F;   ws.send(123)</span><br><span class="line">       &#125;</span><br><span class="line">       this.getList()</span><br><span class="line">       &#x2F;&#x2F;捕获断开链接</span><br><span class="line">       ws.onclose &#x3D; function()&#123;</span><br><span class="line">          console.log(&quot;链接已经关闭&quot;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">      getList()&#123;</span><br><span class="line">            get_share_week_k().then(res&#x3D;&gt;&#123;</span><br><span class="line">            console.log(res.data)</span><br><span class="line">            this.shareList &#x3D; res.data</span><br><span class="line">                for(var i&#x3D;0;i&lt;this.shareList.length;i++)&#123;</span><br><span class="line">                    this.dateList.push(this.shareList[i][&#39;date&#39;])</span><br><span class="line">                    this.maxList.push(this.shareList[i][&#39;max&#39;])</span><br><span class="line">                    this.minList.push(this.shareList[i][&#39;min&#39;])</span><br><span class="line">                    this.monMoney.push(this.shareList[i][&#39;monday_start&#39;])</span><br><span class="line">                    this.fridayMoney.push(this.shareList[i][&#39;friday_end&#39;])</span><br><span class="line">            &#125;</span><br><span class="line">            this.chartLine &#x3D; echarts.init(document.getElementById(&#39;chartLineBox&#39;));</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 指定图表的配置项和数据</span><br><span class="line">        var option &#x3D; &#123;</span><br><span class="line">            tooltip: &#123;              &#x2F;&#x2F;设置tip提示</span><br><span class="line">                trigger: &#39;axis&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            </span><br><span class="line">            legend: &#123;               &#x2F;&#x2F;设置区分（哪条线属于什么）</span><br><span class="line">                data:[&#39;MAX 股价&#39;,&#39;MIN 股价&#39;, &#39;周一开盘价&#39;, &#39;周五收盘价&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            color: [&#39;#8AE09F&#39;, &#39;#FA6F53&#39;, &#39;pink&#39;, &#39;blue&#39;],       &#x2F;&#x2F;设置区分（每条线是什么颜色，和 legend 一一对应）</span><br><span class="line">            xAxis: &#123;                &#x2F;&#x2F;设置x轴</span><br><span class="line">                type: &#39;category&#39;,</span><br><span class="line">                boundaryGap: false,     &#x2F;&#x2F;坐标轴两边不留白</span><br><span class="line">                data: this.dateList,</span><br><span class="line">                name: &#39;DATE&#39;,           &#x2F;&#x2F;X轴 name</span><br><span class="line">                nameTextStyle: &#123;        &#x2F;&#x2F;坐标轴名称的文字样式</span><br><span class="line">                    color: &#39;#FA6F53&#39;,</span><br><span class="line">                    fontSize: 16,</span><br><span class="line">                    padding: [0, 0, 0, 20]</span><br><span class="line">                &#125;,</span><br><span class="line">                axisLine: &#123;             &#x2F;&#x2F;坐标轴轴线相关设置。</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            yAxis: &#123;</span><br><span class="line">                name: &#39;SALES VOLUME&#39;,</span><br><span class="line">                nameTextStyle: &#123;</span><br><span class="line">                    color: &#39;#FA6F53&#39;,</span><br><span class="line">                    fontSize: 16,</span><br><span class="line">                    padding: [0, 0, 10, 0]</span><br><span class="line">                &#125;,</span><br><span class="line">                axisLine: &#123;</span><br><span class="line">                    lineStyle: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                type: &#39;value&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            series: [</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;周一开盘价&#39;,</span><br><span class="line">                data:  this.monMoney,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;pink&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">               &#123;</span><br><span class="line">                name: &#39;周五收盘价&#39;,</span><br><span class="line">                data:  this.fridayMoney,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;blue&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;MIN 股价&#39;,</span><br><span class="line">                data: this.minList,</span><br><span class="line">                type: &#39;line&#39;,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;#FA6F53&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                name: &#39;MAX 股价&#39;,</span><br><span class="line">                data:  this.maxList,</span><br><span class="line">                type: &#39;line&#39;,               &#x2F;&#x2F; 类型为折线图</span><br><span class="line">                lineStyle: &#123;                &#x2F;&#x2F; 线条样式 &#x3D;&gt; 必须使用normal属性</span><br><span class="line">                    normal: &#123;</span><br><span class="line">                        color: &#39;#8AE09F&#39;,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">              </span><br><span class="line">              &#125;,</span><br><span class="line">          ]</span><br><span class="line">        &#125;;</span><br><span class="line">        &#x2F;&#x2F; 使用刚指定的配置项和数据显示图表。</span><br><span class="line">        this.chartLine.setOption(option);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
            <tag> Echarts </tag>
            
            <tag> DWebSocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>celery定时任务+redis有序集合实现实时访问</title>
      <link href="/myhexo/2020/09/10/date1221s/"/>
      <url>/myhexo/2020/09/10/date1221s/</url>
      
        <content type="html"><![CDATA[<h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><h4 id="1-1-项目理解"><a href="#1-1-项目理解" class="headerlink" title="1.1 项目理解"></a>1.1 项目理解</h4><ul><li>数据冗余</li></ul><p>数据冗余是指数据之间的重复，也可以说是同一数据存储在不同数据文件中的现象。可以说增加数据的独立性和减少数据冗余是企业范围信息资源管理和大规模信息系统获得成功的前提条件。</p><p>数据冗余或者信息冗余是生产、生活所必然存在的行为，没有好与不好的总体倾向。</p><ul><li>如何解决重复ip？</li></ul><p>去重，可以采用唯一索引。采用实时数据，mysql，mongofb，不适合实现这次的效果。采用redis数据库，可以利用其五大数据类型中的有序集合。</p><ul><li>如何理解可变，不可变？</li></ul><p>唯一性大于有序就是可变类型；元祖，数字，字符串，不可变集合是不可变类型。但实质上，集合是可变的。</p><ul><li>集合底层实现？</li></ul><p>哈希实现，字典实现，一种没有value的字典，集合中的，expire不能设置集合中某个键值对的过期时间！</p><ul><li>对于时间戳的理解：一分钟时间戳差值60</li></ul><h4 id="1-2-项目整体思路"><a href="#1-2-项目整体思路" class="headerlink" title="1.2 项目整体思路"></a>1.2 项目整体思路</h4><h5 id="1-2-1-redis-有序集合"><a href="#1-2-1-redis-有序集合" class="headerlink" title="1.2.1 redis 有序集合"></a>1.2.1 redis 有序集合</h5><ul><li>有序集合存储访问ip数据</li></ul><p>有序集合中的元素是唯一的，而且可以采用score（本项目用时间戳作为排序分数）进行排序。可以保证访问ip不会重复，而且可以实时更新访问ip的score（因为存入相同元素的时候，虽然不会重复，但是score会随着当前时间更新）</p><h5 id="1-2-2-middleware中间件"><a href="#1-2-2-middleware中间件" class="headerlink" title="1.2.2  middleware中间件"></a>1.2.2  middleware中间件</h5><ul><li>middleware实现接口检测</li></ul><p>每次请求之前采用中间件对每个接口进行检测（但是值得注意的是，不检测redis存储的接口）</p><h5 id="1-2-3-celery定时任务"><a href="#1-2-3-celery定时任务" class="headerlink" title="1.2.3 celery定时任务"></a>1.2.3 celery定时任务</h5><ul><li>celery定时任务实现删除过期元素，每60秒检测一次有无过期元素（和前一分钟的时间戳进行对比），有的话就删除（删除采用的是redis中的范围删除）</li></ul><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2 代码实现"></a>2 代码实现</h3><h4 id="2-1-django端"><a href="#2-1-django端" class="headerlink" title="2.1 django端"></a>2.1 django端</h4><h5 id="2-1-1-middlewares-py"><a href="#2-1-1-middlewares-py" class="headerlink" title="2.1.1 middlewares.py"></a>2.1.1 middlewares.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">d = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">7</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemberOnlineMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">&#x27;/user/online/&#x27;</span>):</span><br><span class="line">            ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">            <span class="keyword">import</span> time</span><br><span class="line">            d.zadd(<span class="string">&#x27;onlines&#x27;</span>, &#123;ip: <span class="built_in">int</span>(time.time())&#125;)</span><br></pre></td></tr></table></figure><h5 id="2-1-2-celery-task-celery-lk-py"><a href="#2-1-2-celery-task-celery-lk-py" class="headerlink" title="2.1.2 celery_task/celery_lk.py"></a>2.1.2 celery_task/celery_lk.py</h5><ul><li>值得注意的是，celery版本不能用4xx，要用5.0.0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"><span class="keyword">import</span> os,  sys</span><br><span class="line">CELERY_BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line">print(sys.path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># celery项目中的所有导包地址, 都是以CELERY_BASE_DIR为基准设定.</span></span><br><span class="line"><span class="comment"># 执行celery命令时, 也需要进入CELERY_BASE_DIR目录执行.</span></span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(CELERY_BASE_DIR, <span class="string">&#x27;../gogogo&#x27;</span>))</span><br><span class="line">os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;gogogo.settings&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义celery实例, 需要的参数, 1, 实例名, 2, 任务发布位置, 3, 结果保存位置</span></span><br><span class="line">app = Celery(<span class="string">&#x27;celery&#x27;</span>,</span><br><span class="line">             broker=<span class="string">&#x27;redis://127.0.0.1:6379/11&#x27;</span>,   <span class="comment"># 任务存放的地方</span></span><br><span class="line">             backend=<span class="string">&#x27;redis://127.0.0.1:6379/12&#x27;</span>,   <span class="comment"># 结果存放的地方</span></span><br><span class="line">             include=[<span class="string">&#x27;celery_task.tasks_beat&#x27;</span>])</span><br><span class="line">            <span class="comment"># 由于上面配置了路径，所以导入时需要注意</span></span><br><span class="line"></span><br><span class="line">app.conf.update(</span><br><span class="line">   result_expires=<span class="number">3600</span>,        <span class="comment">#执行结果放到redis里，一个小时没人取就丢弃</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> celery.schedules <span class="keyword">import</span> crontab</span><br><span class="line"><span class="comment"># 配置定时任务</span></span><br><span class="line">app.conf.beat_schedule = &#123;</span><br><span class="line">    <span class="string">&#x27;add-every-60-seconds&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;celery_task.tasks_beat.online_members&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;schedule&#x27;</span>: <span class="number">60.0</span>,</span><br><span class="line">        <span class="comment"># 每60秒发送一次任务</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.conf.timezone = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.start()</span><br></pre></td></tr></table></figure><h5 id="2-1-3-celery-task-tasks-beat-py"><a href="#2-1-3-celery-task-tasks-beat-py" class="headerlink" title="2.1.3 celery_task/tasks_beat.py"></a>2.1.3 celery_task/tasks_beat.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import, unicode_literals</span><br><span class="line"><span class="comment"># @app.task 指定将这个函数的执行交给celery异步执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于装饰器，将下面函数打包给app</span></span><br><span class="line"><span class="keyword">from</span> celery_task.celery_lk <span class="keyword">import</span> app</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.task(bind=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">online_members</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">import</span> redis, time</span><br><span class="line">    d = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">7</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">    after = <span class="built_in">int</span>(time.time()) - <span class="number">60</span></span><br><span class="line">    d.zremrangebyscore(<span class="string">&#x27;onlines&#x27;</span>, <span class="number">0</span>, after)</span><br></pre></td></tr></table></figure><h5 id="2-1-4-views-py"><a href="#2-1-4-views-py" class="headerlink" title="2.1.4 views.py"></a>2.1.4 views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OnlineView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        <span class="keyword">import</span> redis, time</span><br><span class="line">        d = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">7</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line">        num = d.zcard(<span class="string">&#x27;onlines&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;访问人数&#x27;</span>, <span class="string">&#x27;num&#x27;</span>:num&#125;)</span><br></pre></td></tr></table></figure><h5 id="2-1-5-urls-py"><a href="#2-1-5-urls-py" class="headerlink" title="2.1.5 urls.py"></a>2.1.5 urls.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> userapp <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;register/&#x27;</span>, views.RegisterView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.LoginView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;dingding/&#x27;</span>, views.DingDingView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;test/&#x27;</span>, views.TestAPIView.as_view()),</span><br><span class="line">    path(<span class="string">&#x27;online/&#x27;</span>, views.OnlineView.as_view()),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="2-1-6-settings-py"><a href="#2-1-6-settings-py" class="headerlink" title="2.1.6 settings.py"></a>2.1.6 settings.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># mysql middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMysqlMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># redis middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoRedisMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># mongo middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMongoMiddleWare&#x27;，</span></span><br><span class="line">    <span class="comment"># userinfo middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.ChooseMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.ChooseMiddleWareB&#x27;,</span></span><br><span class="line">    <span class="comment"># members online</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.MemberOnlineMiddleWare&#x27;</span>,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h3 id="2-2-Vue端"><a href="#2-2-Vue端" class="headerlink" title="2.2 Vue端"></a>2.2 Vue端</h3><h5 id="2-2-1-headers-vue"><a href="#2-2-1-headers-vue" class="headerlink" title="2.2.1 headers.vue"></a>2.2.1 headers.vue</h5><pre><code class="vue">&lt;template&gt;        &lt;div&gt;&lt;a style=&quot;float:right&quot; @click=&quot;outLogin&quot;&gt;注销登录&lt;/a&gt;          &lt;h3 style=&quot;margin-top:20px&quot;&gt;                     欢迎你           &lt;a-icon type=&quot;smile&quot; theme=&quot;outlined&quot; style=&quot;font-size:20px;color:blue&quot;/&gt;&amp;ensp;          &#123;&#123;username&#125;&#125;            &lt;a-icon type=&quot;fire&quot; style=&quot;font-size:25px;color:blue&quot;/&gt;&amp;ensp;            实时人数：&#123;&#123;number&#125;&#125;          &lt;/h3&gt;                 &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import &#123; get_members_online &#125; from &#39;@/http/apis&#39;export default&#123;    data()&#123;        return&#123;          username:this.$route.query.username,          number:&#39;&#39;        &#125;    &#125;,    methods:&#123;      outLogin()&#123;        localStorage.removeItem(&#39;token&#39;)        localStorage.removeItem(&#39;username&#39;)        localStorage.removeItem(&#39;uid&#39;)        alert(&#39;注销登录成功，稍后为您跳转登录页面&#39;)        this.$router.push(&#39;/login&#39;)      &#125;,      getOnline()&#123;        get_members_online().then(res=&gt;&#123;          console.log(res)          this.number = res.num        &#125;)      &#125;    &#125;,    created()&#123;      window.setInterval(this.getOnline, 5000)    &#125;&#125;&lt;/script&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> celery </tag>
            
            <tag> redis </tag>
            
            <tag> 实时访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>位运算+数据库两种方式实现权限操作</title>
      <link href="/myhexo/2020/07/08/date1221/"/>
      <url>/myhexo/2020/07/08/date1221/</url>
      
        <content type="html"><![CDATA[<h3 id="1-数据库实现权限操作"><a href="#1-数据库实现权限操作" class="headerlink" title="1 数据库实现权限操作"></a>1 数据库实现权限操作</h3><ul><li>既是管理又是超级管理员的需要五表关联</li></ul><h4 id="1-1-四表联动"><a href="#1-1-四表联动" class="headerlink" title="1.1 四表联动"></a>1.1 四表联动</h4><p><img src="imgs/image-20201220205537082.png" alt="image-20201220205537082"></p><h4 id="1-2-表设计"><a href="#1-2-表设计" class="headerlink" title="1.2 表设计"></a>1.2 表设计</h4><ul><li>models.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 权限系统四标关联：角色表、用户表、节点表、权限表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 角色表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoleModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    description = models.CharField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;role_model&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">30</span>, unique=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;唯一注册用户名&#x27;</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">256</span>)</span><br><span class="line">    role = models.ForeignKey(RoleModel, on_delete=models.CASCADE)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;user_model&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NodeModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    description = models.CharField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;node_model&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 权限表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Authority</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    role_id = models.ForeignKey(RoleModel, on_delete=models.CASCADE)</span><br><span class="line">    node_id = models.ForeignKey(NodeModel, on_delete=models.CASCADE)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;authority&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-所需参数"><a href="#1-3-所需参数" class="headerlink" title="1.3 所需参数"></a>1.3 所需参数</h4><ul><li>role.id（用户角色id）</li><li>type（前端节点类型）</li></ul><h4 id="1-4-middleware-py"><a href="#1-4-middleware-py" class="headerlink" title="1.4 middleware.py"></a>1.4 middleware.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------------------------四表联合判断权限 middleware</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChooseMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/test/&#x27;</span>):</span><br><span class="line">            user_info = decodeToken(request)</span><br><span class="line">            role_id = user_info.get(<span class="string">&#x27;role_id&#x27;</span>)</span><br><span class="line">            node_id = Authority.objects.<span class="built_in">filter</span>(role_id_id=role_id).first().node_id_id</span><br><span class="line">            <span class="comment"># 根据前端设置的传递类型来选择</span></span><br><span class="line">            t = request.GET.get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">            <span class="comment"># t ---------------&gt; str</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">int</span>(t) == node_id:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;拦截&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h4 id="1-5-settings-py"><a href="#1-5-settings-py" class="headerlink" title="1.5 settings.py"></a>1.5 settings.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># mysql middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMysqlMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># redis middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoRedisMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># mongo middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMongoMiddleWare&#x27;，</span></span><br><span class="line">    <span class="comment"># userinfo middleware</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.ChooseMiddleWare&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.ChooseMiddleWareB&#x27;</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h3 id="2-二进制位运算实现权限操作"><a href="#2-二进制位运算实现权限操作" class="headerlink" title="2 二进制位运算实现权限操作"></a>2 二进制位运算实现权限操作</h3><h4 id="2-1-位运算前言"><a href="#2-1-位运算前言" class="headerlink" title="2.1 位运算前言"></a>2.1 位运算前言</h4><ul><li><p>十进制换成二进制，bin(10)           ————————&gt;           ob1010</p></li><li><p>python中用 0b表示二进制。逢 2 进 1</p></li><li><p>0b010 只有第二个有权限</p></li><li><p>一样就是1， 不一样就是0</p></li><li><p>django内的操作都是二进制流的操作</p></li><li><p>位运算权限，采用的是内置节点！</p></li><li><p>位运算和科学计算相比，位运算性能更好！</p></li></ul><p>0b001 &amp; 0b010</p><blockquote><p>0</p></blockquote><p>0b001 &amp; 0b001</p><blockquote><p>1</p></blockquote><p>100 &amp; 1</p><blockquote><p>0</p></blockquote><p>101 &amp; 1</p><blockquote><p>1</p></blockquote><p>0b10 &amp; 0b01</p><blockquote><p>0</p></blockquote><p>0b11 &amp; 0b01</p><blockquote><p>1</p></blockquote><h4 id="2-2-表设计"><a href="#2-2-表设计" class="headerlink" title="2.2 表设计"></a>2.2 表设计</h4><ul><li>只需要两张表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 角色表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RoleModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    description = models.CharField(max_length=<span class="number">100</span>, null=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;role_model&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserModel</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">30</span>, unique=<span class="literal">True</span>, verbose_name=<span class="string">&#x27;唯一注册用户名&#x27;</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">256</span>)</span><br><span class="line">    role = models.ForeignKey(RoleModel, on_delete=models.CASCADE)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;user_model&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-middleware-py"><a href="#2-3-middleware-py" class="headerlink" title="2.3 middleware.py"></a>2.3 middleware.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中间件---------------------------------------------------------------------------------</span></span><br><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChooseMiddleWareB</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/test/&#x27;</span>):</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 这里设置位运算，默认权限对应关系是      role_id   拥有权限   权限id  ? 这样只能比对，做不了增值，可以倒过来想！</span></span><br><span class="line">            <span class="comment">#                                    1 ----------------- 1  0b100</span></span><br><span class="line">            <span class="comment">#                                    2 ----------------- 2  0b010</span></span><br><span class="line">            <span class="comment">#                                    3 ----------------- 3  0b001</span></span><br><span class="line">            <span class="comment"># 这里我想考虑一个角色多个权限的设置</span></span><br><span class="line">            <span class="comment"># 如果一个角色同时拥有两个或三个（此次设置三个权限）呢？存在什么关系？（可以进行权限叠加啊，后续研究）,利用循环，看多少个权限？</span></span><br><span class="line">            <span class="comment">#   role_id         拥有权限        权限id</span></span><br><span class="line">            <span class="comment">#      1                            1     0b001             1</span></span><br><span class="line">            <span class="comment">#      1                            2     0b010 （+1）       2</span></span><br><span class="line">            <span class="comment">#      1                            1,2   0b011 （+2)        3</span></span><br><span class="line">            <span class="comment">#      1                            3     0b100 （+3）       4</span></span><br><span class="line">            <span class="comment">#      1                            1,3   0b101 （+4）       5</span></span><br><span class="line">            <span class="comment">#      1                            2,3   0b110 （+5）       6</span></span><br><span class="line">            <span class="comment">#      1                           1,2,3  0b111 （+6）       7</span></span><br><span class="line">            <span class="comment">#  所以给用户设定权限就可以了，这里给用户设定权限，角色1 全有 则为7， 角色2 有12权限 则为3， 角色3 只有第三个权限，则为4</span></span><br><span class="line">            <span class="built_in">type</span> = <span class="built_in">int</span>(request.GET.get(<span class="string">&#x27;type&#x27;</span>))</span><br><span class="line">            user_info = decodeToken(request)</span><br><span class="line">            print(user_info)</span><br><span class="line">            role_id = user_info.get(<span class="string">&#x27;role_id&#x27;</span>)</span><br><span class="line">            <span class="comment"># 角色1 拥有权限</span></span><br><span class="line">            <span class="comment"># first_permision = 0b111</span></span><br><span class="line">            <span class="comment"># # 角色2 拥有权限</span></span><br><span class="line">            <span class="comment"># second_permision = 0b011</span></span><br><span class="line">            <span class="comment"># # 角色3 拥有权限</span></span><br><span class="line">            <span class="comment"># third_permision = 0b100</span></span><br><span class="line">            <span class="comment"># 相加就能看到共有几种权限啦！</span></span><br><span class="line">            <span class="comment"># 我们给角色1设定有三种权限，角色2设定有一，二两种权限，角色3设定只有第三种权限</span></span><br><span class="line">            permision_dic = &#123;<span class="number">1</span>: <span class="number">0b111</span>, <span class="number">2</span>: <span class="number">0b011</span>, <span class="number">3</span>: <span class="number">0b100</span>&#125;</span><br><span class="line">            type_dic = &#123;<span class="number">1</span>: <span class="number">0b001</span>, <span class="number">2</span>: <span class="number">0b010</span>, <span class="number">3</span>: <span class="number">0b100</span>&#125;</span><br><span class="line">            <span class="keyword">if</span> type_dic[<span class="built_in">type</span>] &amp; permision_dic[role_id] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;没有权限访问&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-settings-py"><a href="#2-4-settings-py" class="headerlink" title="2.4 settings.py"></a>2.4 settings.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># mysql middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMysqlMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># redis middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoRedisMiddleWare&#x27;,</span></span><br><span class="line">    <span class="comment"># mongo middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.VisitInfoMongoMiddleWare&#x27;，</span></span><br><span class="line">    <span class="comment"># userinfo middleware</span></span><br><span class="line">    <span class="comment"># &#x27;userapp.middlewares.ChooseMiddleWare&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.ChooseMiddleWareB&#x27;</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 位运算 </tag>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三种数据库实现限流+安全防护</title>
      <link href="/myhexo/2020/04/05/date1220/"/>
      <url>/myhexo/2020/04/05/date1220/</url>
      
        <content type="html"><![CDATA[<h3 id="1-http-和-https"><a href="#1-http-和-https" class="headerlink" title="1 http 和 https"></a>1 http 和 https</h3><h4 id="1-1-http-和-https-的区别"><a href="#1-1-http-和-https-的区别" class="headerlink" title="1.1 http 和 https 的区别"></a>1.1 http 和 https 的区别</h4><ul><li>http 明文（报文明文）可以篡改</li><li>https 加密（报文密文）</li></ul><h4 id="1-2-如何访问https"><a href="#1-2-如何访问https" class="headerlink" title="1.2 如何访问https"></a>1.2 如何访问https</h4><ul><li>pip install django-sslserver</li><li>终端中  <code>python manage.py runsslserver</code> 启动项目</li></ul><h3 id="2-项目中的限流操作"><a href="#2-项目中的限流操作" class="headerlink" title="2 项目中的限流操作"></a>2 项目中的限流操作</h3><ul><li>用来存储存ip地址，明确用户身份，可以用来防爬虫</li><li>使用场景：钉钉机器人发送短信验证，不能在5秒内，向服务端发起三次以上的请求</li></ul><h4 id="2-1-mysql实现"><a href="#2-1-mysql实现" class="headerlink" title="2.1 mysql实现"></a>2.1 mysql实现</h4><ul><li>mysql中存两个数据，ip+时间戳</li></ul><h5 id="2-2-1-装饰器"><a href="#2-2-1-装饰器" class="headerlink" title="2.2.1 装饰器"></a>2.2.1 装饰器</h5><ul><li>装饰器实际上是一个闭包，延伸了作用域的方法，可以再在内部访问一个方法外部的变量（外部的变量是全局变量）。</li><li>用法：语法常</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit, BlackList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  the Decorator to make sure the only one ip to visit us.(mysql)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">visit_info_mysql_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># try:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># don&#x27;t think about that nginx may course 127.0.0.1:8000 at this time.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#     if request.META[&#x27;HTTP_X_FORWARDED_FOR&#x27;]:</span></span><br><span class="line">        <span class="comment">#         ip = request.META[&#x27;HTTP_X_FORWARDED_FOR&#x27;]</span></span><br><span class="line">        <span class="comment"># except Exception as e:</span></span><br><span class="line">        <span class="comment">#      print(&#x27;ok&#x27;)</span></span><br><span class="line"></span><br><span class="line">        ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">        obj = InfoVisit.objects.<span class="built_in">filter</span>(net_ip=ip, is_delete=<span class="literal">False</span>).first()</span><br><span class="line">        <span class="keyword">if</span> obj:</span><br><span class="line">            visit_time = obj.visit_time</span><br><span class="line">            <span class="keyword">import</span> datetime</span><br><span class="line">            timediff = datetime.datetime.now() - visit_time</span><br><span class="line">            <span class="keyword">if</span> timediff.total_seconds() &gt; <span class="number">5</span>:</span><br><span class="line">                InfoVisit.objects.create(net_ip=ip, is_delete=<span class="literal">False</span>)</span><br><span class="line">                obj.is_delete = <span class="literal">True</span></span><br><span class="line">                obj.save()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27;first visit&#x27;</span>)</span><br><span class="line">            InfoVisit.objects.create(net_ip=ip, is_delete=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">return</span> func(request, *args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br></pre></td></tr></table></figure><h5 id="2-2-2-中间件"><a href="#2-2-2-中间件" class="headerlink" title="2.2.2 中间件"></a>2.2.2 中间件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit, BlackList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此页面所有拦截都是针对钉钉机器人，用户小于5秒访问第二次的！</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql -----------------middleware</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VisitInfoMysqlMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        print(<span class="number">123</span>,path)</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/dingding/&#x27;</span>):</span><br><span class="line">            ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">            print(<span class="number">234</span>, ip)</span><br><span class="line">            obj = InfoVisit.objects.<span class="built_in">filter</span>(net_ip=ip, is_delete=<span class="literal">False</span>).first()</span><br><span class="line">            <span class="keyword">if</span> obj:</span><br><span class="line">                visit_time = obj.visit_time</span><br><span class="line">                <span class="keyword">import</span> datetime</span><br><span class="line">                timediff = datetime.datetime.now() - visit_time</span><br><span class="line">                <span class="keyword">if</span> timediff.total_seconds() &gt; <span class="number">5</span>:</span><br><span class="line">                    InfoVisit.objects.create(net_ip=ip, is_delete=<span class="literal">False</span>)</span><br><span class="line">                    obj.is_delete = <span class="literal">True</span></span><br><span class="line">                    obj.save()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">&#x27;first visit&#x27;</span>)</span><br><span class="line">                InfoVisit.objects.create(net_ip=ip, is_delete=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2-redis-实现"><a href="#2-2-redis-实现" class="headerlink" title="2.2 redis 实现"></a>2.2 redis 实现</h4><ul><li>redis 存key-values，判断key存不存在，不需要存value（存内存）</li></ul><h5 id="2-2-1-装饰器-1"><a href="#2-2-1-装饰器-1" class="headerlink" title="2.2.1 装饰器"></a>2.2.1 装饰器</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit</span><br><span class="line"></span><br><span class="line"><span class="comment">#  the Decorator to make sure the only one ip to visit us.(redis)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">5</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">visit_info_redis_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="comment"># try:</span></span><br><span class="line">        <span class="comment"># don&#x27;t think about that nginx may course 127.0.0.1:8000 at this time.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#     if request.META[&#x27;HTTP_X_FORWARDED_FOR&#x27;]:</span></span><br><span class="line">        <span class="comment">#         ip = request.META[&#x27;HTTP_X_FORWARDED_FOR&#x27;]</span></span><br><span class="line">        <span class="comment"># except Exception as e:</span></span><br><span class="line">        <span class="comment">#      print(&#x27;ok&#x27;)</span></span><br><span class="line"></span><br><span class="line">        ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">        value = r.get(ip)</span><br><span class="line">        <span class="keyword">if</span> value:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r.<span class="built_in">set</span>(ip, <span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">            r.expire(ip, <span class="number">5</span>)</span><br><span class="line">            <span class="comment"># print(&#x27;first visit&#x27;)</span></span><br><span class="line">        <span class="keyword">return</span> func(request, *args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br></pre></td></tr></table></figure><h5 id="2-2-2-中间件-1"><a href="#2-2-2-中间件-1" class="headerlink" title="2.2.2 中间件"></a>2.2.2 中间件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit</span><br><span class="line"><span class="comment"># 此页面所有拦截都是针对钉钉机器人，用户小于5秒访问第二次的！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># redis ---------------------middleware</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">5</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VisitInfoRedisMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="comment"># print(123,path)</span></span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/dingding/&#x27;</span>):</span><br><span class="line">            ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">            value = r.get(ip)</span><br><span class="line">            <span class="keyword">if</span> value:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r.<span class="built_in">set</span>(ip, <span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">                r.expire(ip, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><h4 id="2-3-mongodb-实现"><a href="#2-3-mongodb-实现" class="headerlink" title="2.3 mongodb 实现"></a>2.3 mongodb 实现</h4><ul><li>mongodb中的过期索引，只能实现60秒一次的检测功能，所以并不准确，是mongodb对限流操作实现的一大弊端，可以通过以下代码自行检验</li><li>还遇到了一个坑，就是翻墙软件开启的时候，不能用代理下载，访问国外网站！</li><li>安装的时候，注意安全软件关闭或者给予权限</li><li>windows + r =========&gt; services.msc 可以查看启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 指定bin目录下检测启动</span></span><br><span class="line">C:\Program Files\MongoDB\Server\4.0\bin&gt;mongo</span><br><span class="line">MongoDB shell version v4.0.4</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">Implicit session: session &#123; &quot;id&quot; : UUID(&quot;e22f6748-06d6-446b-b3dc-46bc7b9e1cde&quot;) &#125;</span><br><span class="line">MongoDB server version: 4.0.4</span><br><span class="line">Welcome to the MongoDB shell.</span><br><span class="line">For interactive help, type &quot;help&quot;.</span><br><span class="line">For more comprehensive documentation, see</span><br><span class="line">        http://docs.mongodb.org/</span><br><span class="line">Questions? Try the support group</span><br><span class="line">        http://groups.google.com/group/mongodb-user</span><br><span class="line">Server has startup warnings:</span><br><span class="line">2020-12-18T23:33:51.408+0800 I CONTROL  [initandlisten]</span><br><span class="line">2020-12-18T23:33:51.408+0800 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.</span><br><span class="line">2020-12-18T23:33:51.408+0800 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.</span><br><span class="line">2020-12-18T23:33:51.408+0800 I CONTROL  [initandlisten]</span><br><span class="line">---</span><br><span class="line">Enable MongoDB&#x27;s free cloud-based monitoring service, which will then receive and display</span><br><span class="line">metrics about your deployment (disk utilization, CPU, operation statistics, etc).</span><br><span class="line"></span><br><span class="line">The monitoring data will be available on a MongoDB website with a unique URL accessible to you</span><br><span class="line">and anyone you share the URL with. MongoDB may use this information to make product</span><br><span class="line">improvements and to suggest MongoDB products and deployment options to you.</span><br><span class="line"></span><br><span class="line">To enable free monitoring, run the following command: db.enableFreeMonitoring()</span><br><span class="line">To permanently disable this reminder, run the following command: db.disableFreeMonitoring()</span><br><span class="line">---</span><br><span class="line"><span class="meta">#</span><span class="bash"> 出现 &lt; 代表安装成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以进行简单的计算</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 2+3</span></span><br><span class="line">5</span><br><span class="line"><span class="meta">#</span><span class="bash"> 存在runoob即使用，不存在就创建（详细参考P2的mongodb攻略）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> use runoob</span></span><br><span class="line">switched to db runoob</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db</span></span><br><span class="line">runoob</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> show dbs</span></span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db</span></span><br><span class="line">runoob</span><br></pre></td></tr></table></figure><ul><li>因为不够准确，推荐不使用过期索引！以下代码采用了过期索引，仅供参考</li></ul><h5 id="2-2-1-装饰器-2"><a href="#2-2-1-装饰器-2" class="headerlink" title="2.2.1 装饰器"></a>2.2.1 装饰器</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 此页面所有拦截都是针对钉钉机器人，小于5秒访问第二次的！</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit</span><br><span class="line"></span><br><span class="line"><span class="comment">#  the Decorator to make sure the only one ip to visit us.(mongodb)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">db = client[<span class="string">&#x27;runoob&#x27;</span>]</span><br><span class="line"><span class="built_in">set</span> = db[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">visit_info_mongo_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> datetime</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">        ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">        value = <span class="built_in">set</span>.find_one(&#123;<span class="string">&#x27;ip&#x27;</span>: ip&#125;)</span><br><span class="line">        print(<span class="number">123</span>,value)</span><br><span class="line">        <span class="keyword">if</span> value:</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            timestamp = datetime.datetime.now()</span><br><span class="line">            print(<span class="number">123123</span>)</span><br><span class="line">            <span class="built_in">set</span>.ensure_index(<span class="string">&#x27;Date&#x27;</span>, expireAfterSeconds=<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">set</span>.insert(&#123;<span class="string">&#x27;ip&#x27;</span>: ip, <span class="string">&#x27;Date&#x27;</span>: timestamp&#125;)</span><br><span class="line">            print(<span class="string">&#x27;first visit&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> func(request, *args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br></pre></td></tr></table></figure><h5 id="2-2-2-中间件-2"><a href="#2-2-2-中间件-2" class="headerlink" title="2.2.2 中间件"></a>2.2.2 中间件</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> InfoVisit</span><br><span class="line"><span class="comment"># 此页面所有拦截都是针对钉钉机器人，用户小于5秒访问第二次的！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># mongo ---------------------middleware</span></span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">client = pymongo.MongoClient(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">27017</span>)</span><br><span class="line">db = client[<span class="string">&#x27;runoob&#x27;</span>]</span><br><span class="line"><span class="built_in">set</span> = db[<span class="string">&#x27;sub&#x27;</span>]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VisitInfoMongoMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/dingding/&#x27;</span>):</span><br><span class="line">            <span class="keyword">import</span> datetime</span><br><span class="line">            ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">            value = <span class="built_in">set</span>.find_one(&#123;<span class="string">&#x27;ip&#x27;</span>: ip&#125;)</span><br><span class="line">            print(<span class="number">123</span>, value)</span><br><span class="line">            <span class="keyword">if</span> value:</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                timestamp = datetime.datetime.now()</span><br><span class="line">                print(<span class="number">123123</span>)</span><br><span class="line">                <span class="built_in">set</span>.ensure_index(<span class="string">&#x27;Date&#x27;</span>, expireAfterSeconds=<span class="number">10</span>)</span><br><span class="line">                <span class="comment"># 没办法实时监测，因为一分钟才检查一次</span></span><br><span class="line">                <span class="built_in">set</span>.insert(&#123;<span class="string">&#x27;ip&#x27;</span>: ip, <span class="string">&#x27;Date&#x27;</span>: timestamp&#125;)</span><br><span class="line">                print(<span class="string">&#x27;first visit&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="2-4-总结"><a href="#2-4-总结" class="headerlink" title="2.4 总结"></a>2.4 总结</h4><ul><li>限流最好用的就是redis，和mysql结合实现安全防护，详看本章 4</li></ul><h3 id="3-在函数中调用的方式"><a href="#3-在函数中调用的方式" class="headerlink" title="3 在函数中调用的方式"></a>3 在函数中调用的方式</h3><h4 id="3-1-装饰器"><a href="#3-1-装饰器" class="headerlink" title="3.1 装饰器"></a>3.1 装饰器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils.decorators <span class="keyword">import</span> method_decorator</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"><span class="meta">    @method_decorator(visit_info_mysql_decorator, name=&#x27;post&#x27;)</span></span><br><span class="line"><span class="meta">    @method_decorator(visit_info_redis_decorator, name=&#x27;post&#x27;)</span></span><br><span class="line"><span class="meta">    @method_decorator(visit_info_mongo_decorator, name=&#x27;post&#x27;)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        username = request.data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        <span class="comment"># 这里实现一个场景，就是只有在登录的情况下才可以发送验证码（本来想使用token，但是累觉没必要，前端输入的同时，表单绑定记录下来就好了！何必难为自己T.T，做一次小测试，具体情况具体分析就可以了）</span></span><br><span class="line">        num = message_code()</span><br><span class="line">        dingding_robot(num)</span><br><span class="line">        request.session[<span class="string">&#x27;num&#x27;</span>] = num</span><br><span class="line">        request.session.set_expiry(<span class="number">300</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> request.session.session_key:</span><br><span class="line">            request.session.create()</span><br><span class="line">        <span class="keyword">return</span> Response(</span><br><span class="line">            &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;发送成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>, <span class="string">&#x27;num&#x27;</span>:num, <span class="string">&#x27;session_key&#x27;</span>: request.session.session_key&#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h4 id="3-2-中间件"><a href="#3-2-中间件" class="headerlink" title="3.2 中间件"></a>3.2 中间件</h4><ul><li>settings中注册</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># mysql middleware</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.VisitInfoMysqlMiddleWare&#x27;</span>,</span><br><span class="line">    <span class="comment"># redis middleware</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.VisitInfoRedisMiddleWare&#x27;</span>,</span><br><span class="line">    <span class="comment"># mongo middleware</span></span><br><span class="line">    <span class="string">&#x27;userapp.middlewares.VisitInfoMongoMiddleWare&#x27;</span></span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h3 id="4-安全防护"><a href="#4-安全防护" class="headerlink" title="4 安全防护"></a>4 安全防护</h3><ul><li>安全防护是基于限流操作的，为了防止爬虫，我们要设置安全防护。但是也要注意到的是，同一台电脑，可以由多个用户访问，所以设置黑名单的时候，要设置用户名</li><li>在同一个局域网内，可以通过ip访问不同的服务器，启动代码是</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span></span><br><span class="line"><span class="comment"># 局域网</span></span><br></pre></td></tr></table></figure><ul><li>设计表结构的时候，采用了唯一索引：唯一索引作用是排重，同时减少select语句的io操作，针对username做唯一索引，ip一样，用户名一样才针对查询。</li></ul><h4 id="4-1-黑名单表设计"><a href="#4-1-黑名单表设计" class="headerlink" title="4.1 黑名单表设计"></a>4.1 黑名单表设计</h4><ul><li>此处采用了 django 表结构的设计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BlackList</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    net_ip = models.CharField(max_length=<span class="number">40</span>)</span><br><span class="line">    lock_time = models.IntegerField(default=<span class="number">3600</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        index_together = [<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;net_ip&#x27;</span>]</span><br><span class="line">        unique_together = [<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;net_ip&#x27;</span>]</span><br><span class="line">        db_table = <span class="string">&#x27;black_list&#x27;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 联合索引必须一起添加，否则要报错</span></span><br></pre></td></tr></table></figure><h4 id="4-2-redis-mysql实现操作"><a href="#4-2-redis-mysql实现操作" class="headerlink" title="4.2 redis + mysql实现操作"></a>4.2 redis + mysql实现操作</h4><ul><li>redis 进行限流</li><li>mysql存储黑名单信息</li></ul><h5 id="4-2-1-middleware"><a href="#4-2-1-middleware" class="headerlink" title="4.2.1 middleware"></a>4.2.1 middleware</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis ---------------------middleware</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">5</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VisitInfoRedisMiddleWare</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        path = request.path_info</span><br><span class="line">        <span class="keyword">if</span> path <span class="keyword">in</span> (<span class="string">&#x27;/user/dingding/&#x27;</span>):</span><br><span class="line">            username = request.data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">            ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">            <span class="comment"># 为空要报错哦</span></span><br><span class="line">            <span class="keyword">if</span> BlackList.objects.<span class="built_in">filter</span>(username=username, net_ip=ip):</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;账号已经被停用&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                value = r.get(ip)</span><br><span class="line">                print(<span class="string">&#x27;this is value&#x27;</span>, value)</span><br><span class="line">                <span class="comment"># value-------&gt;type:str</span></span><br><span class="line">                <span class="keyword">if</span> value <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> <span class="built_in">int</span>(value) &gt; <span class="number">2</span>:</span><br><span class="line">                    BlackList.objects.create(username=username, net_ip=ip)</span><br><span class="line">                    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问,您即将被封号&#x27;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    r.incrby(ip, <span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># 这里我思考了一个问题，就是自增会不会刷新过期时间，实际上是不会的，查询资料发现</span></span><br><span class="line">                    <span class="comment"># 要刷新过期时间还需要新的解决方案，符合逻辑！</span></span><br><span class="line">                    r.expire(ip, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><h5 id="4-2-2-director"><a href="#4-2-2-director" class="headerlink" title="4.2.2 director"></a>4.2.2 director</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  the Decorator to make sure the only one ip to visit us.(redis)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line">r = redis.Redis(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">5</span>, decode_responses=<span class="literal">True</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">visit_info_redis_decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">request, *args, **kwargs</span>):</span></span><br><span class="line">        username = request.data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        ip = request.META[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]</span><br><span class="line">        <span class="comment"># 为空要报错哦</span></span><br><span class="line">        <span class="keyword">if</span> BlackList.objects.<span class="built_in">filter</span>(username=username, net_ip=ip):</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;账号已经被停用&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = r.get(ip)</span><br><span class="line">            print(<span class="string">&#x27;this is value&#x27;</span>, value)</span><br><span class="line">            <span class="comment"># value-------&gt;type:str</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> <span class="built_in">int</span>(value) &gt; <span class="number">2</span>:</span><br><span class="line">                BlackList.objects.create(username=username, net_ip=ip)</span><br><span class="line">                <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;恶意访问,您即将被封号&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r.incrby(ip, <span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 这里我思考了一个问题，就是自增会不会刷新过期时间，实际上是不会的，查询资料发现</span></span><br><span class="line">                <span class="comment"># 要刷新过期时间还需要新的解决方案，符合逻辑！</span></span><br><span class="line">                r.expire(ip, <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> func(request, *args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 限流 </tag>
            
            <tag> 安全防护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker初识</title>
      <link href="/myhexo/2019/12/15/date1215/"/>
      <url>/myhexo/2019/12/15/date1215/</url>
      
        <content type="html"><![CDATA[<h3 id="1-安装-Docker"><a href="#1-安装-Docker" class="headerlink" title="1 安装 Docker"></a>1 安装 Docker</h3><h4 id="1-1-环境搭建"><a href="#1-1-环境搭建" class="headerlink" title="1.1 环境搭建"></a>1.1 环境搭建</h4><h5 id="1-1-1-环境查看"><a href="#1-1-1-环境查看" class="headerlink" title="1.1.1 环境查看"></a>1.1.1 环境查看</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@dev:~# uname -r</span><br><span class="line">5.4.0-56-generic</span><br></pre></td></tr></table></figure><h5 id="1-1-2-系统版本"><a href="#1-1-2-系统版本" class="headerlink" title="1.1.2 系统版本"></a>1.1.2 系统版本</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@dev:etc# cat os-release </span><br><span class="line">NAME=&quot;Ubuntu&quot;</span><br><span class="line">VERSION=&quot;18.04.5 LTS (Bionic Beaver)&quot;</span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">PRETTY_NAME=&quot;Ubuntu 18.04.5 LTS&quot;</span><br><span class="line">VERSION_ID=&quot;18.04&quot;</span><br><span class="line">HOME_URL=&quot;https://www.ubuntu.com/&quot;</span><br><span class="line">SUPPORT_URL=&quot;https://help.ubuntu.com/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;</span><br><span class="line">PRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span><br><span class="line">VERSION_CODENAME=bionic</span><br><span class="line">UBUNTU_CODENAME=bionic</span><br></pre></td></tr></table></figure><h5 id="1-1-3-Docker-版本"><a href="#1-1-3-Docker-版本" class="headerlink" title="1.1.3 Docker 版本"></a>1.1.3 Docker 版本</h5><ul><li>ce 社区版本</li><li>ee 企业版</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@dev:etc<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           <span class="number">19.03</span><span class="number">.13</span></span><br><span class="line"> API version:       <span class="number">1.40</span></span><br><span class="line"> Go version:        go1<span class="number">.13</span><span class="number">.15</span></span><br><span class="line"> Git commit:        <span class="number">4484</span>c46d9d</span><br><span class="line"> Built:             Wed Sep <span class="number">16</span> <span class="number">17</span>:<span class="number">02</span>:<span class="number">36</span> <span class="number">2020</span></span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Experimental:      false</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          <span class="number">19.03</span><span class="number">.13</span></span><br><span class="line">  API version:      <span class="number">1.40</span> (minimum version <span class="number">1.12</span>)</span><br><span class="line">  Go version:       go1<span class="number">.13</span><span class="number">.15</span></span><br><span class="line">  Git commit:       <span class="number">4484</span>c46d9d</span><br><span class="line">  Built:            Wed Sep <span class="number">16</span> <span class="number">17</span>:<span class="number">01</span>:<span class="number">06</span> <span class="number">2020</span></span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          <span class="number">1.3</span><span class="number">.7</span></span><br><span class="line">  GitCommit:        <span class="number">8</span>fba4e9a7d01810a393d5d25a3621dc101981175</span><br><span class="line"> runc:</span><br><span class="line">  Version:          <span class="number">1.0</span><span class="number">.0</span>-rc10</span><br><span class="line">  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          <span class="number">0.18</span><span class="number">.0</span></span><br><span class="line">  GitCommit:        fec3683</span><br></pre></td></tr></table></figure><h4 id="1-2-docker-–help"><a href="#1-2-docker-–help" class="headerlink" title="1.2 docker  –help"></a>1.2 docker  –help</h4><h5 id="1-2-1-卸载旧的版本"><a href="#1-2-1-卸载旧的版本" class="headerlink" title="1.2.1 卸载旧的版本"></a>1.2.1 卸载旧的版本</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure><h5 id="1-2-2-需要的安装包"><a href="#1-2-2-需要的安装包" class="headerlink" title="1.2.2 需要的安装包"></a>1.2.2 需要的安装包</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure><h5 id="1-2-3-设置镜像的仓库"><a href="#1-2-3-设置镜像的仓库" class="headerlink" title="1.2.3 设置镜像的仓库"></a>1.2.3 设置镜像的仓库</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://mirrors.aliyun.com/docker-ce/linux/ubuntu/docker-ce.repo</span><br></pre></td></tr></table></figure><h5 id="1-2-4-安装docker相关核心，客户端"><a href="#1-2-4-安装docker相关核心，客户端" class="headerlink" title="1.2.4 安装docker相关核心，客户端"></a>1.2.4 安装docker相关核心，客户端</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="meta">#</span><span class="bash"> docker-ce 社区版</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker-ee 企业版</span></span><br></pre></td></tr></table></figure><h5 id="1-2-5-可以安装指定版本"><a href="#1-2-5-可以安装指定版本" class="headerlink" title="1.2.5 可以安装指定版本"></a>1.2.5 可以安装指定版本</h5><ul><li>去官方文档即可看到安装方法</li></ul><h5 id="1-2-6-启动docker"><a href="#1-2-6-启动docker" class="headerlink" title="1.2.6 启动docker"></a>1.2.6 启动docker</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl status docker  # 查看docker当前状态</span><br></pre></td></tr></table></figure><h5 id="1-2-7-docker测试"><a href="#1-2-7-docker测试" class="headerlink" title="1.2.7 docker测试"></a>1.2.7 docker测试</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h5 id="1-2-8-查看docker镜像"><a href="#1-2-8-查看docker镜像" class="headerlink" title="1.2.8 查看docker镜像"></a>1.2.8 查看docker镜像</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h5 id="1-2-9-卸载docker"><a href="#1-2-9-卸载docker" class="headerlink" title="1.2.9 卸载docker"></a>1.2.9 卸载docker</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="meta">#</span><span class="bash"> 卸载依赖</span></span><br><span class="line">sudo rm -rf /var/lib/docker # /var/lib/docker   docker的默认工作路径</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除资源</span></span><br></pre></td></tr></table></figure><h4 id="1-3-阿里云镜像加速"><a href="#1-3-阿里云镜像加速" class="headerlink" title="1.3 阿里云镜像加速"></a>1.3 阿里云镜像加速</h4><ul><li>阿里云</li></ul><p><code>https://cr.console.aliyun.com/</code></p><h5 id="1-3-1-ubuntu"><a href="#1-3-1-ubuntu" class="headerlink" title="1.3.1 ubuntu"></a>1.3.1 ubuntu</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://nyb1yj4t.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h5 id="1-3-2-centos"><a href="#1-3-2-centos" class="headerlink" title="1.3.2 centos"></a>1.3.2 centos</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://nyb1yj4t.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="1-4-Docker比虚拟机快的原因"><a href="#1-4-Docker比虚拟机快的原因" class="headerlink" title="1.4 Docker比虚拟机快的原因"></a>1.4 Docker比虚拟机快的原因</h4><h5 id="1-4-1-Docker有比虚拟机更少的抽象层"><a href="#1-4-1-Docker有比虚拟机更少的抽象层" class="headerlink" title="1.4.1 Docker有比虚拟机更少的抽象层"></a>1.4.1 Docker有比虚拟机更少的抽象层</h5><h5 id="1-4-2-Docker利用的是宿主机的内核"><a href="#1-4-2-Docker利用的是宿主机的内核" class="headerlink" title="1.4.2 Docker利用的是宿主机的内核"></a>1.4.2 Docker利用的是宿主机的内核</h5><p>vm是需要Guest OS，所以说新建一个容器的时候，docker不需要像虚拟机一样重新加载一个操作系统，避免引导，虚拟机是加载Guest OS，分钟级别的，而Docker是利用你宿主机的操作系统，省略了这个复杂的过程，秒级！</p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式实现三方登录</title>
      <link href="/myhexo/2019/09/10/date1219/"/>
      <url>/myhexo/2019/09/10/date1219/</url>
      
        <content type="html"><![CDATA[<h3 id="1-开发模式和设计模式"><a href="#1-开发模式和设计模式" class="headerlink" title="1 开发模式和设计模式"></a>1 开发模式和设计模式</h3><h4 id="1-1-开发模式"><a href="#1-1-开发模式" class="headerlink" title="1.1 开发模式"></a>1.1 开发模式</h4><ul><li>mvc    mtv，能够帮我们解耦</li></ul><h4 id="1-2-设计模式"><a href="#1-2-设计模式" class="headerlink" title="1.2 设计模式"></a>1.2 设计模式</h4><ul><li>基于开发模式，设计理念（一种境界）</li><li>工厂模式（一种设计模式）将创建模式更加抽象化，只关心参数，至于怎么变化实现不关心</li></ul><h4 id="1-3-静态方法和类方法的不同"><a href="#1-3-静态方法和类方法的不同" class="headerlink" title="1.3 静态方法和类方法的不同"></a>1.3 静态方法和类方法的不同</h4><ul><li>静态方法不需要实例化对象，直接通过类方法调用</li><li>类方法需要实例化，再调用</li></ul><h4 id="1-4-面向接口开发"><a href="#1-4-面向接口开发" class="headerlink" title="1.4 面向接口开发"></a>1.4 面向接口开发</h4><ul><li>逻辑类似，但是本质又不一样的适合工厂模式</li></ul><h3 id="2-设计模式实现三方登录"><a href="#2-设计模式实现三方登录" class="headerlink" title="2 设计模式实现三方登录"></a>2 设计模式实现三方登录</h3><ul><li>钉钉三方登录</li><li>gitee三方登录</li></ul><h4 id="2-1Django端"><a href="#2-1Django端" class="headerlink" title="2.1Django端"></a>2.1Django端</h4><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> oathapp.models <span class="keyword">import</span> OathModel</span><br><span class="line"><span class="keyword">from</span> oathapp.utils <span class="keyword">import</span> ChooseMethod, GITEE_CLIENT_SECRET, GITEE_CLIENT_ID, GITEE_REDIRECT_URI, DINGDING_APP_SECRET, DINGDING_APP_ID</span><br><span class="line"><span class="keyword">from</span> userapp.utils <span class="keyword">import</span> create_token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetUrlView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        t = request.GET.get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">        url = ChooseMethod.choose(<span class="built_in">str</span>(t))</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;url&#x27;</span>: <span class="built_in">str</span>(url), <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>:t&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GiteeRedirectView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        code = request.data.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;client_id&#x27;</span>: GITEE_CLIENT_ID,</span><br><span class="line">            <span class="string">&#x27;client_secret&#x27;</span>: GITEE_CLIENT_SECRET,</span><br><span class="line">            <span class="string">&#x27;grant_type&#x27;</span>: <span class="string">&#x27;authorization_code&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>: code,</span><br><span class="line">            <span class="string">&#x27;redirect_uri&#x27;</span>: GITEE_REDIRECT_URI,</span><br><span class="line">        &#125;</span><br><span class="line">        url = <span class="string">&#x27;https://gitee.com/oauth/token&#x27;</span></span><br><span class="line">        redirect_data = requests.post(url=url, data=data).json()</span><br><span class="line">        token = redirect_data[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">        message = requests.get(<span class="string">&#x27;https://gitee.com/api/v5/user?access_token=&#x27;</span> + token).json()</span><br><span class="line">        uid = message.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            oath_user = OathModel.objects.get(uid=uid, oath_type=<span class="string">&quot;2&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            oath_user = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> oath_user:</span><br><span class="line">            user = oath_user</span><br><span class="line">            username = user.username</span><br><span class="line">            token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27;token&#x27;</span>:token, <span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = message.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">            user = OathModel.objects.create(username=username, uid=uid, oath_type=<span class="string">&quot;2&quot;</span>)</span><br><span class="line">            oath_token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27; oath_token&#x27;</span>: oath_token, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingRedirectView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        code = request.data.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        t = time.time()</span><br><span class="line">        timestamp = <span class="built_in">str</span>((<span class="built_in">int</span>(<span class="built_in">round</span>(t * <span class="number">1000</span>))))</span><br><span class="line">        signature = base64.b64encode(hmac.new(DINGDING_APP_SECRET.encode(<span class="string">&#x27;utf-8&#x27;</span>), timestamp.encode(<span class="string">&#x27;utf-8&#x27;</span>), digestmod=sha256).digest())</span><br><span class="line">        payload = &#123;<span class="string">&#x27;tmp_auth_code&#x27;</span>: code&#125;</span><br><span class="line">        headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">        message = requests.post(<span class="string">&#x27;https://oapi.dingtalk.com/sns/getuserinfo_bycode?signature=&#x27;</span> + urllib.parse.quote(</span><br><span class="line">        signature.decode(<span class="string">&quot;utf-8&quot;</span>)) + <span class="string">&quot;&amp;timestamp=&quot;</span> + timestamp + <span class="string">&quot;&amp;accessKey=&quot;</span>+ DINGDING_APP_ID,data=json.dumps(payload), headers=headers)</span><br><span class="line">        message_dict = json.loads(message.text)</span><br><span class="line">        print(message_dict)</span><br><span class="line">        ms = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;unionid&#x27;</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            oath_user = OathModel.objects.get(uid=ms, oath_type=<span class="string">&quot;1&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            oath_user = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> oath_user:</span><br><span class="line">            nick = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;nick&#x27;</span>]</span><br><span class="line">            token = create_token(oath_user)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;username&#x27;</span>: nick, <span class="string">&#x27;oath_token&#x27;</span>:token, <span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;nick&#x27;</span>]</span><br><span class="line">            user = OathModel.objects.create(username=username, uid=ms, oath_type=<span class="string">&quot;1&quot;</span>)</span><br><span class="line">            oath_token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27; oath_token&#x27;</span>: oath_token, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li>utils.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Gitee</span></span><br><span class="line">GITEE_CLIENT_ID = <span class="string">&#x27;3c87c87eada7f893aa6eff464388aed8a8549a261d4289c4b112af935fd12e2e&#x27;</span></span><br><span class="line">GITEE_REDIRECT_URI = <span class="string">&#x27;http://127.0.0.1:8080/index?type=2&#x27;</span></span><br><span class="line">GITEE_CLIENT_SECRET = <span class="string">&#x27;5d7e49dfb57aa15015015bef0fcf9e139fa000fe43af1ac18d9776199b15983d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DingDing</span></span><br><span class="line">DINGDING_APP_ID = <span class="string">&#x27;dingoayjscr9lrrmppm9en&#x27;</span></span><br><span class="line">DINGDING_REDIRECT_URI = <span class="string">&#x27;http://127.0.0.1:8080/index?type=aaa&#x27;</span></span><br><span class="line">DINGDING_APP_SECRET = <span class="string">&#x27;oczDpVdg4IGfX_JfQNMJnFA338sHrMOHvH1BrGqyM0vG8vYQGemcaAnutCTSORrT&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GiteeFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://gitee.com/oauth/authorize?client_id=&#123;&#125;&amp;redirect_uri=&#123;&#125;&amp;response_type=code&#x27;</span>.<span class="built_in">format</span>(GITEE_CLIENT_ID, GITEE_REDIRECT_URI)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://oapi.dingtalk.com/connect/qrconnect?appid=&#123;&#125;&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE&amp;redirect_uri=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(DINGDING_APP_ID, DINGDING_REDIRECT_URI)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FaceBookFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">222</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChooseMethod</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choose</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            num = GiteeFirst()</span><br><span class="line">            <span class="keyword">return</span> num</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> FaceBookFirst()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> DingDingFirst()</span><br></pre></td></tr></table></figure><h4 id="2-2-Vue端"><a href="#2-2-Vue端" class="headerlink" title="2.2 Vue端"></a>2.2 Vue端</h4><ul><li>Login.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;margin-top:200px&quot;&gt;</span><br><span class="line">        &lt;center&gt;&lt;h1 style&#x3D;&quot;margin-top:50px&quot;&gt;登&amp;emsp;录&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">        &lt;div style&#x3D;&quot;margin:0 auto;width:500px;height:200px&quot;&gt;</span><br><span class="line">            用户名：</span><br><span class="line">                &lt;a-input placeholder&#x3D;&quot;input your username&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;username&quot;&#x2F;&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            密&amp;ensp;&amp;ensp;码：</span><br><span class="line">                &lt;a-input-password placeholder&#x3D;&quot;input your password&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">              &lt;a-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message_code&quot;  style&#x3D;&quot;width:200px&quot;&#x2F;&gt;&amp;emsp;&lt;a-button type&#x3D;&quot;primary&quot;  @click&#x3D;&quot;getMessageCode&quot;&gt;钉钉获取验证码&lt;&#x2F;a-button&gt;</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">              &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;login&quot;&gt;登录&lt;&#x2F;a-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;a-button @click&#x3D;&quot;giteeGo&quot;&gt;Gitee&lt;&#x2F;a-button&gt;&amp;emsp;&amp;emsp;&lt;a-button @click&#x3D;&quot;DingDingGo&quot;&gt;DingDing&lt;&#x2F;a-button&gt;&amp;emsp;&amp;emsp;&lt;a-button&gt;Facebook&lt;&#x2F;a-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; get_message_code, user_login, get_oath_url &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username:&#39;&#39;,</span><br><span class="line">            password:&#39;&#39;,</span><br><span class="line">            message_code:&#39;&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取验证码</span><br><span class="line">        getMessageCode()&#123;</span><br><span class="line">            get_message_code().then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                res.code &#x3D;&#x3D; 200?alert(&#39;获取验证码成功&#39;)&amp;sessionStorage.setItem(&#39;session_key&#39;, res.session_key):alert(&#39;失败失败&#39;)</span><br><span class="line">                &#x2F;&#x2F; res.code &#x3D;&#x3D; 200?alert(&#39;获取验证码成功&#39;):alert(&#39;失败失败&#39;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 登录</span><br><span class="line">        login()&#123;</span><br><span class="line">            let user_info &#x3D; &#123;</span><br><span class="line">                &#39;username&#39;:this.username,</span><br><span class="line">                &#39;password&#39;:this.password,</span><br><span class="line">                &#39;num&#39;:this.message_code,</span><br><span class="line">                &#39;session_key&#39;: sessionStorage.getItem(&#39;session_key&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            user_login(user_info).then(</span><br><span class="line">                res&#x3D;&gt;&#123;</span><br><span class="line">                   console.log(res) </span><br><span class="line">                   res.code &#x3D;&#x3D; 200?alert(&#39;登录成功&#39;):alert(&#39;登录失败&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; gitee获取三方地址</span><br><span class="line">        giteeGo()&#123;</span><br><span class="line">            get_oath_url(&#123;&#39;type&#39;: &#39;2&#39;&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                window.location.href &#x3D; res.url</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            &#x2F;&#x2F; window.location.href&#x3D;&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; dingding获取三方地址</span><br><span class="line">        DingDingGo()&#123;</span><br><span class="line">            get_oath_url(&#123;&#39;type&#39;:&#39;1&#39;&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res.url)</span><br><span class="line">                window.location.href&#x3D;res.url</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ul><li>Index.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h3&gt;欢迎您访问，亲爱的&#123;&#123;username&#125;&#125;&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; import &#123; get_gitee_redirect_url, get_dingding_redirect_url &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            &#x2F;&#x2F; 后端自动跳转，所以不用这种方法啦 </span><br><span class="line">            username:&#39;&#39;,</span><br><span class="line">            token:this.$route.query.code,</span><br><span class="line">            type:this.$route.query.type,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getGiteeRedirectUrl()&#123;</span><br><span class="line">            get_gitee_redirect_url(&#123;&#39;code&#39;: this.code&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                this.username &#x3D; res.username</span><br><span class="line">                sessionStorage.setItem(&#39;oath_token&#39;, res.oath_token)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        getDingDingRedirectUrl()&#123;</span><br><span class="line">            get_dingding_redirect_url(&#123;&#39;code&#39;: this.code&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                this.username &#x3D; res.username</span><br><span class="line">                sessionStorage.setItem(&#39;oath_token&#39;, res.oath_token)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">        if(this.type&#x3D;&#x3D;2)&#123;</span><br><span class="line">            this.getGiteeRedirectUrl()</span><br><span class="line">        &#125;else if(this.type&#x3D;&#x3D;null)&#123;</span><br><span class="line">            this.getDingDingRedirectUrl()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.log(2222222222222)</span><br><span class="line">        &#125;</span><br><span class="line">        sessionStorage.setItem(&#39;oath_token&#39;, this.oath_token)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="3-设计模式实现三方登录（改进版）"><a href="#3-设计模式实现三方登录（改进版）" class="headerlink" title="3 设计模式实现三方登录（改进版）"></a>3 设计模式实现三方登录（改进版）</h3><ul><li>回调地址写第二个视图函数地址，第一次拼接地址直接跳转第二个方法，第二次视图函数返回值是一个拼接好的路由，直接跳转前端页面，这种改良少了一个接口！！！</li></ul><h4 id="3-1-Django端"><a href="#3-1-Django端" class="headerlink" title="3.1 Django端"></a>3.1 Django端</h4><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> oathapp.models <span class="keyword">import</span> OathModel</span><br><span class="line"><span class="keyword">from</span> oathapp.utils <span class="keyword">import</span> ChooseMethod, GITEE_CLIENT_SECRET, GITEE_CLIENT_ID, GITEE_REDIRECT_URI, DINGDING_APP_SECRET, DINGDING_APP_ID</span><br><span class="line"><span class="keyword">from</span> userapp.utils <span class="keyword">import</span> create_token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetUrlView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        t = request.GET.get(<span class="string">&#x27;type&#x27;</span>)</span><br><span class="line">        url = ChooseMethod.choose(<span class="built_in">str</span>(t))</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;url&#x27;</span>: <span class="built_in">str</span>(url), <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>:t&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GiteeRedirectView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        code = request.GET.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;client_id&#x27;</span>: GITEE_CLIENT_ID,</span><br><span class="line">            <span class="string">&#x27;client_secret&#x27;</span>: GITEE_CLIENT_SECRET,</span><br><span class="line">            <span class="string">&#x27;grant_type&#x27;</span>: <span class="string">&#x27;authorization_code&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>: code,</span><br><span class="line">            <span class="string">&#x27;redirect_uri&#x27;</span>: GITEE_REDIRECT_URI,</span><br><span class="line">        &#125;</span><br><span class="line">        url = <span class="string">&#x27;https://gitee.com/oauth/token&#x27;</span></span><br><span class="line">        redirect_data = requests.post(url=url, data=data).json()</span><br><span class="line">        token = redirect_data[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">        message = requests.get(<span class="string">&#x27;https://gitee.com/api/v5/user?access_token=&#x27;</span> + token).json()</span><br><span class="line">        uid = message.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            oath_user = OathModel.objects.get(uid=uid, oath_type=<span class="string">&quot;2&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            oath_user = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> oath_user:</span><br><span class="line">            user = oath_user</span><br><span class="line">            username = user.username</span><br><span class="line">            oath_token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;http://127.0.0.1:8080/index/?token=&#x27;</span> + oath_token + <span class="string">&quot;&amp;username=&quot;</span> + username)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            username = message.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">            user = OathModel.objects.create(username=username, uid=uid, oath_type=<span class="string">&quot;2&quot;</span>)</span><br><span class="line">            oath_token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;http://127.0.0.1:8080/index/?token=&#x27;</span> + oath_token + <span class="string">&quot;&amp;username=&quot;</span> + username)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingRedirectView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        code = request.GET.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        t = time.time()</span><br><span class="line">        timestamp = <span class="built_in">str</span>((<span class="built_in">int</span>(<span class="built_in">round</span>(t * <span class="number">1000</span>))))</span><br><span class="line">        signature = base64.b64encode(hmac.new(DINGDING_APP_SECRET.encode(<span class="string">&#x27;utf-8&#x27;</span>), timestamp.encode(<span class="string">&#x27;utf-8&#x27;</span>), digestmod=sha256).digest())</span><br><span class="line">        payload = &#123;<span class="string">&#x27;tmp_auth_code&#x27;</span>: code&#125;</span><br><span class="line">        headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">        message = requests.post(<span class="string">&#x27;https://oapi.dingtalk.com/sns/getuserinfo_bycode?signature=&#x27;</span> + urllib.parse.quote(</span><br><span class="line">        signature.decode(<span class="string">&quot;utf-8&quot;</span>)) + <span class="string">&quot;&amp;timestamp=&quot;</span> + timestamp + <span class="string">&quot;&amp;accessKey=&quot;</span>+ DINGDING_APP_ID,data=json.dumps(payload), headers=headers)</span><br><span class="line">        message_dict = json.loads(message.text)</span><br><span class="line">        print(message_dict)</span><br><span class="line">        ms = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;unionid&#x27;</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            oath_user = OathModel.objects.get(uid=ms, oath_type=<span class="string">&quot;1&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            oath_user = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> oath_user:</span><br><span class="line">            nick = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;nick&#x27;</span>]</span><br><span class="line">            oath_token = create_token(oath_user)</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;http://127.0.0.1:8080/index/?token=&#x27;</span> + <span class="built_in">str</span>(oath_token) + <span class="string">&quot;&amp;username=&quot;</span> + nick)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            nick = message_dict.get(<span class="string">&#x27;user_info&#x27;</span>)[<span class="string">&#x27;nick&#x27;</span>]</span><br><span class="line">            user = OathModel.objects.create(username=nick, uid=ms, oath_type=<span class="string">&quot;1&quot;</span>)</span><br><span class="line">            oath_token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> redirect(<span class="string">&#x27;http://127.0.0.1:8080/index/?token=&#x27;</span> + <span class="built_in">str</span>(oath_token) + <span class="string">&quot;&amp;username=&quot;</span> + nick)</span><br></pre></td></tr></table></figure><ul><li>utils.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Gitee</span></span><br><span class="line">GITEE_CLIENT_ID = <span class="string">&#x27;3c87c87eada7f893aa6eff464388aed8a8549a261d4289c4b112af935fd12e2e&#x27;</span></span><br><span class="line">GITEE_REDIRECT_URI = <span class="string">&#x27;http://192.168.56.100:4184/oath/redirect_gitee_url/&#x27;</span></span><br><span class="line">GITEE_CLIENT_SECRET = <span class="string">&#x27;5d7e49dfb57aa15015015bef0fcf9e139fa000fe43af1ac18d9776199b15983d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DingDing</span></span><br><span class="line">DINGDING_APP_ID = <span class="string">&#x27;dingoayjscr9lrrmppm9en&#x27;</span></span><br><span class="line">DINGDING_REDIRECT_URI = <span class="string">&#x27;http://192.168.56.100:4184/oath/redirect_dingding_url/&#x27;</span></span><br><span class="line">DINGDING_APP_SECRET = <span class="string">&#x27;oczDpVdg4IGfX_JfQNMJnFA338sHrMOHvH1BrGqyM0vG8vYQGemcaAnutCTSORrT&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GiteeFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://gitee.com/oauth/authorize?client_id=&#123;&#125;&amp;redirect_uri=&#123;&#125;&amp;response_type=code&#x27;</span>.<span class="built_in">format</span>(GITEE_CLIENT_ID, GITEE_REDIRECT_URI)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;https://oapi.dingtalk.com/connect/qrconnect?appid=&#123;&#125;&amp;response_type=code&amp;scope=snsapi_login&amp;state=STATE&amp;redirect_uri=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(DINGDING_APP_ID, DINGDING_REDIRECT_URI)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FaceBookFirst</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">222</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChooseMethod</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choose</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            num = GiteeFirst()</span><br><span class="line">            <span class="keyword">return</span> num</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> FaceBookFirst()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> DingDingFirst()</span><br></pre></td></tr></table></figure><h4 id="3-2-Vue端"><a href="#3-2-Vue端" class="headerlink" title="3.2 Vue端"></a>3.2 Vue端</h4><ul><li>Login.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;margin-top:200px&quot;&gt;</span><br><span class="line">        &lt;center&gt;&lt;h1 style&#x3D;&quot;margin-top:50px&quot;&gt;登&amp;emsp;录&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">        &lt;div style&#x3D;&quot;margin:0 auto;width:500px;height:200px&quot;&gt;</span><br><span class="line">            用户名：</span><br><span class="line">                &lt;a-input placeholder&#x3D;&quot;input your username&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;username&quot;&#x2F;&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            密&amp;ensp;&amp;ensp;码：</span><br><span class="line">                &lt;a-input-password placeholder&#x3D;&quot;input your password&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">              &lt;a-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message_code&quot;  style&#x3D;&quot;width:200px&quot;&#x2F;&gt;&amp;emsp;&lt;a-button type&#x3D;&quot;primary&quot;  @click&#x3D;&quot;getMessageCode&quot;&gt;钉钉获取验证码&lt;&#x2F;a-button&gt;</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">              &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;login&quot;&gt;登录&lt;&#x2F;a-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;a-button @click&#x3D;&quot;giteeGo&quot;&gt;Gitee&lt;&#x2F;a-button&gt;&amp;emsp;&amp;emsp;&lt;a-button @click&#x3D;&quot;DingDingGo&quot;&gt;DingDing&lt;&#x2F;a-button&gt;&amp;emsp;&amp;emsp;&lt;a-button&gt;Facebook&lt;&#x2F;a-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; get_message_code, user_login, get_oath_url &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username:&#39;&#39;,</span><br><span class="line">            password:&#39;&#39;,</span><br><span class="line">            message_code:&#39;&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取验证码</span><br><span class="line">        getMessageCode()&#123;</span><br><span class="line">            get_message_code().then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                res.code &#x3D;&#x3D; 200?alert(&#39;获取验证码成功&#39;)&amp;sessionStorage.setItem(&#39;session_key&#39;, res.session_key):alert(&#39;失败失败&#39;)</span><br><span class="line">                &#x2F;&#x2F; res.code &#x3D;&#x3D; 200?alert(&#39;获取验证码成功&#39;):alert(&#39;失败失败&#39;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 登录</span><br><span class="line">        login()&#123;</span><br><span class="line">            let user_info &#x3D; &#123;</span><br><span class="line">                &#39;username&#39;:this.username,</span><br><span class="line">                &#39;password&#39;:this.password,</span><br><span class="line">                &#39;num&#39;:this.message_code,</span><br><span class="line">                &#39;session_key&#39;: sessionStorage.getItem(&#39;session_key&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            user_login(user_info).then(</span><br><span class="line">                res&#x3D;&gt;&#123;</span><br><span class="line">                   console.log(res) </span><br><span class="line">                   res.code &#x3D;&#x3D; 200?alert(&#39;登录成功&#39;):alert(&#39;登录失败&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; gitee获取三方地址</span><br><span class="line">        giteeGo()&#123;</span><br><span class="line">            get_oath_url(&#123;&#39;type&#39;: &#39;2&#39;&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                window.location.href &#x3D; res.url</span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; dingding获取三方地址</span><br><span class="line">        DingDingGo()&#123;</span><br><span class="line">            get_oath_url(&#123;&#39;type&#39;:&#39;1&#39;&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res.url)</span><br><span class="line">                window.location.href&#x3D;res.url</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ul><li>Index.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h3&gt;欢迎您访问，亲爱的&#123;&#123;username&#125;&#125;&lt;&#x2F;h3&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username:this.$route.query.username,</span><br><span class="line">            oath_token:this.$route.query.oath_token</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">        sessionStorage.setItem(&#39;oath_token&#39;, this.oath_token)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="4-跨域问题"><a href="#4-跨域问题" class="headerlink" title="4 跨域问题"></a>4 跨域问题</h3><p><img src="F:/PracticalTraining2/Note/imgs/image-20201217092343364.png" alt="image-20201217092343364"></p><h4 id="4-1-解决方案"><a href="#4-1-解决方案" class="headerlink" title="4.1 解决方案"></a>4.1 解决方案</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">改为</span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">)</span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">不能写</span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="4-2-用终端运行"><a href="#4-2-用终端运行" class="headerlink" title="4.2 用终端运行"></a>4.2 用终端运行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^C(syl) root@dev:gogogo<span class="comment"># python manage.py runserver 192.168.56.100:4184</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
            <tag> 三方登录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钉钉机器人发送数据session储存问题解决</title>
      <link href="/myhexo/2019/05/17/date1217/"/>
      <url>/myhexo/2019/05/17/date1217/</url>
      
        <content type="html"><![CDATA[<h3 id="1-用户模块梳理"><a href="#1-用户模块梳理" class="headerlink" title="1 用户模块梳理"></a>1 用户模块梳理</h3><h4 id="1-1-注册"><a href="#1-1-注册" class="headerlink" title="1.1 注册"></a>1.1 注册</h4><p>我们在编写注册模块的时候，尤其是高负载的情况下，尽可能地不读库，会极大地提高我们的性能。可以采用唯一索引。</p><h4 id="1-2-登录"><a href="#1-2-登录" class="headerlink" title="1.2 登录"></a>1.2 登录</h4><p>在登录的时候，我们要有一个思想，单因子登录，双因子登录和三因子登录</p><ul><li>单因子登录：传统的验证用户名，密码这种机制不安全（密码为唯一登录，不安全）图片验证码</li><li>双因子登录：需要东西来验证，识别（短信，邮件）</li><li>三因子登录：滑块，面部识别，指纹验证</li></ul><h4 id="1-3-模型梳理"><a href="#1-3-模型梳理" class="headerlink" title="1.3 模型梳理"></a>1.3 模型梳理</h4><ul><li>webhook 动向扩展</li></ul><p>整体思路就是，通过webhook把验证码发给机器人，机器人在钉钉端告诉用户这个码是多少，用户看到码，把码通过表单形式，然后django端作对比，判断是否登录成功。</p><h3 id="2-所遇到的问题"><a href="#2-所遇到的问题" class="headerlink" title="2 所遇到的问题"></a>2 所遇到的问题</h3><h4 id="2-1-设置钉钉机器人问题"><a href="#2-1-设置钉钉机器人问题" class="headerlink" title="2.1 设置钉钉机器人问题"></a>2.1 设置钉钉机器人问题</h4><ul><li>重要的地方（一）—&gt; 加签</li></ul><ul><li>重要的地方（二）—&gt; 获取webhook</li></ul><h4 id="2-2-session问题"><a href="#2-2-session问题" class="headerlink" title="2.2 session问题"></a>2.2 session问题</h4><ul><li><p>非常可气，postman调试十分正常，但是浏览器没有效果。</p></li><li><p>根据自己的理解，写了一个比较low的解决方案。</p></li><li><p>由于采取的是session存储，那就意味着，没有办法在获取完验证码，<code>request.session[&#39;key&#39;]=value</code> 的情况下，在下一个视图继续获取了。</p></li></ul><h3 id="3-代码实例"><a href="#3-代码实例" class="headerlink" title="3 代码实例"></a>3 代码实例</h3><h4 id="3-1-Django端"><a href="#3-1-Django端" class="headerlink" title="3.1 Django端"></a>3.1 Django端</h4><ul><li>settings里无需配置</li></ul><h5 id="3-1-1-views-py"><a href="#3-1-1-views-py" class="headerlink" title="3.1.1 views.py"></a>3.1.1 views.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.hashers <span class="keyword">import</span> make_password, check_password</span><br><span class="line"><span class="keyword">from</span> django.contrib.sessions.models <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> userapp.models <span class="keyword">import</span> UserModel</span><br><span class="line"><span class="keyword">from</span> userapp.utils <span class="keyword">import</span> create_token, message_code, dingding_robot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegisterView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        username = request.data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        tel = request.data.get(<span class="string">&#x27;tel&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = UserModel.objects.create(username=username, password=make_password(password),tel=tel)</span><br><span class="line">            token = create_token(user)</span><br><span class="line">            <span class="keyword">return</span> Response(</span><br><span class="line">                &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;注册成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>, <span class="string">&#x27;token&#x27;</span>: token&#125;</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">&#x27;异常&#x27;</span>, e)</span><br><span class="line">            <span class="keyword">return</span> Response(</span><br><span class="line">                &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;用户名或手机号重复&#x27;</span>, <span class="string">&#x27;code&#x27;</span>:<span class="number">400</span>&#125;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        num = request.data.get(<span class="string">&#x27;num&#x27;</span>)</span><br><span class="line">        username = request.data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        get_key = request.data.get(<span class="string">&#x27;session_key&#x27;</span>)</span><br><span class="line">        user = UserModel.objects.<span class="built_in">filter</span>(username=username).first()</span><br><span class="line">        <span class="keyword">if</span> check_password(password, user.password):</span><br><span class="line">            session_data = Session.objects.get(pk=get_key).get_decoded()</span><br><span class="line">            num_get = session_data.get(<span class="string">&#x27;num&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> num == <span class="built_in">str</span>(num_get):</span><br><span class="line">                token = create_token(user)</span><br><span class="line">                <span class="keyword">return</span> Response(</span><br><span class="line">                    &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;登录成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;token&#x27;</span>: token, <span class="string">&#x27;num&#x27;</span>:num&#125;</span><br><span class="line">                )</span><br><span class="line">        <span class="keyword">return</span> Response(</span><br><span class="line">            &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;登录失败&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">400</span>&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DingDingView</span>(<span class="params">APIView</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        num = message_code()</span><br><span class="line">        dingding_robot(num)</span><br><span class="line">        request.session[<span class="string">&#x27;num&#x27;</span>] = num</span><br><span class="line">        request.session.set_expiry(<span class="number">300</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> request.session.session_key:</span><br><span class="line">            request.session.create()</span><br><span class="line">        <span class="keyword">return</span> Response(</span><br><span class="line">            &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;发送成功&#x27;</span>, <span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>, <span class="string">&#x27;num&#x27;</span>:num, <span class="string">&#x27;session_key&#x27;</span>: request.session.session_key&#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h5 id="3-1-2-utils-py"><a href="#3-1-2-utils-py" class="headerlink" title="3.1.2 utils.py"></a>3.1.2 utils.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.settings <span class="keyword">import</span> api_settings</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_token</span>(<span class="params">user</span>):</span></span><br><span class="line">    jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER</span><br><span class="line">    jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER</span><br><span class="line">    payload = jwt_payload_handler(user)</span><br><span class="line">    token = jwt_encode_handler(payload)</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message_code</span>():</span></span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    num = random.randint(<span class="number">100000</span>, <span class="number">999999</span>)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dingding_robot</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    <span class="keyword">import</span> hmac</span><br><span class="line">    <span class="keyword">import</span> hashlib</span><br><span class="line">    <span class="keyword">import</span> base64</span><br><span class="line">    <span class="keyword">import</span> urllib.parse</span><br><span class="line">    timestamp = <span class="built_in">str</span>(<span class="built_in">round</span>(time.time() * <span class="number">1000</span>))</span><br><span class="line">    secret = <span class="string">&#x27;SECc0cc53c0179ded46f9050ff40c8c767f2bd0f50a2e7255c1bc9afa014d246db2&#x27;</span></span><br><span class="line">    secret_enc = secret.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    string_to_sign = <span class="string">&#x27;&#123;&#125;\n&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(timestamp, secret)</span><br><span class="line">    string_to_sign_enc = string_to_sign.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    hmac_code = hmac.new(secret_enc, string_to_sign_enc, digestmod=hashlib.sha256).digest()</span><br><span class="line">    sign = urllib.parse.quote_plus(base64.b64encode(hmac_code))</span><br><span class="line">    <span class="keyword">import</span> requests, json  <span class="comment"># 导入依赖库</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;  <span class="comment"># 定义数据类型</span></span><br><span class="line">    webhook = <span class="string">&#x27;https://oapi.dingtalk.com/robot/send?access_token=2c3730563856be4f9dfc1ed8cfa1e1789c6ec88ba4964782529d4b866f503d1a&amp;timestamp=&#123;&#125;&amp;sign=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(timestamp,sign)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;text&quot;</span>: &#123;<span class="string">&quot;content&quot;</span>: num&#125;,</span><br><span class="line">        <span class="string">&quot;isAtAll&quot;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">    res = requests.post(webhook, data=json.dumps(data), headers=headers)  <span class="comment"># 发送post请求</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h4 id="3-2-Vue端"><a href="#3-2-Vue端" class="headerlink" title="3.2 Vue端"></a>3.2 Vue端</h4><h5 id="3-2-1-Register-vue"><a href="#3-2-1-Register-vue" class="headerlink" title="3.2.1 Register.vue"></a>3.2.1 Register.vue</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;margin-top:200px&quot;&gt;</span><br><span class="line">        &lt;center&gt;&lt;h1 style&#x3D;&quot;margin-top:50px&quot;&gt;注&amp;emsp;册&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">        &lt;div style&#x3D;&quot;margin:0 auto;width:500px;height:200px&quot;&gt;</span><br><span class="line">            用户名：</span><br><span class="line">                &lt;a-input placeholder&#x3D;&quot;input your username&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;username&quot;&#x2F;&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            密&amp;ensp;&amp;ensp;码：</span><br><span class="line">                &lt;a-input-password placeholder&#x3D;&quot;input your password&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">            手机号：</span><br><span class="line">                &lt;a-input placeholder&#x3D;&quot;input your telphone&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;tel&quot;&#x2F;&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">              &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;register&quot;&gt;注册&lt;&#x2F;a-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; user_register &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username:&#39;&#39;,</span><br><span class="line">            password:&#39;&#39;,</span><br><span class="line">            tel:&#39;&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        register()&#123;</span><br><span class="line">            let register_data &#x3D; &#123;</span><br><span class="line">                &#39;username&#39;:this.username,</span><br><span class="line">                &#39;password&#39;: this.password,</span><br><span class="line">                &#39;tel&#39;:this.tel</span><br><span class="line">            &#125;</span><br><span class="line">            user_register(register_data).then(res&#x3D;&gt;&#123;</span><br><span class="line">                &#x2F;&#x2F; 已生成token，可以免登陆直接跳主页的，后续写</span><br><span class="line">                res.code &#x3D;&#x3D; 200?alert(&#39;注册成功，即将跳转登录界面&#39;)&amp;this.$router.push(&#39;&#x2F;login&#39;):alert(&#39;请保证用户名和手机号唯一哦&#39;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-Login-vue"><a href="#3-2-2-Login-vue" class="headerlink" title="3.2.2 Login.vue"></a>3.2.2 Login.vue</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div style&#x3D;&quot;margin-top:200px&quot;&gt;</span><br><span class="line">        &lt;center&gt;&lt;h1 style&#x3D;&quot;margin-top:50px&quot;&gt;登&amp;emsp;录&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">        &lt;div style&#x3D;&quot;margin:0 auto;width:500px;height:200px&quot;&gt;</span><br><span class="line">            用户名：</span><br><span class="line">                &lt;a-input placeholder&#x3D;&quot;input your username&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;username&quot;&#x2F;&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            密&amp;ensp;&amp;ensp;码：</span><br><span class="line">                &lt;a-input-password placeholder&#x3D;&quot;input your password&quot; style&#x3D;&quot;width:300px&quot; v-model&#x3D;&quot;password&quot;&#x2F;&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">                &lt;br&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">              &lt;a-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message_code&quot;  style&#x3D;&quot;width:200px&quot;&#x2F;&gt;&amp;emsp;&lt;a-button type&#x3D;&quot;primary&quot;  @click&#x3D;&quot;getMessageCode&quot;&gt;钉钉获取验证码&lt;&#x2F;a-button&gt;</span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">              &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;login&quot;&gt;登录&lt;&#x2F;a-button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; get_message_code, user_login &#125; from &#39;@&#x2F;http&#x2F;apis&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username:&#39;&#39;,</span><br><span class="line">            password:&#39;&#39;,</span><br><span class="line">            message_code:&#39;&#39;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取验证码</span><br><span class="line">        getMessageCode()&#123;</span><br><span class="line">            get_message_code().then(res&#x3D;&gt;&#123;</span><br><span class="line">                console.log(res)</span><br><span class="line">                res.code &#x3D;&#x3D; 200?alert(&#39;获取验证码成功&#39;)&amp;sessionStorage.setItem(&#39;session_key&#39;, res.session_key):alert(&#39;失败失败&#39;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 登录</span><br><span class="line">        login()&#123;</span><br><span class="line">            let user_info &#x3D; &#123;</span><br><span class="line">                &#39;username&#39;:this.username,</span><br><span class="line">                &#39;password&#39;:this.password,</span><br><span class="line">                &#39;num&#39;:this.message_code,</span><br><span class="line">                &#39;session_key&#39;: sessionStorage.getItem(&#39;session_key&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">            user_login(user_info).then(</span><br><span class="line">                res&#x3D;&gt;&#123;</span><br><span class="line">                   console.log(res) </span><br><span class="line">                   res.code &#x3D;&#x3D; 200?alert(&#39;登录成功&#39;):alert(&#39;登录失败&#39;)</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> session </tag>
            
            <tag> 钉钉机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python解释器</title>
      <link href="/myhexo/2019/05/12/date1216/"/>
      <url>/myhexo/2019/05/12/date1216/</url>
      
        <content type="html"><![CDATA[<h3 id="1-语言相关"><a href="#1-语言相关" class="headerlink" title="1 语言相关"></a>1 语言相关</h3><h4 id="1-1-解释型和编译型语言的区别"><a href="#1-1-解释型和编译型语言的区别" class="headerlink" title="1.1 解释型和编译型语言的区别"></a>1.1 解释型和编译型语言的区别</h4><ul><li>解释型语言：Python  JavaScript  PHP  Shell  MATLAB等</li><li>编译型语言：C、C++、Goloang、Pascal（Delphi）、汇编等</li></ul><h5 id="1-1-1-解释型语言通用解释"><a href="#1-1-1-解释型语言通用解释" class="headerlink" title="1.1.1 解释型语言通用解释"></a>1.1.1 解释型语言通用解释</h5><p>通常不用对源代码进行编译，通过解释器一边执行一边转换，需要哪些源代码就转换哪些源代码，不生成可执行程序</p><p>这种编程语言称为解释型语言，使用的转换工具称为解释器</p><p>但是个解释型语言太过于以来解释器环境，而解释器本身就是一个虚拟环境，没运行代码前就申请内存、开辟空间启动解释器，这样其实过于消耗内存影响效率。</p><ul><li>特点：写代码的效率高，立竿见影看效果，调bug比较轻松，跨平台性好，但是执行效率不行</li></ul><h5 id="1-1-2-编译型语言通用解释"><a href="#1-1-2-编译型语言通用解释" class="headerlink" title="1.1.2 编译型语言通用解释"></a>1.1.2 编译型语言通用解释</h5><p>编译型语言写完后需要进行打包和编译，这会导致编写代码的过程见效慢，但是打包之后就省事了，以后都可以直接使用，也就是说编译后的使用方法非常方便，不像解释型语言，虽然写代码见效快，但是执行起来慢。</p><p>编译语言要求必须提前将所有的源代码一次性转换为二进制指令，生成一个可执行程序，比如像C这样的编程语言就是编译型语言，它所使用的工具称为编译器，也就是经常在linux下安装程序时需要的GCC或者G++</p><ul><li>特点：执行效率高，但是调bug真的很麻烦</li></ul><h5 id="1-1-3-二进制指令"><a href="#1-1-3-二进制指令" class="headerlink" title="1.1.3 二进制指令"></a>1.1.3 二进制指令</h5><p>二进制指令也就是机器码，是CPU能够识别的硬件层面的代码，简陋的硬件（古老的单机片）只能使用几十个指令，强大的硬件（PC、智能手机）能使用成百上千个指令</p><h4 id="1-2-p2-和-p3-的区别"><a href="#1-2-p2-和-p3-的区别" class="headerlink" title="1.2 p2 和 p3 的区别"></a>1.2 p2 和 p3 的区别</h4><ul><li>p2：print为语句，p3：print为方法</li><li>p2：默认为Ascii编码，P3：默认为Unicode(utf-8)</li><li>p2：除法结果为整数，p3：除法结果为浮点数</li><li>p2：默认四个字节表示一个字符，p3：默认二个字节表示一个字符</li><li>p2：map方法返回list，p3：map方法返回iteration</li></ul><h4 id="1-3-解释器的种类及特点"><a href="#1-3-解释器的种类及特点" class="headerlink" title="1.3 解释器的种类及特点"></a>1.3 解释器的种类及特点</h4><ul><li>CPython：C语言开发的，是使用最广的解释器，具有GIL全局解释器锁</li><li>IPython：基于CPython的交互式解释器，功能与CPython无异</li><li>Jython：试运行在Java平台上的Python解释器，可以直接把Python的代码编译成Java字节执行，但CPython没有Jython的垃圾回收机制</li><li>IronPython：IronPython和Jython类似，只不过IronPython是运行在微软.NET平台上的Python解释器，可以直接把Python代码编译成.Net字节码</li><li>PyPy：另一个Python解释器，目标是执行效率采用JIT技术，对Python代码进行动态编译，提高执行效率</li></ul><h4 id="1-4-列举几个PEP8规范"><a href="#1-4-列举几个PEP8规范" class="headerlink" title="1.4 列举几个PEP8规范"></a>1.4 列举几个PEP8规范</h4><h5 id="1-4-1-RFC"><a href="#1-4-1-RFC" class="headerlink" title="1.4.1 RFC"></a>1.4.1 RFC</h5><ul><li>专门用来定义网路请求的标准文档，是一系列以编号排定的文件，文件收集了有关互联网相关信息</li></ul><h5 id="1-4-2-PEP8"><a href="#1-4-2-PEP8" class="headerlink" title="1.4.2 PEP8"></a>1.4.2 PEP8</h5><ul><li>每一级缩进使用4个空格，每行最大字符限制为79个，除了长导包语句，和url地址</li><li>导入通常在分开的行，不推荐同行导入多个模块</li><li>不能使用单字符(1 I O)作为变量名</li><li>类的首字母大写，函数的首字母小写</li></ul><h3 id="2-代码验证"><a href="#2-代码验证" class="headerlink" title="2 代码验证"></a>2 代码验证</h3><h4 id="2-1-切换盘符—-命令行"><a href="#2-1-切换盘符—-命令行" class="headerlink" title="2.1 切换盘符—-命令行"></a>2.1 切换盘符—-命令行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;F:</span><br></pre></td></tr></table></figure><h4 id="2-2-不同解释器验证高并发"><a href="#2-2-不同解释器验证高并发" class="headerlink" title="2.2 不同解释器验证高并发"></a>2.2 不同解释器验证高并发</h4><ul><li>使用全局解释器GIL的原因：高并发情况下，逻辑是没问题的，但是编辑器存在问题</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_it</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):<span class="comment"># 人为构造高并发</span></span><br><span class="line">        num -= n</span><br><span class="line">        num += n</span><br><span class="line">    print(num)</span><br><span class="line"></span><br><span class="line">threads = [</span><br><span class="line">    threading.Thread(target=change_it, args=(<span class="number">8</span>,)),</span><br><span class="line">    <span class="comment"># 加()是调用，声明变量是不需要的，args里面是元祖类型，不写就是默认整形</span></span><br><span class="line">    threading.Thread(target=change_it, args=(<span class="number">10</span>,))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">[t.start() <span class="keyword">for</span> t <span class="keyword">in</span> threads]</span><br><span class="line"><span class="comment"># 列推性能是普通for循环的7倍左右，因为在底层中，是不需要引用计数的</span></span><br><span class="line">[t.join() <span class="keyword">for</span> t <span class="keyword">in</span> threads]</span><br><span class="line"><span class="comment"># 阻塞，所有线程结束，子线程才会结束</span></span><br><span class="line">print(num)</span><br><span class="line"><span class="comment"># 对于pypy来说，可以解决高并发问题，性能远超于Cpython</span></span><br><span class="line"><span class="comment"># 高并发情况下，逻辑是没问题的，但是编辑器存在问题，要加GIL锁</span></span><br></pre></td></tr></table></figure><h4 id="2-3-不同解释器效果"><a href="#2-3-不同解释器效果" class="headerlink" title="2.3 不同解释器效果"></a>2.3 不同解释器效果</h4><h5 id="2-3-1-Cpython-效果"><a href="#2-3-1-Cpython-效果" class="headerlink" title="2.3.1 Cpython 效果"></a>2.3.1 Cpython 效果</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;python test.py</span><br><span class="line">2</span><br><span class="line">-6</span><br><span class="line">-6</span><br><span class="line"></span><br><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;python test.py</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;python test.py</span><br><span class="line">-30</span><br><span class="line">-30</span><br><span class="line">-30</span><br></pre></td></tr></table></figure><h5 id="2-3-2-pypy3-效果"><a href="#2-3-2-pypy3-效果" class="headerlink" title="2.3.2 pypy3 效果"></a>2.3.2 pypy3 效果</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;python test.py</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;python test.py</span><br><span class="line">-30</span><br><span class="line">-30</span><br><span class="line">-30</span><br><span class="line"></span><br><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;pypy3 test.py</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line">f:\monthForth\DjangosNew\django19\django19&gt;pypy3 test.py</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 解释器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python垃圾回收机制</title>
      <link href="/myhexo/2019/03/01/date1215ss/"/>
      <url>/myhexo/2019/03/01/date1215ss/</url>
      
        <content type="html"><![CDATA[<ul><li>本文根据内存管理机制，采用实例来验证内存管理机制，并提出了自己对于python内存管理机制的一些见解。</li></ul><h3 id="1-By-code"><a href="#1-By-code" class="headerlink" title="1 By code"></a>1 By code</h3><h4 id="1-1-引用计数-垃圾回收机制"><a href="#1-1-引用计数-垃圾回收机制" class="headerlink" title="1.1 引用计数+垃圾回收机制"></a>1.1 引用计数+垃圾回收机制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">p1 = Person()</span><br><span class="line">p2 = p1</span><br><span class="line">print(<span class="string">&#x27;p1引用计数：&#x27;</span>, sys.getrefcount(p1))           <span class="comment"># p1引用计数： 3</span></span><br><span class="line"><span class="comment"># del p2</span></span><br><span class="line"><span class="comment"># print(&#x27;p1引用计数：&#x27;, sys.getrefcount(p1))         # p2引用计数： 2</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">id</span>(p1))                                       <span class="comment"># 1901831032904</span></span><br><span class="line">print(<span class="built_in">id</span>(p2))                                       <span class="comment"># 1901831032904</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> p1 <span class="keyword">is</span> p2:</span><br><span class="line">    print(<span class="string">&#x27;yes&#x27;</span>)                                    <span class="comment"># yes</span></span><br><span class="line"></span><br><span class="line">print(sys.getsizeof(p1))                            <span class="comment"># 56 bites</span></span><br></pre></td></tr></table></figure><h4 id="1-2-分代回收"><a href="#1-2-分代回收" class="headerlink" title="1.2 分代回收"></a>1.2 分代回收</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">p = Person()</span><br><span class="line">d = Dog()</span><br><span class="line">p.pet = d</span><br><span class="line">d.master = p</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;p引用计数：&#x27;</span>, sys.getrefcount(p))           <span class="comment"># p引用计数： 3</span></span><br><span class="line">print(<span class="string">&#x27;d引用计数：&#x27;</span>, sys.getrefcount(d))           <span class="comment"># d引用计数： 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> p</span><br><span class="line">print(<span class="string">&#x27;d引用计数：&#x27;</span>, sys.getrefcount(d))           <span class="comment"># d引用计数： 3</span></span><br></pre></td></tr></table></figure><h3 id="2-Notice"><a href="#2-Notice" class="headerlink" title="2 Notice"></a>2 Notice</h3><h4 id="2-1-引用计数"><a href="#2-1-引用计数" class="headerlink" title="2.1 引用计数"></a>2.1 引用计数</h4><p>引用计数是编程语言总的一种内存管理技术，将资源的被引用次数保存起来。</p><ul><li>资源：可以是对象，内存或磁盘空间等</li><li>def语句会删除对象的一个引用，这将导致该引用指向的对象的引用计数减1</li><li>任何追踪或调试程序会给对象增加一个额外引用，这会推迟该对象被回收的时间</li><li>由于两个或以上对象互相引用时，彼此引用计数不为0，造成循环应用而无法回收</li></ul><h4 id="2-2-标记-清除"><a href="#2-2-标记-清除" class="headerlink" title="2.2 标记-清除"></a>2.2 标记-清除</h4><ul><li>标记清除分为两个阶段，首先标记对象（垃圾检测），然后清除垃圾（垃圾回收）</li></ul><h5 id="2-2-1-标记"><a href="#2-2-1-标记" class="headerlink" title="2.2.1 标记"></a>2.2.1 标记</h5><p>在此阶段，垃圾回收器会从跟对象开始遍历。</p><p>每个可以从根对象访问到的对象都会被添加标识，这个对象被标识为可到达对象，可到达对象不会被清除。</p><h5 id="2-2-2-清除"><a href="#2-2-2-清除" class="headerlink" title="2.2.2 清除"></a>2.2.2 清除</h5><p>在此阶段，垃圾回收器会对堆内存从头到尾进行线性遍历</p><p>如果发现有对象没有被标识为可到达对象，那么就此对象内存回收</p><p>之后将原来标记为可到达对象的标识抹掉，以便进行下一次垃圾回收操作</p><h5 id="2-2-3-标记清除存在的问题"><a href="#2-2-3-标记清除存在的问题" class="headerlink" title="2.2.3 标记清除存在的问题"></a>2.2.3 标记清除存在的问题</h5><p>标记-清除算法的比较大的缺点就是垃圾收集后有可能会造成大量的内存碎片，其次由于需要遍历的内存节点较多时，每次回收都将花费时间在遍历节点过程中</p><h5 id="2-2-4-注意事项"><a href="#2-2-4-注意事项" class="headerlink" title="2.2.4 注意事项"></a>2.2.4 注意事项</h5><ul><li>collector </li></ul><p>垃圾收集器</p><ul><li>mutator</li></ul><p>指的是垃圾收集器之外的部分（比如当前的应用程序，可以直接被mutator直接访问到的对象，一般指静态—-&gt;全局变量）</p><ul><li>可到达对象</li></ul><p>所谓的可到达对象就是从根对象开始遍历，可以访问到的对象，也就是mutator(应用程序)正在使用的对象</p><h4 id="2-3-分代回收"><a href="#2-3-分代回收" class="headerlink" title="2.3 分代回收"></a>2.3 分代回收</h4><ul><li>由于嵌套引用无法被回收（分层，打标签）</li></ul><h5 id="2-3-1-核心思想"><a href="#2-3-1-核心思想" class="headerlink" title="2.3.1 核心思想"></a>2.3.1 核心思想</h5><p>分代是一种典型的以空间换时间的技术</p><p>这种思想简单点说就是：对象存在时间越长，越可能不是垃圾，应该越少去收集</p><p>分代是解决内存遍历需要太久时间而诞生的解决方案</p><h5 id="2-3-2-分代回收的好处"><a href="#2-3-2-分代回收的好处" class="headerlink" title="2.3.2 分代回收的好处"></a>2.3.2 分代回收的好处</h5><p>分代回收可以减少标记-清除机制所带来的额外操作</p><p>分代就是将回收对象分成数个代（青年代，中年代，老年代），每个代都是一个链表（集合）。当青年代满时，将触发清理所有三代，执行标记清除动作。之后，当中年代满时，将会触发清理中年代，老年代；最后，老年代触发后只会清理自己</p><p>老年代的存活时间是最长的</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 垃圾回收机制 </tag>
            
            <tag> 引用计数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常记Fifty</title>
      <link href="/myhexo/2019/02/01/date1215s/"/>
      <url>/myhexo/2019/02/01/date1215s/</url>
      
        <content type="html"><![CDATA[<h3 id="1-linux查看端口命令"><a href="#1-linux查看端口命令" class="headerlink" title="1 linux查看端口命令"></a>1 linux查看端口命令</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp   <span class="comment"># 查看当前所有tcp端口</span></span><br><span class="line"></span><br><span class="line">netstat -ntulp |grep <span class="number">80</span>   <span class="comment"># 查看所有80端口使用情况</span></span><br><span class="line"></span><br><span class="line">netstat -an | grep <span class="number">3306</span>   <span class="comment"># 查看所有3306端口使用情况</span></span><br><span class="line"></span><br><span class="line">kill <span class="number">-9</span> <span class="number">3306</span><span class="comment"># 杀死使用3306端口的进程</span></span><br></pre></td></tr></table></figure><h3 id="2-ModelViewSet-路由"><a href="#2-ModelViewSet-路由" class="headerlink" title="2 ModelViewSet 路由"></a>2 ModelViewSet 路由</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;user&#x27;</span>, views.UserViewSet)</span><br><span class="line"></span><br><span class="line">urlpatterns += router.urls</span><br></pre></td></tr></table></figure><h3 id="3-Vue模块安装错误"><a href="#3-Vue模块安装错误" class="headerlink" title="3 Vue模块安装错误"></a>3 Vue模块安装错误</h3><h4 id="3-1-出现问题"><a href="#3-1-出现问题" class="headerlink" title="3.1 出现问题"></a>3.1 出现问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">94% asset optimization</span><br><span class="line">ERROR  Failed to compile with 2 errors                                                                         19:47:42</span><br><span class="line"></span><br><span class="line">These dependencies were not found:</span><br><span class="line"></span><br><span class="line">* babel-runtime&#x2F;core-js&#x2F;json&#x2F;stringify in .&#x2F;src&#x2F;http&#x2F;index.js</span><br><span class="line">* babel-runtime&#x2F;core-js&#x2F;promise in .&#x2F;src&#x2F;http&#x2F;index.js</span><br><span class="line"></span><br><span class="line">To install them, you can run: npm install --save babel-runtime&#x2F;core-js&#x2F;json&#x2F;stringify babel-runtime&#x2F;core-js&#x2F;promise</span><br></pre></td></tr></table></figure><h4 id="3-2-解决方案"><a href="#3-2-解决方案" class="headerlink" title="3.2 解决方案"></a>3.2 解决方案</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 提示</span><br><span class="line">&#x2F;&#x2F; 分别安装几个包，就可以解决了！</span><br><span class="line">&gt;cnpm install --save babel-runtime</span><br><span class="line">&gt;cnpm install --save core-js</span><br><span class="line">&gt;cnpm install --save json</span><br><span class="line">&gt;cnpm install --save stringify</span><br></pre></td></tr></table></figure><h3 id="4-Serializer修改数据"><a href="#4-Serializer修改数据" class="headerlink" title="4 Serializer修改数据"></a>4 Serializer修改数据</h3><h4 id="4-1-models-py"><a href="#4-1-models-py" class="headerlink" title="4.1 models.py"></a>4.1 models.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Books</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    publish = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    read_num = models.IntegerField()  <span class="comment"># 阅读量</span></span><br><span class="line">    comment_num = models.IntegerField()  <span class="comment"># 评论量</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;tb_books&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure><h4 id="4-2-serializer-py"><a href="#4-2-serializer-py" class="headerlink" title="4.2 serializer.py"></a>4.2 serializer.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BooksModelSer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = Books</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-views-py"><a href="#4-3-views-py" class="headerlink" title="4.3 views.py"></a>4.3 views.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BooksView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span>(<span class="params">self,request</span>):</span></span><br><span class="line">        print(request.data)</span><br><span class="line">        <span class="built_in">id</span> = request.data.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        books_obj = Books.objects.get(<span class="built_in">id</span>=<span class="built_in">id</span>)</span><br><span class="line">        books_ser = BooksModelSer(data=request.data,instance=books_obj)</span><br><span class="line">        books_ser.is_valid()</span><br><span class="line">        books_ser.save()</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;ok&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-4-urls-py"><a href="#4-4-urls-py" class="headerlink" title="4.4 urls.py"></a>4.4 urls.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;books/&#x27;</span>,BooksView.as_view())</span><br></pre></td></tr></table></figure><h3 id="5-element-ui-安装命令"><a href="#5-element-ui-安装命令" class="headerlink" title="5 element-ui 安装命令"></a>5 element-ui 安装命令</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i element-ui -S</span><br></pre></td></tr></table></figure><h3 id="6-json获取request的数据"><a href="#6-json获取request的数据" class="headerlink" title="6 json获取request的数据"></a>6 json获取request的数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">body_json = request.body.decode()</span><br><span class="line">body_dict = json.loads(body_json)</span><br></pre></td></tr></table></figure><h3 id="7-跨域后端"><a href="#7-跨域后端" class="headerlink" title="7 跨域后端"></a>7 跨域后端</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line"><span class="string">&#x27;corsheaders&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">)</span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="8-跨域前端"><a href="#8-跨域前端" class="headerlink" title="8 跨域前端"></a>8 跨域前端</h3><h4 id="8-1-http-js"><a href="#8-1-http-js" class="headerlink" title="8.1 http.js"></a>8.1 http.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一步：设置axios</span></span><br><span class="line">axios.defaults.baseURL = <span class="string">&quot;http://192.168.56.100:1594/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局设置网络超时</span></span><br><span class="line">axios.defaults.timeout = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置请求头信息</span></span><br><span class="line">axios.defaults.headers.post[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/json&#x27;</span>;</span><br><span class="line">axios.defaults.headers.put[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二：设置拦截器</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求拦截器(当前端发送请求给后端前进行拦截)</span></span><br><span class="line"><span class="comment"> * 例1：请求拦截器获取token设置到axios请求头中，所有请求接口都具有这个功能</span></span><br><span class="line"><span class="comment"> * 例2：到用户访问某一个页面，但是用户没有登录，前端页面自动跳转 /login/ 页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">axios.interceptors.request.use(</span><br><span class="line">    config =&gt; &#123;</span><br><span class="line">        <span class="comment">// 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了</span></span><br><span class="line">        <span class="keyword">const</span> token = <span class="built_in">localStorage</span>.getItem(<span class="string">&quot;token&quot;</span>)</span><br><span class="line">            <span class="comment">// console.log(token)</span></span><br><span class="line">        <span class="keyword">if</span> (token) &#123;</span><br><span class="line">            config.headers.Authorization = <span class="string">&#x27;JWT &#x27;</span> + token</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;,</span><br><span class="line">    error =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.error(error);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">axios.interceptors.response.use(</span><br><span class="line">    <span class="comment">// 请求成功</span></span><br><span class="line">    res =&gt; res.status === <span class="number">200</span> ? <span class="built_in">Promise</span>.resolve(res) : <span class="built_in">Promise</span>.reject(res),</span><br><span class="line">    <span class="comment">// 请求失败</span></span><br><span class="line">    error =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.response) &#123;</span><br><span class="line">            <span class="comment">// 判断一下返回结果的status == 401？  ==401跳转登录页面。  ！=401passs</span></span><br><span class="line">            <span class="comment">// console.log(error.response)</span></span><br><span class="line">            <span class="keyword">if</span> (error.response.status === <span class="number">401</span>) &#123;</span><br><span class="line">                <span class="comment">// 跳转不可以使用this.$router.push方法、</span></span><br><span class="line">                <span class="comment">// this.$router.push(&#123;path:&#x27;/login&#x27;&#125;)</span></span><br><span class="line">                <span class="built_in">window</span>.location.href = <span class="string">&quot;http://127.0.0.1:8888/&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// errorHandle(response.status, response.data.message);</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error.response);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 请求已发出，但是不在2xx的范围</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 处理断网的情况</span></span><br><span class="line">            <span class="comment">// eg:请求超时或断网时，更新state的network状态</span></span><br><span class="line">            <span class="comment">// network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏</span></span><br><span class="line">            <span class="comment">// 关于断网组件中的刷新重新获取数据，会在断网组件中说明</span></span><br><span class="line">            <span class="comment">// store.commit(&#x27;changeNetwork&#x27;, false);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error.response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三：封装axios请求</span></span><br><span class="line"><span class="comment">// 3.1 封装get请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">axios_get</span>(<span class="params">url, params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">        (resolve, reject) =&gt; &#123;</span><br><span class="line">            axios.get(url, &#123;<span class="attr">params</span>:params&#125;)</span><br><span class="line">                .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// console.log(&quot;封装信息的的res&quot;, res)</span></span><br><span class="line">                    resolve(res.data)</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    reject(err.data)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.2 封装post请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">axios_post</span>(<span class="params">url, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">        (resolve, reject) =&gt; &#123;</span><br><span class="line">            <span class="comment">// console.log(data)</span></span><br><span class="line">            axios.post(url, <span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">                .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// console.log(&quot;封装信息的的res&quot;, res)</span></span><br><span class="line">                    resolve(res.data)</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    reject(err.data)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.3 封装put请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">axios_put</span>(<span class="params">url, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">        (resolve, reject) =&gt; &#123;</span><br><span class="line">            <span class="comment">// console.log(data)</span></span><br><span class="line">            axios.put(url, <span class="built_in">JSON</span>.stringify(data))</span><br><span class="line">                .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// console.log(&quot;封装信息的的res&quot;, res)</span></span><br><span class="line">                    resolve(res.data)</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    reject(err.data)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.4 封装delete请求</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">axios_delete</span>(<span class="params">url, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">        (resolve, reject) =&gt; &#123;</span><br><span class="line">            <span class="comment">// console.log(data)</span></span><br><span class="line">            axios.delete(url, &#123; <span class="attr">params</span>: data &#125;)</span><br><span class="line">                .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// console.log(&quot;封装信息的的res&quot;, res)</span></span><br><span class="line">                    resolve(res.data)</span><br><span class="line">                &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    reject(err.data)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-2-apis-js"><a href="#8-2-apis-js" class="headerlink" title="8.2 apis.js"></a>8.2 apis.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将我们http.js中封装好的  get,post.put,delete  导过来</span></span><br><span class="line"><span class="keyword">import</span> &#123; axios_get, axios_post, axios_delete, axios_put &#125; <span class="keyword">from</span> <span class="string">&#x27;./index.js&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 书籍管理接口</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getBookList = <span class="function">(<span class="params">params, headers</span>) =&gt;</span> axios_get(<span class="string">&quot;/books/book/&quot;</span>, params, headers)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> addBook = <span class="function">(<span class="params">params, headers</span>) =&gt;</span> axios_post(<span class="string">&quot;/books/book/&quot;</span>, params, headers)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> updateBook = <span class="function">(<span class="params">params, headers</span>) =&gt;</span> axios_put(<span class="string">&quot;/books/book/&quot;</span>, params, headers)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> delBook = <span class="function">(<span class="params">params, headers</span>) =&gt;</span> axios_delete(<span class="string">&quot;/books/book/&quot;</span>, params, headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//按照格式确定方法名</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> user_login = <span class="function"><span class="params">p</span> =&gt;</span> axios_post(<span class="string">&quot;/user/login/&quot;</span>, p)  <span class="comment">//</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> get_dept_list = <span class="function"><span class="params">p</span> =&gt;</span> axios_get(<span class="string">&quot;/account/deptManage/&quot;</span>, p)  <span class="comment">//</span></span><br></pre></td></tr></table></figure><h3 id="9-继承AbstractUser"><a href="#9-继承AbstractUser" class="headerlink" title="9 继承AbstractUser"></a>9 继承AbstractUser</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AUTH_USER_MODEL = <span class="string">&#x27;user.User&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">AbstractUser</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="10-settings-配置"><a href="#10-settings-配置" class="headerlink" title="10 settings 配置"></a>10 settings 配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Django settings for opwf project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Generated by &#x27;django-admin startproject&#x27; using Django 2.0.13.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on this file, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/2.0/topics/settings/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For the full list of settings and their values, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/2.0/ref/settings/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build paths inside the project like this: os.path.join(BASE_DIR, ...)</span></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">&#x27;apps&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quick-start development settings - unsuitable for production</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line">SECRET_KEY = <span class="string">&#x27;uorj1ni^mnut@wo@c%)iv)%5=8dxlml4-j0!f3b%4#f*8a5)3t&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span></span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user.apps.UserConfig&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;workflow.apps.WorkflowConfig&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;workerorder.apps.WorkerorderConfig&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;jwt&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;rest_framework_jwt&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;rest_framework.authentication&#x27;</span></span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = <span class="string">&#x27;opwf.urls&#x27;</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [],</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = <span class="string">&#x27;opwf.wsgi.application&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;opwf_db&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Password validation</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators</span></span><br><span class="line"></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># 文档报错： AttributeError: ‘AutoSchema’ object has no attribute ‘get_link’</span></span><br><span class="line">    <span class="comment"># 用下面的设置可以解决</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_SCHEMA_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.schemas.AutoSchema&#x27;</span>,</span><br><span class="line">    <span class="comment"># 默认设置是:</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;rest_framework.schemas.openapi.AutoSchema&#x27;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 异常处理器</span></span><br><span class="line">    <span class="comment"># &#x27;EXCEPTION_HANDLER&#x27;: &#x27;user.utils.exception_handler&#x27;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Base API policies    　　默认渲染器类</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.BrowsableAPIRenderer&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 默认解析器类</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PARSER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.JSONParser&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.FormParser&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.MultiPartParser&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 1.认证器（全局）</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework_jwt.authentication.JSONWebTokenAuthentication&#x27;</span>,  <span class="comment"># 在 DRF中配置JWT认证</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.authentication.SessionAuthentication&#x27;,  # 使用session时的认证器</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.authentication.BasicAuthentication&#x27;  # 提交表单时的认证器</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.权限配置（全局）： 顺序靠上的严格</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAdminUser&#x27;,  # 管理员可以访问</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAuthenticated&#x27;,  # 认证用户可以访问</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAuthenticatedOrReadOnly&#x27;,  # 认证用户可以访问, 否则只能读取</span></span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.AllowAny&#x27;</span>,  <span class="comment"># 所有用户都可以访问</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 3.限流（防爬虫）</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_THROTTLE_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.AnonRateThrottle&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.UserRateThrottle&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 3.1限流策略</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_THROTTLE_RATES&#x27;: &#123;</span></span><br><span class="line">    <span class="comment">#     &#x27;user&#x27;: &#x27;100/hour&#x27;,  # 认证用户每小时100次</span></span><br><span class="line">    <span class="comment">#     &#x27;anon&#x27;: &#x27;300/day&#x27;,  # 未认证用户每天能访问3次</span></span><br><span class="line">    <span class="comment"># &#125;,</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;DEFAULT_CONTENT_NEGOTIATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.negotiation.DefaultContentNegotiation&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DEFAULT_METADATA_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.metadata.SimpleMetadata&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DEFAULT_VERSIONING_CLASS&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.分页（全局）：全局分页器, 例如 省市区的数据自定义分页器, 不需要分页</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_PAGINATION_CLASS&#x27;: &#x27;rest_framework.pagination.PageNumberPagination&#x27;,</span></span><br><span class="line">    <span class="comment"># 每页返回数量</span></span><br><span class="line">    <span class="comment"># &#x27;PAGE_SIZE&#x27;: 1</span></span><br><span class="line">    <span class="comment"># 5.过滤器后端</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;django_filters.rest_framework.backends.DjangoFilterBackend&#x27;, 包路径有变化</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5.1过滤排序（全局）：Filtering 过滤排序</span></span><br><span class="line">    <span class="string">&#x27;SEARCH_PARAM&#x27;</span>: <span class="string">&#x27;search&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ORDERING_PARAM&#x27;</span>: <span class="string">&#x27;ordering&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;NUM_PROXIES&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6.版本控制：Versioning  接口版本控制</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_VERSION&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&#x27;ALLOWED_VERSIONS&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&#x27;VERSION_PARAM&#x27;</span>: <span class="string">&#x27;version&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Authentication  认证</span></span><br><span class="line">    <span class="comment"># 未认证用户使用的用户类型</span></span><br><span class="line">    <span class="string">&#x27;UNAUTHENTICATED_USER&#x27;</span>: <span class="string">&#x27;django.contrib.auth.models.AnonymousUser&#x27;</span>,</span><br><span class="line">    <span class="comment"># 未认证用户使用的Token值</span></span><br><span class="line">    <span class="string">&#x27;UNAUTHENTICATED_TOKEN&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># View configuration</span></span><br><span class="line">    <span class="string">&#x27;VIEW_NAME_FUNCTION&#x27;</span>: <span class="string">&#x27;rest_framework.views.get_view_name&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;VIEW_DESCRIPTION_FUNCTION&#x27;</span>: <span class="string">&#x27;rest_framework.views.get_view_description&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;NON_FIELD_ERRORS_KEY&#x27;</span>: <span class="string">&#x27;non_field_errors&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Testing</span></span><br><span class="line">    <span class="string">&#x27;TEST_REQUEST_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.MultiPartRenderer&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;TEST_REQUEST_DEFAULT_FORMAT&#x27;</span>: <span class="string">&#x27;multipart&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Hyperlink settings</span></span><br><span class="line">    <span class="string">&#x27;URL_FORMAT_OVERRIDE&#x27;</span>: <span class="string">&#x27;format&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;FORMAT_SUFFIX_KWARG&#x27;</span>: <span class="string">&#x27;format&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;URL_FIELD_NAME&#x27;</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Encoding</span></span><br><span class="line">    <span class="string">&#x27;UNICODE_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;COMPACT_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;STRICT_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;COERCE_DECIMAL_TO_STRING&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;UPLOADED_FILES_USE_URL&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Browseable API</span></span><br><span class="line">    <span class="string">&#x27;HTML_SELECT_CUTOFF&#x27;</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="string">&#x27;HTML_SELECT_CUTOFF_TEXT&#x27;</span>: <span class="string">&quot;More than &#123;count&#125; items...&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Schemas</span></span><br><span class="line">    <span class="string">&#x27;SCHEMA_COERCE_PATH_PK&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;SCHEMA_COERCE_METHOD_NAMES&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;retrieve&#x27;</span>: <span class="string">&#x27;read&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;destroy&#x27;</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x27;Access-Control-Allow-Origin&#x27;:&#x27;http://localhost:8080&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;Access-Control-Allow-Credentials&#x27;: True</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">AUTH_USER_MODEL = <span class="string">&#x27;user.User&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jwt载荷中的有效期设置</span></span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="comment"># 1.token前缀：headers中 Authorization 值的前缀</span></span><br><span class="line">    <span class="string">&#x27;JWT_AUTH_HEADER_PREFIX&#x27;</span>: <span class="string">&#x27;JWT&#x27;</span>,</span><br><span class="line">    <span class="comment"># 2.token有效期：一天有效</span></span><br><span class="line">    <span class="string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(days=<span class="number">1</span>),</span><br><span class="line">    <span class="comment"># 3.刷新token：允许使用旧的token换新token</span></span><br><span class="line">    <span class="string">&#x27;JWT_ALLOW_REFRESH&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="comment"># 4.token有效期：token在24小时内过期, 可续期token</span></span><br><span class="line">    <span class="string">&#x27;JWT_REFRESH_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(hours=<span class="number">24</span>),</span><br><span class="line">    <span class="comment"># 5.自定义JWT载荷信息：自定义返回格式，需要手工创建</span></span><br><span class="line">    <span class="string">&#x27;JWT_RESPONSE_PAYLOAD_HANDLER&#x27;</span>: <span class="string">&#x27;user.utils.jwt_response_payload_handler&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-几个容易混淆的导包"><a href="#11-几个容易混淆的导包" class="headerlink" title="11 几个容易混淆的导包"></a>11 几个容易混淆的导包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ModelViewSet</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"></span><br><span class="line"><span class="comment"># APIView</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"><span class="comment"># Serializer</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"></span><br><span class="line"><span class="comment"># DefaultRouter</span></span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"></span><br><span class="line"><span class="comment"># AbstractUser</span></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br></pre></td></tr></table></figure><h3 id="12-ModelViewSet-路由三部曲"><a href="#12-ModelViewSet-路由三部曲" class="headerlink" title="12 ModelViewSet 路由三部曲"></a>12 ModelViewSet 路由三部曲</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;user&#x27;</span>, views.UserViewSet)</span><br><span class="line"></span><br><span class="line">urlpatterns += router.urls</span><br></pre></td></tr></table></figure><h3 id="13-路由转换器"><a href="#13-路由转换器" class="headerlink" title="13 路由转换器"></a>13 路由转换器</h3><ul><li>我们在定义一个标准路由的时候，可以给路由定义一些可变的参数，这些参数会传递给我们的视图函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> userapp.views <span class="keyword">import</span> findgoods,findlove</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;goods/&lt;int:id&gt;/&#x27;</span>, findgoods),</span><br><span class="line">    path(<span class="string">&#x27;goods/&lt;str:name&gt;/&#x27;</span>, findlove)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">路由转换器：</span><br><span class="line">我们可以在参数部分写一个转换器，参数值在传递到视图函数之前，对参数进行格式转换，默认我们的参数值都是字符串<span class="built_in">str</span>格式，如果我们想把参数值转成整型，我们可以使用<span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line">goods_list=[<span class="string">&#x27;苹果手机&#x27;</span>,<span class="string">&#x27;联想电脑&#x27;</span>,<span class="string">&#x27;大西瓜&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findgoods</span>(<span class="params">request, <span class="built_in">id</span></span>):</span></span><br><span class="line">    print(<span class="built_in">id</span>, <span class="built_in">type</span>(<span class="built_in">id</span>))</span><br><span class="line">    name = goods_list[<span class="built_in">id</span>]</span><br><span class="line">    <span class="keyword">return</span>  HttpResponse(<span class="string">&quot;查找商品：&quot;</span>+name)</span><br></pre></td></tr></table></figure><h3 id="14-状态码大全"><a href="#14-状态码大全" class="headerlink" title="14 状态码大全"></a>14 状态码大全</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">* http状态返回代码 <span class="number">1</span>xx（临时响应）</span><br><span class="line">    表示临时响应并需要请求者继续执行操作的状态代码。</span><br><span class="line">代码说明：</span><br><span class="line"><span class="number">100</span>   （继续）请求者应当继续提出请求。服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</span><br><span class="line"><span class="number">101</span>   （切换协议）请求者已要求服务器切换协议，服务器已确认并准备切换。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** http状态返回代码</span><br><span class="line">    <span class="number">2</span>xx （成功）表示成功处理了请求的状态代码。</span><br><span class="line">代码说明：</span><br><span class="line"><span class="number">200</span>   （成功）  服务器已成功处理了请求。通常，这表示服务器提供了请求的网页。</span><br><span class="line"><span class="number">201</span>   （已创建）  请求成功并且服务器创建了新的资源。</span><br><span class="line"><span class="number">202</span>   （已接受）  服务器已接受请求，但尚未处理。</span><br><span class="line"><span class="number">203</span>   （非授权信息）  服务器已成功处理了请求，但返回的信息可能来自另一来源。</span><br><span class="line"><span class="number">204</span>   （无内容）  服务器成功处理了请求，但没有返回任何内容。</span><br><span class="line"><span class="number">205</span>   （重置内容）服务器成功处理了请求，但没有返回任何内容。</span><br><span class="line"><span class="number">206</span>   （部分内容）  服务器成功处理了部分 GET 请求。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*** http状态返回代码 <span class="number">3</span>xx （重定向）</span><br><span class="line">    表示要完成请求，需要进一步操作。通常，这些状态代码用来重定向。</span><br><span class="line">代码说明：</span><br><span class="line"><span class="number">300</span>   （多种选择）  针对请求，服务器可执行多种操作。服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</span><br><span class="line"><span class="number">301</span>   （永久移动）  请求的网页已永久移动到新位置。服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</span><br><span class="line"><span class="number">302</span>   （临时移动）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span><br><span class="line"><span class="number">303</span>   （查看其他位置）请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">304</span>   （未修改）自从上次请求后，请求的网页未修改过。服务器返回此响应时，不会返回网页内容。</span><br><span class="line"><span class="number">305</span>   （使用代理）请求者只能使用代理访问请求的网页。如果服务器返回此响应，还表示请求者应使用代理。</span><br><span class="line"><span class="number">307</span>   （临时重定向）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**** http状态返回代码 <span class="number">4</span>xx（请求错误）</span><br><span class="line">    这些状态代码表示请求可能出错，妨碍了服务器的处理。</span><br><span class="line">代码说明：</span><br><span class="line"><span class="number">400</span>   （错误请求）服务器不理解请求的语法。</span><br><span class="line"><span class="number">401</span>   （未授权）请求要求身份验证。对于需要登录的网页，服务器可能返回此响应。</span><br><span class="line"><span class="number">403</span>   （禁止）服务器拒绝请求。</span><br><span class="line"><span class="number">404</span>   （未找到）服务器找不到请求的网页。</span><br><span class="line"><span class="number">405</span>   （方法禁用）禁用请求中指定的方法。</span><br><span class="line"><span class="number">406</span>   （不接受）无法使用请求的内容特性响应请求的网页。</span><br><span class="line"><span class="number">407</span>   （需要代理授权）此状态代码与 <span class="number">401</span>（未授权）类似，但指定请求者应当授权使用代理。</span><br><span class="line"><span class="number">408</span>   （请求超时）  服务器等候请求时发生超时。</span><br><span class="line"><span class="number">409</span>   （冲突）  服务器在完成请求时发生冲突。服务器必须在响应中包含有关冲突的信息。</span><br><span class="line"><span class="number">410</span>   （已删除）  如果请求的资源已永久删除，服务器就会返回此响应。</span><br><span class="line"><span class="number">411</span>   （需要有效长度）服务器不接受不含有效内容长度标头字段的请求。</span><br><span class="line"><span class="number">412</span>   （未满足前提条件）服务器未满足请求者在请求中设置的其中一个前提条件。</span><br><span class="line"><span class="number">413</span>   （请求实体过大）服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</span><br><span class="line"><span class="number">414</span>   （请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法处理。</span><br><span class="line"><span class="number">415</span>   （不支持的媒体类型）请求的格式不受请求页面的支持。</span><br><span class="line"><span class="number">416</span>   （请求范围不符合要求）如果页面无法提供请求的范围，则服务器会返回此状态代码。</span><br><span class="line"><span class="number">417</span>   （未满足期望值）服务器未满足<span class="string">&quot;期望&quot;</span>请求标头字段的要求。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">***** http状态返回代码 <span class="number">5</span>xx（服务器错误）</span><br><span class="line">    这些状态代码表示服务器在尝试处理请求时发生内部错误。这些错误可能是服务器本身的错误，而不是请求出错。</span><br><span class="line">代码说明：</span><br><span class="line"><span class="number">500</span>   （服务器内部错误）  服务器遇到错误，无法完成请求。</span><br><span class="line">从上往下读，最上面都是抛出异常代码，从上往下，慢慢找出错误产生的原生地方，一般都是最下面是错误出现的地方</span><br><span class="line"></span><br><span class="line"><span class="number">501</span>   （尚未实施）服务器不具备完成请求的功能。例如，服务器无法识别请求方法时可能会返回此代码。</span><br><span class="line"><span class="number">502</span>   （错误网关）服务器作为网关或代理，从上游服务器收到无效响应。</span><br><span class="line"><span class="number">503</span>   （服务不可用）服务器目前无法使用（由于超载或停机维护）。通常，这只是暂时状态。</span><br><span class="line"><span class="number">504</span>   （网关超时）  服务器作为网关或代理，但是没有及时从上游服务器收到请求。</span><br><span class="line"><span class="number">505</span>   （HTTP 版本不受支持）服务器不支持请求中所用的 HTTP 协议版本。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一些常见的http状态返回代码为：</span><br><span class="line"><span class="number">200</span> - 服务器成功返回网页</span><br><span class="line"><span class="number">404</span> - 请求的网页不存在</span><br><span class="line"><span class="number">503</span> - 服务不可用</span><br></pre></td></tr></table></figure><h3 id="15-请求报文"><a href="#15-请求报文" class="headerlink" title="15 请求报文"></a>15 请求报文</h3><p><img src=".%5Cimgs%5Cimage-20201123075848880.png" alt="image-20201123075848880"></p><h3 id="16-响应报文"><a href="#16-响应报文" class="headerlink" title="16 响应报文"></a>16 响应报文</h3><p><img src=".%5Cimgs%5Cimage-20201123080742883.png" alt="image-20201123080742883"></p><h3 id="17-json数据结构与使用方法"><a href="#17-json数据结构与使用方法" class="headerlink" title="17 json数据结构与使用方法"></a>17 json数据结构与使用方法</h3><h4 id="17-1-json的数据结构"><a href="#17-1-json的数据结构" class="headerlink" title="17.1  json的数据结构"></a>17.1  json的数据结构</h4><p>json全称: “JavaScript Object Notation”,(JavaScript对象表示法),一种基于文本,独立于语言的轻量级数据交换格式。</p><h4 id="17-2-JSON规定的格式"><a href="#17-2-JSON规定的格式" class="headerlink" title="17.2 JSON规定的格式"></a>17.2 JSON规定的格式</h4><p>​    1)数据在键值对中</p><p>​    2)数据由逗号分隔              </p><p>​    3)花括号保存对象               </p><p>​    4)方括号保存数组</p><ul><li>在我们python中，就认为成字典+列表组成就是我们的JSON</li></ul><h4 id="17-3-json数据的页面响应"><a href="#17-3-json数据的页面响应" class="headerlink" title="17.3 json数据的页面响应"></a>17.3 json数据的页面响应</h4><ul><li>JsonResponse响应json数据</li></ul><p>要想返回json数据，就要使用专门的Response对象JSONResponse</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render,HttpResponse</span><br><span class="line"></span><br><span class="line">方法<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http.response <span class="keyword">import</span> JsonResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student</span>(<span class="params">requset</span>):</span></span><br><span class="line">    stu = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&quot;maple&quot;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;爱好&#x27;</span>: <span class="string">&#x27;学习&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(stu,json_dumps_params=&#123;<span class="string">&#x27;ensure_ascii&#x27;</span>:<span class="literal">False</span>&#125;)</span><br><span class="line">    <span class="comment"># 只能添加字典</span></span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">student</span>(<span class="params">request</span>):</span></span><br><span class="line">    stu = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&quot;maple&quot;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;爱好&#x27;</span>: <span class="string">&#x27;学习&#x27;</span>&#125;</span><br><span class="line">    s = json.dumps(stu, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(s)</span><br></pre></td></tr></table></figure><ul><li>json是一个模块，可以把字典对象变成json字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 我们进行网络传输，必须是字符串或者是二进制数据</span></span><br><span class="line"><span class="comment"># 使用python内置的json模块来完成</span></span><br><span class="line"></span><br><span class="line">stu = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&quot;maple&quot;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;爱好&#x27;</span>: <span class="string">&#x27;学习&#x27;</span>&#125;</span><br><span class="line">print(<span class="built_in">type</span>(stu))</span><br><span class="line">x = json.dumps(stu)</span><br><span class="line">print(x)</span><br><span class="line"><span class="comment"># \u 是unicode码值</span></span><br><span class="line">y = json.dumps(stu,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line">c = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Marry&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">12</span>&#125;</span><br><span class="line"></span><br><span class="line">e = json.dumps(c)</span><br><span class="line">print(e, <span class="built_in">type</span>(e))<span class="comment"># &#123;&quot;name&quot;: &quot;Marry&quot;, &quot;age&quot;: 12&#125; &lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line">f = json.loads(e)</span><br><span class="line">print(f, <span class="built_in">type</span>(f))<span class="comment"># &#123;&#x27;name&#x27;: &#x27;Marry&#x27;, &#x27;age&#x27;: 12&#125; &lt;class &#x27;dict&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="17-4-前端"><a href="#17-4-前端" class="headerlink" title="17.4 前端"></a>17.4 前端</h4><ul><li>将json字符串转换为json对象的方法。在数据传输过程中，json是以文本，即字符串的形式传递的，而JS操作的是JSON对象，所以，JSON对象和JSON字符串之间的相互转换是关键</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">JSON字符串:</span><br><span class="line">var str1 = <span class="string">&#x27;&#123; &quot;name&quot;: &quot;cxh&quot;, &quot;sex&quot;: &quot;man&quot; &#125;&#x27;</span>; </span><br><span class="line">JSON对象:</span><br><span class="line">var str2 = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cxh&quot;</span>, <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;man&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">A. JSON字符串转换为JSON对象</span><br><span class="line"></span><br><span class="line">要使用上面的str1，必须使用下面的方法先转化为JSON对象：</span><br><span class="line"></span><br><span class="line">//由JSON字符串转换为JSON对象</span><br><span class="line"></span><br><span class="line">var obj = <span class="built_in">eval</span>(<span class="string">&#x27;(&#x27;</span> + <span class="built_in">str</span> + <span class="string">&#x27;)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">var obj = <span class="built_in">str</span>.parseJSON(); //由JSON字符串转换为JSON对象</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">var obj = JSON.parse(<span class="built_in">str</span>); //由JSON字符串转换为JSON对象</span><br><span class="line"></span><br><span class="line">然后，就可以这样读取：</span><br><span class="line"></span><br><span class="line">Alert(obj.name);</span><br><span class="line"></span><br><span class="line">Alert(obj.sex);</span><br><span class="line"></span><br><span class="line">特别注意：如果obj本来就是一个JSON对象，那么使用<span class="built_in">eval</span>（）函数转换后（哪怕是多次转换）还是JSON对象，但是使用parseJSON（）函数处理后会有问题（抛出语法异常）。</span><br><span class="line"></span><br><span class="line">B. 可以使用toJSONString()或者全局方法JSON.stringify()将JSON对象转化为JSON字符串。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">var last=obj.toJSONString(); //将JSON对象转化为JSON字符</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">var last=JSON.stringify(obj); //将JSON对象转化为JSON字符</span><br><span class="line">alert(last)</span><br></pre></td></tr></table></figure><h3 id="18-serializer重写"><a href="#18-serializer重写" class="headerlink" title="18 serializer重写"></a>18 serializer重写</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserSerializer</span>(<span class="params">serializers.Serializer</span>):</span></span><br><span class="line">    <span class="comment"># 用serializer重写，不能用ModelViewSet来添加，写上id会报错username不能设为key，因为User表继承的是AbstractUser，其中的username字段必须有unique=True属性设置唯一约束</span></span><br><span class="line">    username = serializers.CharField()</span><br><span class="line">    password = serializers.CharField()</span><br><span class="line">    mobile = serializers.CharField()</span><br><span class="line">    email = serializers.EmailField()</span><br><span class="line">    token = serializers.CharField(read_only=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        username = data.get(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        password = data.get(<span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        mobile = data.get(<span class="string">&#x27;mobile&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        email = data.get(<span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        user = User(username=username, email=email, mobile=mobile)</span><br><span class="line">        user.set_password(password)</span><br><span class="line">        user.save()</span><br><span class="line">        <span class="comment"># 补充生成记录登录状态的token</span></span><br><span class="line">        jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER</span><br><span class="line">        jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER</span><br><span class="line">        payload = jwt_payload_handler(user)</span><br><span class="line">        token = jwt_encode_handler(payload)</span><br><span class="line">        user.token = token</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, instance, validated_data</span>):</span></span><br><span class="line">        <span class="comment"># instance 是当前对象obj</span></span><br><span class="line">        <span class="comment"># validated_data 是获取的变量</span></span><br><span class="line">instance.mobile = validated_data.get(<span class="string">&#x27;mobile&#x27;</span>)</span><br><span class="line">instance.email = validated_data.get(<span class="string">&#x27;email&#x27;</span>)</span><br><span class="line">instance.save()</span><br><span class="line"><span class="keyword">return</span> instance</span><br></pre></td></tr></table></figure><h3 id="19-要注意ModelViewSet的接口路由"><a href="#19-要注意ModelViewSet的接口路由" class="headerlink" title="19 要注意ModelViewSet的接口路由"></a>19 要注意ModelViewSet的接口路由</h3><ul><li>后端接口</li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 查询接口</span><br><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/</span></span><br><span class="line">http://192.168.56.100:1594/user/user/?username=&#x27;cat&#x27;</span><br><span class="line">* 添加接口</span><br><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/</span></span><br><span class="line">* 删除接口(指定用户id删除)</span><br><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/id/</span></span><br><span class="line">* 修改接口(指定用户id修改)</span><br><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/id/</span></span><br></pre></td></tr></table></figure><ul><li>前端访问路径配置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> get_userlist = <span class="function"><span class="params">P</span> =&gt;</span> axios_get(<span class="string">&#x27;/user/user/&#x27;</span>, P)     </span><br><span class="line"><span class="comment">// 查询所有：获取用户列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> search_for = <span class="function"><span class="params">P</span> =&gt;</span> axios_get(<span class="string">&#x27;user/user/?username=&#x27;</span> + P.username)   </span><br><span class="line"><span class="comment">// 查找指定信息：根据用户名查找指定用户信息并展示</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> add_user = <span class="function"><span class="params">P</span> =&gt;</span> axios_post(<span class="string">&#x27;/user/user/&#x27;</span>, P)     </span><br><span class="line"><span class="comment">// 添加用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> delete_user = <span class="function"><span class="params">P</span> =&gt;</span> axios_delete(<span class="string">&#x27;/user/user/&#x27;</span> + P + <span class="string">&#x27;/&#x27;</span>)           </span><br><span class="line"><span class="comment">// 删除指定信息：根据获取到的用户id删除用户信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> update_user = <span class="function"><span class="params">P</span> =&gt;</span> axios_put(<span class="string">&#x27;/user/user/&#x27;</span>+ P.id +<span class="string">&#x27;/&#x27;</span>, P)    </span><br><span class="line"><span class="comment">// 修改指定信息：根绝用户id和提交来的数据修改用户信息</span></span><br></pre></td></tr></table></figure><h3 id="20-使用-ant-design-vue"><a href="#20-使用-ant-design-vue" class="headerlink" title="20 使用 ant-design-vue"></a>20 使用 ant-design-vue</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用ant-design-vue</span></span><br><span class="line"><span class="keyword">import</span> Antd <span class="keyword">from</span> <span class="string">&#x27;ant-design-vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;ant-design-vue/dist/antd.css&#x27;</span>;</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(Antd);</span><br></pre></td></tr></table></figure><h3 id="21-ModelViewSet修改问题"><a href="#21-ModelViewSet修改问题" class="headerlink" title="21 ModelViewSet修改问题"></a>21 ModelViewSet修改问题</h3><ul><li>put请求默认是全部修改</li><li>patch请求可以实现局部修改（后端已经封装好了方法）</li></ul><h3 id="22-Vue嵌套路由"><a href="#22-Vue嵌套路由" class="headerlink" title="22 Vue嵌套路由"></a>22 Vue嵌套路由</h3><ul><li>index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;@/components/layout/Home&#x27;</span></span><br><span class="line"><span class="comment">// 用于导包路径的配置</span></span><br><span class="line"><span class="keyword">const</span> page = <span class="function"><span class="params">name</span> =&gt;</span> <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/&#x27;</span> + name)</span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">  routes: [</span><br><span class="line">    <span class="comment">// 用户管理模块</span></span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,<span class="attr">component</span>: Home,<span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">      children: [</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;usermanage&#x27;</span>, <span class="attr">component</span>: page(<span class="string">&#x27;user-manage/Index&#x27;</span>), <span class="attr">name</span>: <span class="string">&#x27;用户管理&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;flowconf&#x27;</span>, <span class="attr">component</span>: page(<span class="string">&#x27;workflow/WorkFlowConf&#x27;</span>), <span class="attr">name</span>: <span class="string">&#x27;模板管理&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;flowtype&#x27;</span>, <span class="attr">component</span>: page(<span class="string">&#x27;workflow/WorkFlowType&#x27;</span>), <span class="attr">name</span>: <span class="string">&#x27;模板类型管理&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;baidu&#x27;</span>, <span class="attr">component</span>: page(<span class="string">&#x27;BaiDu&#x27;</span>), <span class="attr">name</span>: <span class="string">&#x27;跳转百度&#x27;</span> &#125;,</span><br><span class="line">      </span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>Home页面中写入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;components-layout-demo-basic&quot;&gt;</span><br><span class="line">         &lt;a-layout&gt;</span><br><span class="line">              &lt;&#x2F;a-layout-header&gt;</span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                     &lt;!-- 这里的 router-view 是绑定的路由 --&gt;</span><br><span class="line">                     &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">                   &lt;&#x2F;div&gt;</span><br><span class="line">              &lt;&#x2F;a-layout-header&gt;</span><br><span class="line">          &lt;&#x2F;a-layout&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; 导入组件</span><br><span class="line">import LeftMenu from &#39;@&#x2F;components&#x2F;layout&#x2F;LeftMenu&#39;</span><br><span class="line">import Header from &#39;@&#x2F;components&#x2F;layout&#x2F;Header&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    &#x2F;&#x2F; 注册组件</span><br><span class="line">    components:&#123;</span><br><span class="line">        LeftMenu,</span><br><span class="line">        Header</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>绑定左侧菜单LeftMenu</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;a-menu</span><br><span class="line">      style&#x3D;&quot;width: 256px&quot;</span><br><span class="line">      :default-selected-keys&#x3D;&quot;[&#39;1&#39;]&quot;</span><br><span class="line">      :default-open-keys&#x3D;&quot;[&#39;sub1&#39;]&quot;</span><br><span class="line">      :mode&#x3D;&quot;mode&quot;</span><br><span class="line">      :theme&#x3D;&quot;theme&quot;</span><br><span class="line">      @click&#x3D;&quot;handleClick&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;!-- 必须定义click方法，handleClick是用来跳转路由的，内置毁掉参数e，包括传递上去的key路由地址 --&gt;    </span><br><span class="line">      &lt;a-menu-item key&#x3D;&quot;usermanage&quot;&gt;</span><br><span class="line">        &lt;!-- key是路由地址 --&gt;</span><br><span class="line">        用户管理模块</span><br><span class="line">      &lt;&#x2F;a-menu-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;a-menu-item key&#x3D;&quot;baidu&quot;&gt;</span><br><span class="line">        百度翻译</span><br><span class="line">      &lt;&#x2F;a-menu-item&gt;</span><br><span class="line">    &lt;&#x2F;a-menu&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">     handleClick(e) &#123;</span><br><span class="line">      this.current &#x3D; e.key;</span><br><span class="line">      this.$router.push(&#123;path:this.current&#125;);</span><br><span class="line">      &#x2F;&#x2F; click方法默认回调参数中的 key，所以 e.key就是传递来的路由</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="23-ant-design-vue-图标大小"><a href="#23-ant-design-vue-图标大小" class="headerlink" title="23 ant-design-vue 图标大小"></a>23 ant-design-vue 图标大小</h3><ul><li>font-size 可以调节图标大小</li></ul><h3 id="24-v-if-v-else控制input框disabled属性"><a href="#24-v-if-v-else控制input框disabled属性" class="headerlink" title="24 v-if v-else控制input框disabled属性"></a>24 v-if v-else控制input框disabled属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;a-modal</span><br><span class="line">        title&#x3D;&quot;Please write now.&quot;</span><br><span class="line">        :visible&#x3D;&quot;visible&quot;</span><br><span class="line">        @ok&#x3D;&quot;handleOk&quot;</span><br><span class="line">        @cancel&#x3D;&quot;handleCancel&quot;</span><br><span class="line">        &gt;</span><br><span class="line">        &lt;!-- @ok控制按钮ok --&gt;</span><br><span class="line">        &lt;!-- @cancel控制按钮cancel --&gt;</span><br><span class="line">            &lt;p v-if&#x3D;&quot;userList.id&quot;&gt;UserName：</span><br><span class="line">                &lt;a-input </span><br><span class="line">                style&#x3D;&quot;width:380px;float:right&quot; </span><br><span class="line">                placeholder&#x3D;&quot;username&quot; </span><br><span class="line">                v-model&#x3D;&quot;userList.username&quot;</span><br><span class="line">                disabled&#x3D;&quot;disabled&quot;</span><br><span class="line">                &gt;&lt;&#x2F;a-input&gt;    </span><br><span class="line">                &lt;!-- disabled可以用来控制input是否能输入文字 --&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">            &lt;p v-else&gt;UserName：</span><br><span class="line">                &lt;a-input </span><br><span class="line">                style&#x3D;&quot;width:380px;float:right&quot; </span><br><span class="line">                placeholder&#x3D;&quot;username&quot; </span><br><span class="line">                v-model&#x3D;&quot;userList.username&quot;</span><br><span class="line">                &gt;&lt;&#x2F;a-input&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">            &lt;br&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;div v-if&#x3D;&quot;userList.id&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;div v-else&gt;</span><br><span class="line">            &lt;p&gt;PassWord：</span><br><span class="line">                &lt;a-input</span><br><span class="line">                    v-decorator&#x3D;&quot;[</span><br><span class="line">                        &#39;password&#39;,</span><br><span class="line">                        &#123; rules: [&#123; required: true, message: &#39;Please input your Password!&#39; &#125;] &#125;,</span><br><span class="line">                    ]&quot;</span><br><span class="line">                    type&#x3D;&quot;password&quot;</span><br><span class="line">                    placeholder&#x3D;&quot;Password&quot;</span><br><span class="line">                    style&#x3D;&quot;width:380px;float:right&quot;</span><br><span class="line">                    v-model&#x3D;&quot;userList.password&quot;</span><br><span class="line">                    :disabled &#x3D; &#39;false&#39;</span><br><span class="line">                &gt;</span><br><span class="line">                &lt;&#x2F;a-input&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;a-modal&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    props:[&#39;visible&#39;, &#39;userList&#39;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">        handleOk(e) &#123;</span><br><span class="line">            this.$emit(&#39;add&#39;)</span><br><span class="line">            &#x2F;&#x2F; add方法的调用一定要在关闭弹窗上面，否则方法不执行完毕没有办法关闭弹窗        </span><br><span class="line">            this.$emit(&#39;update:visible&#39;, false)</span><br><span class="line">        &#125;,</span><br><span class="line">        handleCancel(e) &#123;</span><br><span class="line">            this.$emit(&#39;update:visible&#39;, false)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="25-a-table中的分页器-amp-按钮"><a href="#25-a-table中的分页器-amp-按钮" class="headerlink" title="25 a-table中的分页器&amp;按钮"></a>25 a-table中的分页器&amp;按钮</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;a-table </span><br><span class="line">   :columns&#x3D;&quot;要展示的列名称（可以自定义列表）&quot; </span><br><span class="line">   :data-source&#x3D;&quot;要展示的动态数据表名&quot; </span><br><span class="line">   :pagination&#x3D;&quot;pagination&quot; </span><br><span class="line">   :rowKey&#x3D;&quot;(record,index)&#x3D;&gt;&#123;return index&#125;&quot;</span><br><span class="line"> &gt;</span><br><span class="line"> &lt;!-- 带:的都是属性绑定，不可以更换名字，带 : 就是 js 环境 --&gt;</span><br><span class="line"> &lt;!-- 不写:rowKey&#x3D;&quot;(record,index)&#x3D;&gt;&#123;return index&#125;&quot;浏览器会发出警告 --&gt;</span><br><span class="line">    &lt;p slot&#x3D;&quot;tags&quot; slot-scope&#x3D;&quot;text,tags,i&quot;&gt;</span><br><span class="line">     &lt;!-- 加入操作的按钮！其中tags是某列数据，i是索引 --&gt;</span><br><span class="line">     &lt;a-button @click&#x3D;&quot;delUser(text,tags,i)&quot;&gt;删除&lt;&#x2F;a-button&gt;</span><br><span class="line">   &lt;&#x2F;p&gt;</span><br><span class="line"> &lt;&#x2F;a-table&gt;</span><br></pre></td></tr></table></figure><h3 id="26-a-table中获取某一行值的方法"><a href="#26-a-table中获取某一行值的方法" class="headerlink" title="26 a-table中获取某一行值的方法"></a>26 a-table中获取某一行值的方法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a-table </span><br><span class="line">    :columns=<span class="string">&quot;columns&quot;</span> </span><br><span class="line">    :data-source=<span class="string">&quot;userListGet&quot;</span> </span><br><span class="line">    :pagination=<span class="string">&quot;pagination&quot;</span> </span><br><span class="line">    :rowKey=<span class="string">&quot;(record,index)=&gt;&#123;return index&#125;&quot;</span></span><br><span class="line">  &gt;</span><br><span class="line">  &lt;!-- 带:的都是属性绑定，不可以更换名字，带 : 就是 js 环境 --&gt;</span><br><span class="line">    &lt;!-- 不写:rowKey=&quot;(record,index)=&gt;&#123;return index&#125;&quot;浏览器会发出警告 --&gt;</span><br><span class="line">    &lt;p slot=<span class="string">&quot;tags&quot;</span> slot-scope=<span class="string">&quot;text,tags,i&quot;</span>&gt;</span><br><span class="line">      &lt;!-- 加入操作的按钮！ --&gt;</span><br><span class="line">      &lt;a-button @click=&quot;delUser(text,tags,i)&quot;&gt;删除&lt;/a-button&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">  &lt;/a-table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">const columns = [</span><br><span class="line">  &#123;</span><br><span class="line">    title:<span class="string">&#x27;操作&#x27;</span>,</span><br><span class="line">    dataIndex: <span class="string">&#x27;tags&#x27;</span>,</span><br><span class="line">    key : <span class="string">&#x27;tags&#x27;</span>,</span><br><span class="line">    width: <span class="number">100</span>,</span><br><span class="line">    scopedSlots : &#123; customRender: <span class="string">&#x27;tags&#x27;</span>&#125;</span><br><span class="line">    // scopedSlots: &#123; customRender: <span class="string">&#x27;tags&#x27;</span> &#125;,一定不能少不然渲染不了html标签</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; delete_user &#125; <span class="keyword">from</span> <span class="string">&#x27;@/http/apis&#x27;</span></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      columns,//这里要返回值哦 </span><br><span class="line">      pagination:&#123;</span><br><span class="line">      pageSize: <span class="number">4</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    delUser(text,tags,i)&#123;</span><br><span class="line">       &#125;     </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="27-控制对话框"><a href="#27-控制对话框" class="headerlink" title="27 控制对话框"></a>27 控制对话框</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 定义变量 isDel来控制 confirm，isDel&#x3D;&#x3D;true执行的就是对话框的 ok，isDel&#x3D;&#x3D;false执行的就是对话框的 false</span><br><span class="line">const isDel &#x3D; confirm(&#39;你确定要删除&#39; + tags.id)</span><br><span class="line">if(isDel&#x3D;&#x3D;true)&#123;</span><br><span class="line">delete_user(tags.id).then(</span><br><span class="line">res&#x3D;&gt;&#123;</span><br><span class="line">&#x2F;&#x2F; 删除回调地址是  http:&#x2F;&#x2F;192.168.56.100:1594&#x2F;id&#x2F;</span><br><span class="line">this.get()</span><br><span class="line">alert(&#39;删除成功啦~&#39;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;else&#123;</span><br><span class="line">alert(&#39;有需要再叫我哈~&#39;) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="28-自动跳转到某一网址"><a href="#28-自动跳转到某一网址" class="headerlink" title="28 自动跳转到某一网址"></a>28 自动跳转到某一网址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.location.href &#x3D; &#39;https:&#x2F;&#x2F;www.baidu.com&#x2F;&#39;</span><br></pre></td></tr></table></figure><h3 id="29-Vue报错无法查看对象问题"><a href="#29-Vue报错无法查看对象问题" class="headerlink" title="29 Vue报错无法查看对象问题"></a>29 Vue报错无法查看对象问题</h3><ul><li>出现问题</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid prop: <span class="built_in">type</span> check failed <span class="keyword">for</span> prop <span class="string">&quot;dataSource&quot;</span>. Expected Array, got Object </span><br></pre></td></tr></table></figure><ul><li>解决方案</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.userListGet = res.results</span><br></pre></td></tr></table></figure><h3 id="31-Vue-Django-RestFrameWork-实现分页"><a href="#31-Vue-Django-RestFrameWork-实现分页" class="headerlink" title="31 Vue+Django-RestFrameWork 实现分页"></a>31 Vue+Django-RestFrameWork 实现分页</h3><ul><li><p>后端代码</p><ul><li>实现局部分页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> user.serializers <span class="keyword">import</span> UserSerializer, UserModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页（局部）：自定义分页器 局部</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PageNum</span>(<span class="params">PageNumberPagination</span>):</span></span><br><span class="line">    page_size = <span class="number">4</span>                           <span class="comment"># 每页显示多少条</span></span><br><span class="line">    page_size_query_param = <span class="string">&#x27;page_size&#x27;</span>     <span class="comment"># 查询字符串中代表每页返回数据数量的参数名, 默认值: None</span></span><br><span class="line">    page_query_param = <span class="string">&#x27;page&#x27;</span>               <span class="comment"># 查询字符串中代表页码的参数名, 有默认值: page</span></span><br><span class="line">    max_page_size = <span class="literal">None</span>                    <span class="comment"># 最大页码数限制</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = UserModelSerializer</span><br><span class="line">    filter_fields = &#123;<span class="string">&quot;username&quot;</span>&#125;</span><br><span class="line">    pagination_class = PageNum  <span class="comment"># 注意不是列表（只能有一个分页模式）</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>前端代码</p><ul><li>Pagination.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;a-pagination</span><br><span class="line">      show-quick-jumper</span><br><span class="line">      :default-current&#x3D;&quot;2&quot;</span><br><span class="line">      :pageSize &#x3D; &#39;4&#39;</span><br><span class="line">      :total&#x3D;&quot;count&quot;</span><br><span class="line">      show-less-items</span><br><span class="line">      @change&#x3D;&quot;onChange&quot;</span><br><span class="line">      v-model&#x3D;&quot;current&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">      &lt;!-- 一定是change方法，不然不能跳转 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    props:[ &#39;count&#39; ],</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            current:1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123; </span><br><span class="line">        onChange() &#123;</span><br><span class="line">            this.$emit(&#39;getPage&#39;, this.current)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ul><li>Index.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;components-layout-demo-basic&quot;&gt;</span><br><span class="line">        &lt;a-layout-content&gt;</span><br><span class="line">            &lt;TableList</span><br><span class="line">                  :userListGet&#x3D;&quot;userListGet&quot;</span><br><span class="line">                  :userList&#x3D;&quot;userList&quot;</span><br><span class="line">                  @getUser&#x3D;&quot;getUser&quot;</span><br><span class="line">                  @add&#x3D;&quot;add&quot;</span><br><span class="line">             &gt;</span><br><span class="line">                    </span><br><span class="line">             &lt;&#x2F;TableList&gt;</span><br><span class="line">             &lt;Pagination</span><br><span class="line">                  @getPage&#x3D;&quot;getPage&quot; </span><br><span class="line">                  :count&#x3D;&quot;count&quot;              </span><br><span class="line">              &gt;</span><br><span class="line">      &lt;&#x2F;Pagination&gt;</span><br><span class="line">        &lt;&#x2F;a-layout-content&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Pagination from &quot;.&#x2F;components&#x2F;Pagination&quot;</span><br><span class="line"></span><br><span class="line">import &#123; get_userlist &#125; from &#39;@&#x2F;http&#x2F;apis&#39;;</span><br><span class="line">export default &#123;</span><br><span class="line">    components:&#123;</span><br><span class="line">        BreadCrumb,</span><br><span class="line">        TableList,</span><br><span class="line">        Search,</span><br><span class="line">        EditForm,</span><br><span class="line">        Pagination</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            userListGet:[],</span><br><span class="line">            updateUserList:[],</span><br><span class="line">            &#x2F;&#x2F; 当前页码</span><br><span class="line">            current:1,</span><br><span class="line">            &#x2F;&#x2F; 总共的数据多少条</span><br><span class="line">            count:0</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getUser()&#123;</span><br><span class="line">          &#x2F;&#x2F; 获取用户信息列表，父组件传递给子组件</span><br><span class="line">          get_userlist(this.current).then(res&#x3D;&gt;&#123;</span><br><span class="line">            this.userListGet &#x3D; res.results</span><br><span class="line">            this.count &#x3D; res.count</span><br><span class="line">            console.log(this.count)</span><br><span class="line">            console.log(this.userListGet)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 获取页码</span><br><span class="line">        getPage(currentChild)&#123;</span><br><span class="line">          &#x2F;&#x2F; 获取到的currentChild是子组件传递过来是第几页</span><br><span class="line">          this.current &#x3D; currentChild</span><br><span class="line">          console.log(this.current)</span><br><span class="line">          this.getUser()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#components-layout-demo-basic &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-header,</span><br><span class="line">#components-layout-demo-basic .ant-layout-footer &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-footer &#123;</span><br><span class="line">  line-height: 1.5;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-content &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  color: #fff;</span><br><span class="line">  min-height: 120px;</span><br><span class="line">  line-height: 120px;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic &gt; .ant-layout &#123;</span><br><span class="line">  margin-bottom: 48px;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic &gt; .ant-layout:last-child &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="32-前后端联调分页"><a href="#32-前后端联调分页" class="headerlink" title="32 前后端联调分页"></a>32 前后端联调分页</h3><ul><li><p>为了解决前端+后端能同时进行分页的问题，只定义前端分页，后端如果分页就会影响前端数据，如果后端不定义分页器，就会造成后端admin难以管理。</p></li><li><p>后端代码</p><ul><li>实现局部分页</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> PageNumberPagination</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> user.serializers <span class="keyword">import</span> UserSerializer, UserModelSerializer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页（局部）：自定义分页器 局部</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PageNum</span>(<span class="params">PageNumberPagination</span>):</span></span><br><span class="line">    page_size = <span class="number">4</span>                           <span class="comment"># 每页显示多少条</span></span><br><span class="line">    page_size_query_param = <span class="string">&#x27;page_size&#x27;</span>     <span class="comment"># 查询字符串中代表每页返回数据数量的参数名, 默认值: None</span></span><br><span class="line">    page_query_param = <span class="string">&#x27;page&#x27;</span>               <span class="comment"># 查询字符串中代表页码的参数名, 有默认值: page</span></span><br><span class="line">    max_page_size = <span class="literal">None</span>                    <span class="comment"># 最大页码数限制</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = UserModelSerializer</span><br><span class="line">    filter_fields = &#123;<span class="string">&quot;username&quot;</span>&#125;</span><br><span class="line">    pagination_class = PageNum  <span class="comment"># 注意不是列表（只能有一个分页模式）</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>前端代码</p><ul><li>Pagination.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;a-pagination</span><br><span class="line">      show-quick-jumper</span><br><span class="line">      :default-current&#x3D;&quot;2&quot;</span><br><span class="line">      :pageSize &#x3D; &#39;4&#39;</span><br><span class="line">      :total&#x3D;&quot;count&quot;</span><br><span class="line">      show-less-items</span><br><span class="line">      @change&#x3D;&quot;onChange&quot;</span><br><span class="line">      v-model&#x3D;&quot;current&quot;</span><br><span class="line">    &#x2F;&gt;</span><br><span class="line">      &lt;!-- 一定是change方法，不然不能跳转 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    props:[ &#39;count&#39; ],</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            current:1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123; </span><br><span class="line">        onChange() &#123;</span><br><span class="line">            this.$emit(&#39;getPage&#39;, this.current)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ul><li>Index.vue</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;components-layout-demo-basic&quot;&gt;</span><br><span class="line">        &lt;a-layout-content&gt;</span><br><span class="line">            &lt;TableList</span><br><span class="line">                  :userListGet&#x3D;&quot;userListGet&quot;</span><br><span class="line">                  :userList&#x3D;&quot;userList&quot;</span><br><span class="line">                  @getUser&#x3D;&quot;getUser&quot;</span><br><span class="line">                  @add&#x3D;&quot;add&quot;</span><br><span class="line">             &gt;</span><br><span class="line">                    </span><br><span class="line">             &lt;&#x2F;TableList&gt;</span><br><span class="line">             &lt;Pagination</span><br><span class="line">                  @getPage&#x3D;&quot;getPage&quot; </span><br><span class="line">                  :count&#x3D;&quot;count&quot;              </span><br><span class="line">              &gt;</span><br><span class="line">      &lt;&#x2F;Pagination&gt;</span><br><span class="line">        &lt;&#x2F;a-layout-content&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Pagination from &quot;.&#x2F;components&#x2F;Pagination&quot;</span><br><span class="line"></span><br><span class="line">import &#123; get_userlist &#125; from &#39;@&#x2F;http&#x2F;apis&#39;;</span><br><span class="line">export default &#123;</span><br><span class="line">    components:&#123;</span><br><span class="line">        BreadCrumb,</span><br><span class="line">        TableList,</span><br><span class="line">        Search,</span><br><span class="line">        EditForm,</span><br><span class="line">        Pagination</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            userListGet:[],</span><br><span class="line">            updateUserList:[],</span><br><span class="line">            &#x2F;&#x2F; 当前页码</span><br><span class="line">            current:1,</span><br><span class="line">            &#x2F;&#x2F; 总共的数据多少条</span><br><span class="line">            count:0</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getUser()&#123;</span><br><span class="line">          &#x2F;&#x2F; 获取用户信息列表，父组件传递给子组件</span><br><span class="line">          get_userlist(this.current).then(res&#x3D;&gt;&#123;</span><br><span class="line">            this.userListGet &#x3D; res.results</span><br><span class="line">            this.count &#x3D; res.count</span><br><span class="line">            console.log(this.count)</span><br><span class="line">            console.log(this.userListGet)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 获取页码</span><br><span class="line">        getPage(currentChild)&#123;</span><br><span class="line">          &#x2F;&#x2F; 获取到的currentChild是子组件传递过来是第几页</span><br><span class="line">          this.current &#x3D; currentChild</span><br><span class="line">          console.log(this.current)</span><br><span class="line">          this.getUser()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#components-layout-demo-basic &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-header,</span><br><span class="line">#components-layout-demo-basic .ant-layout-footer &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-footer &#123;</span><br><span class="line">  line-height: 1.5;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic .ant-layout-content &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  color: #fff;</span><br><span class="line">  min-height: 120px;</span><br><span class="line">  line-height: 120px;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic &gt; .ant-layout &#123;</span><br><span class="line">  margin-bottom: 48px;</span><br><span class="line">&#125;</span><br><span class="line">#components-layout-demo-basic &gt; .ant-layout:last-child &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="33-利用数据解耦性完善查询接口"><a href="#33-利用数据解耦性完善查询接口" class="headerlink" title="33 利用数据解耦性完善查询接口"></a>33 利用数据解耦性完善查询接口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    components:&#123;</span><br><span class="line">        BreadCrumb,</span><br><span class="line">        TableList,</span><br><span class="line">        Search,</span><br><span class="line">        EditForm,</span><br><span class="line">        Pagination</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            roleListGet:[],</span><br><span class="line">            searchList:&#123;</span><br><span class="line">                &#39;zh_name&#39;:&#39;&#39;,</span><br><span class="line">                &#39;page&#39;:1,</span><br><span class="line">                &#39;page_size&#39;:4,</span><br><span class="line">                </span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    find()&#123;</span><br><span class="line">              &#x2F;&#x2F; 根据用户名查找用户信息</span><br><span class="line">              search_for_role(this.searchList).then(res&#x3D;&gt;&#123;</span><br><span class="line">                  this.getRole()</span><br><span class="line">                  &#x2F;&#x2F; 数据解耦性！！！查询和查询某个其实可以调用同一个接口！</span><br><span class="line">                  &#x2F;&#x2F; 查询所有：http:&#x2F;&#x2F;192.168.56.100:1594&#x2F;?page&#x3D;1&amp;zh_name&#x3D;</span><br><span class="line">                  &#x2F;&#x2F; 查询某个：http:&#x2F;&#x2F;192.168.56.100:1594&#x2F;?page&#x3D;1&amp;zh_name&#x3D;many</span><br><span class="line"></span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">    getRole()&#123;</span><br><span class="line">        this.searchList.page &#x3D; this.current</span><br><span class="line">        &#x2F;&#x2F; 获取用户信息列表，父组件传递给子组件</span><br><span class="line">        get_rolelist(this.searchList).then(res&#x3D;&gt;&#123;</span><br><span class="line">        this.roleListGet &#x3D; res.results</span><br><span class="line">        this.count &#x3D; res.count</span><br><span class="line">        console.log(this.count)</span><br><span class="line">        console.log(this.roleListGet)</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="34-序列化展示外键"><a href="#34-序列化展示外键" class="headerlink" title="34 序列化展示外键"></a>34 序列化展示外键</h3><ul><li>方法1  新增字段储存名称，新增字段为只读，不影响同一序列化器的添加功能</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlowConfSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    flowtype_name = serializers.ReadOnlyField(source=<span class="string">&#x27;flowtype.name&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第一种序列化展示方法，新增字段flowtype_name储存名称</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = FlowConf</span><br><span class="line">        fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line">        </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;count&quot;: 3,</span></span><br><span class="line"><span class="string">    &quot;next&quot;: null,</span></span><br><span class="line"><span class="string">    &quot;previous&quot;: null,</span></span><br><span class="line"><span class="string">    &quot;results&quot;: [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;id&quot;: 1,</span></span><br><span class="line"><span class="string">            &quot;flowtype_name&quot;: &quot;财务工单&quot;,</span></span><br><span class="line"><span class="string">            &quot;name&quot;: &quot;请假模板1&quot;,</span></span><br><span class="line"><span class="string">            &quot;description&quot;: &quot;用于普通请假事宜&quot;,</span></span><br><span class="line"><span class="string">            &quot;customfield&quot;: &quot;[&#123;&#x27;field_name&#x27;:&#x27;请假时间&#x27;,&#x27;type:&#x27;1&#x27;&#125;,&#123;&#x27;field_name&#x27;:&#x27;截止时间&#x27;,&#x27;type&#x27;:&#x27;1&#x27;&#125;,&#123;&#x27;field_name&#x27;:&#x27;请假原由&#x27;,&#x27;type&#x27;:&#x27;2&#x27;&#125;]&quot;,</span></span><br><span class="line"><span class="string">            &quot;flowtype&quot;: 2</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>方法2  替换字段为名称，影响同一序列化器的添加功能</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlowConfSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    flowtype = serializers.SerializerMethodField()</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = FlowConf</span><br><span class="line">        fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_flowtype</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="keyword">return</span> row.flowtype.name</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;count&quot;: 3,</span></span><br><span class="line"><span class="string">    &quot;next&quot;: null,</span></span><br><span class="line"><span class="string">    &quot;previous&quot;: null,</span></span><br><span class="line"><span class="string">    &quot;results&quot;: [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;id&quot;: 1,</span></span><br><span class="line"><span class="string">            &quot;flowtype&quot;: &quot;财务工单&quot;,</span></span><br><span class="line"><span class="string">            &quot;name&quot;: &quot;请假模板1&quot;,</span></span><br><span class="line"><span class="string">            &quot;description&quot;: &quot;用于普通请假事宜&quot;,</span></span><br><span class="line"><span class="string">            &quot;customfield&quot;: &quot;[&#123;&#x27;field_name&#x27;:&#x27;请假时间&#x27;,&#x27;type:&#x27;1&#x27;&#125;,&#123;&#x27;field_name&#x27;:&#x27;截止时间&#x27;,&#x27;type&#x27;:&#x27;1&#x27;&#125;,&#123;&#x27;field_name&#x27;:&#x27;请假原由&#x27;,&#x27;type&#x27;:&#x27;2&#x27;&#125;]&quot;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="35-关于-action-属性"><a href="#35-关于-action-属性" class="headerlink" title="35 关于 action 属性"></a>35 关于 action 属性</h3><h4 id="35-1-详解"><a href="#35-1-详解" class="headerlink" title="35.1 详解"></a>35.1 详解</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">视图集ViewSet</span></span><br><span class="line"><span class="string">继承自APIView与ViewSetMixin</span></span><br><span class="line"><span class="string">    作用也与APIView基本类似，提供了身份认证、权限校验、流量管理等</span></span><br><span class="line"><span class="string">ViewSet主要通过继承ViewSetMixin来实现在调用as_view()时传入字典(如&#123;‘get’:’list’&#125;)的映射处理工作</span></span><br><span class="line"><span class="string">在ViewSet中，没有提供任何动作action方法，需要我们自己实现action方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">action的使用</span></span><br><span class="line"><span class="string">在视图集中，除了上述默认的方法动作外，还可以添加自定义动作</span></span><br><span class="line"><span class="string">只要继承了ViewSetMixin类,路由的配置就发生变化了,只需要写映射即可,视图类的方法中就会有个action</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">action的属性</span></span><br><span class="line"><span class="string">在视图集中，我们可以通过action对象属性来获取当前请求视图集时的action动作是哪个</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>实例分析</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span>(<span class="params">viewsets.ModelViewSet</span>):</span></span><br><span class="line">    queryset = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    serializer_class = UserModelSerializer</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_serializer_class</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;action-------&gt;&#x27;</span>, self.action)</span><br><span class="line">        <span class="keyword">return</span> UserModelSerializer</span><br></pre></td></tr></table></figure><h4 id="35-2-获取某条数据"><a href="#35-2-获取某条数据" class="headerlink" title="35.2 获取某条数据"></a>35.2 获取某条数据</h4><h5 id="35-2-1-获取某条数据"><a href="#35-2-1-获取某条数据" class="headerlink" title="35.2.1 获取某条数据"></a>35.2.1 获取某条数据</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/1/</span></span><br></pre></td></tr></table></figure><ul><li>返回数据<ul><li>获取某一条数据就不是list类型</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action-------&gt; retrieve</span><br></pre></td></tr></table></figure><h5 id="35-2-2-获取具体数据（查找）"><a href="#35-2-2-获取具体数据（查找）" class="headerlink" title="35.2.2 获取具体数据（查找）"></a>35.2.2 获取具体数据（查找）</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.56.100:1594/user/user/?username=魏魏最阔爱</span><br></pre></td></tr></table></figure><ul><li>返回数据<ul><li>获取到的哪怕一条数据，action动作都是list类型</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action-------&gt; list</span><br></pre></td></tr></table></figure><h5 id="35-2-3-添加数据"><a href="#35-2-3-添加数据" class="headerlink" title="35.2.3 添加数据"></a>35.2.3 添加数据</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://192.168.56.100:1594/user/user/</span></span><br></pre></td></tr></table></figure><ul><li>返回数据<ul><li>添加时create</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action-------&gt; create</span><br></pre></td></tr></table></figure><h3 id="36-query和params"><a href="#36-query和params" class="headerlink" title="36 query和params"></a>36 query和params</h3><ul><li>query和params传参的区别</li></ul><p>query传参显示参数，params传参不显示参数，params相对于query来说较安全一点</p><p>取值方法也有不同：query取值：this.$route.query.XXX || this.$route.params.xxx</p><p>query传值页面刷新数据还在，而params传值页面数据消失。</p><h4 id="36-1-query"><a href="#36-1-query" class="headerlink" title="36.1 query"></a>36.1 query</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 传参组件写法 --&gt;</span><br><span class="line">&lt;router-link :to&#x3D;&quot;&#123;path:&#39;&#x2F;home&#39;, query:&#123;&#39;pid&#39;:item.id&#125;&#125;&quot;&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 写在方法里 --&gt;</span><br><span class="line">jump(flowConf)&#123;</span><br><span class="line">this.$router.push(</span><br><span class="line">&#123;</span><br><span class="line">path:&#39;flowconfform&#39;,</span><br><span class="line">&#x2F;&#x2F; 如果是path:&#39;flowconfform&#x2F;&#39;,多了&#x2F;就会无法返回</span><br><span class="line">&#39;query&#39;:&#123;</span><br><span class="line">&#39;name&#39;:flowConf.name,</span><br><span class="line">&#39;id&#39;:flowConf.id</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="36-2-params"><a href="#36-2-params" class="headerlink" title="36.2 params"></a>36.2 params</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="37-循环之双向绑定-添加自定义字段"><a href="#37-循环之双向绑定-添加自定义字段" class="headerlink" title="37 循环之双向绑定+添加自定义字段"></a>37 循环之双向绑定+添加自定义字段</h3><ul><li>父组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">             &lt;a-row&gt;</span><br><span class="line">            &lt;a-col :span&#x3D;&quot;19&quot; style&#x3D;&quot;height:500px&quot;&gt;</span><br><span class="line">                &lt;CreateForm</span><br><span class="line">                   :msg&#x3D;&quot;flowConf&quot; </span><br><span class="line">                &gt;&lt;&#x2F;CreateForm&gt;</span><br><span class="line">            &lt;&#x2F;a-col&gt;</span><br><span class="line">            &lt;a-col :span&#x3D;&quot;5&quot; style&#x3D;&quot;height:500px;background:yellow&quot;&gt;</span><br><span class="line">                col-12</span><br><span class="line">            &lt;&#x2F;a-col&gt;</span><br><span class="line">            &lt;&#x2F;a-row&gt;</span><br><span class="line">            &lt;a-row&gt;</span><br><span class="line">            &lt;a-col :span&#x3D;&quot;24&quot; style&#x3D;&quot;height:160px&quot;&gt;</span><br><span class="line">                &lt;Check</span><br><span class="line">                    :flowConf&#x3D;&quot;flowConf&quot;</span><br><span class="line">                &gt;&lt;&#x2F;Check&gt;</span><br><span class="line">            &lt;&#x2F;a-col&gt;</span><br><span class="line">            &lt;&#x2F;a-row&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Check from &#39;@&#x2F;views&#x2F;flowconfform-manage&#x2F;components&#x2F;Check&#39;</span><br><span class="line">import CreateForm from &#39;@&#x2F;views&#x2F;flowconfform-manage&#x2F;components&#x2F;CreateForm&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">    components:&#123;</span><br><span class="line">        Check,</span><br><span class="line">        CreateForm</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            flowConf:this.$route.query.flowconf,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        changeJson()&#123;</span><br><span class="line">            const textJson &#x3D; this.flowConf.customfield</span><br><span class="line">            console.log(&#39;自定义字段&#39;, textJson)</span><br><span class="line">            const textJsonChange &#x3D; JSON.parse(textJson)</span><br><span class="line">            console.log(&#39;转换后自定义字段&#39;, textJsonChange)</span><br><span class="line">            this.flowConf.customfield &#x3D; textJsonChange</span><br><span class="line">            console.log(this.flowConf)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">    this.changeJson()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><ul><li>子组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;&lt;h1&gt;&#123;&#123; msg.customfield &#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">         &lt;a-form-model :label-col&#x3D;&quot;labelCol&quot; :wrapper-col&#x3D;&quot;wrapperCol&quot;&gt;</span><br><span class="line">            &lt;a-form-model-item v-for&#x3D;&quot;(select,item) in msg.customfield.field_list&quot; :key&#x3D;&quot;item&quot;&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;p v-if&#x3D;&quot;select.field_type&#x3D;&#x3D;&#x3D;&#39;input&#39;&quot; style&#x3D;&quot;text-align:left&quot;&gt;&#123;&#123;select.verbos_name&#125;&#125;:&amp;emsp;</span><br><span class="line">                &lt;a-input v-model&#x3D;&quot;select.value&quot; style&#x3D;&quot;width:200px&quot; @change&#x3D;&quot;giveValue&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;p v-show&#x3D;&quot;select.field_type&#x3D;&#x3D;&#x3D;&#39;select&#39;&quot; style&#x3D;&quot;text-align:left&quot;&gt;</span><br><span class="line">                &#123;&#123;select.verbos_name&#125;&#125;:&amp;emsp;</span><br><span class="line">                &lt;a-select v-model&#x3D;&quot;select.value&quot; placeholder&#x3D;&quot;please select your option&quot; style&#x3D;&quot;width:200px&quot; @change&#x3D;&quot;giveValue&quot;&gt;</span><br><span class="line">                    &lt;a-select-option v-for&#x3D;&quot;s in select.field_datasource&quot; :key&#x3D;&quot;s.value&quot; :value&#x3D;&quot;s.value&quot;&gt;</span><br><span class="line">                    &#123;&#123; s.label &#125;&#125;</span><br><span class="line">                    &lt;&#x2F;a-select-option&gt;</span><br><span class="line">                &lt;&#x2F;a-select&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">            &lt;p v-show&#x3D;&quot;select.field_type&#x3D;&#x3D;&#39;textarea&#39;&quot; style&#x3D;&quot;text-align:left&quot;&gt;</span><br><span class="line">                &#123;&#123;select.verbos_name&#125;&#125;:</span><br><span class="line">                &lt;a-input v-model&#x3D;&quot;select.value&quot; type&#x3D;&quot;textarea&quot; style&#x3D;&quot;width:700px;height:150px&quot; @change&#x3D;&quot;giveValue&quot;&#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;p&gt;</span><br><span class="line">            &lt;&#x2F;a-form-model-item&gt;</span><br><span class="line">            &lt;a-form-model-item :wrapper-col&#x3D;&quot;&#123; span: 14, offset: 4 &#125;&quot;&gt;</span><br><span class="line">                &lt;a-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;onSubmit&quot;&gt;</span><br><span class="line">                提交</span><br><span class="line">                &lt;&#x2F;a-button&gt;</span><br><span class="line">                &lt;a-button style&#x3D;&quot;margin-left: 10px;&quot;&gt;</span><br><span class="line">                取消</span><br><span class="line">                &lt;&#x2F;a-button&gt;</span><br><span class="line">            &lt;&#x2F;a-form-model-item&gt;</span><br><span class="line">        &lt;&#x2F;a-form-model&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:[ &#39;msg&#39; ],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;  </span><br><span class="line">      labelCol: &#123; span: 4 &#125;,</span><br><span class="line">      wrapperCol: &#123; span: 14 &#125;,</span><br><span class="line">      form: &#123;</span><br><span class="line">        name: &#39;&#39;,</span><br><span class="line">        region: undefined,</span><br><span class="line">        date1: undefined,</span><br><span class="line">        delivery: false,</span><br><span class="line">        type: [],</span><br><span class="line">        resource: &#39;&#39;,</span><br><span class="line">        desc: &#39;&#39;,        </span><br><span class="line">      &#125;,</span><br><span class="line">      field_datasource:&#123;&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onSubmit() &#123;</span><br><span class="line">      console.log(&#39;submit!&#39;, this.form);</span><br><span class="line">    &#125;,  </span><br><span class="line">    &#x2F;&#x2F; 老师的方法</span><br><span class="line">    &#x2F;&#x2F; giveValue()&#123;</span><br><span class="line">    &#x2F;&#x2F;     for(var i in this.msg.customfield.form)&#123;</span><br><span class="line">    &#x2F;&#x2F;     const val &#x3D; this.getInputValue(i);</span><br><span class="line">    &#x2F;&#x2F;     this.msg.customfield.form[i] &#x3D; val;</span><br><span class="line">    &#x2F;&#x2F;   &#125;       </span><br><span class="line">    &#x2F;&#x2F; &#125;,</span><br><span class="line">    &#x2F;&#x2F; getInputValue(key)&#123;</span><br><span class="line">    &#x2F;&#x2F;     for(var i&#x3D;0;i&lt;this.msg.customfield.field_list.length;i&#x3D;i+1)&#123;</span><br><span class="line">    &#x2F;&#x2F;         const fileld_dic &#x3D; this.msg.customfield.field_list[i];</span><br><span class="line">    &#x2F;&#x2F;         const k1 &#x3D; fileld_dic[&#39;name&#39;];</span><br><span class="line">    &#x2F;&#x2F;         if(key &#x3D;&#x3D; k1)&#123;</span><br><span class="line">    &#x2F;&#x2F;         return fileld_dic[&#39;value&#39;]</span><br><span class="line">    &#x2F;&#x2F;     &#125;</span><br><span class="line">    &#x2F;&#x2F;   &#125;</span><br><span class="line">    &#x2F;&#x2F;   return &#39;&#39;</span><br><span class="line">    &#x2F;&#x2F; &#125;</span><br><span class="line">    giveValue()&#123;</span><br><span class="line">        const form_list &#x3D; Object.keys(this.msg.customfield.form) </span><br><span class="line">        &#x2F;&#x2F; 可以获取到所有的key</span><br><span class="line">        for(var i&#x3D;0;i&lt;this.msg.customfield.field_list.length;i++)&#123;</span><br><span class="line">            form_list.forEach(item &#x3D;&gt; &#123;</span><br><span class="line">                if(this.msg.customfield.field_list[i].name&#x3D;&#x3D;item)&#123;</span><br><span class="line">                    this.msg.customfield.form[item]&#x3D;this.msg.customfield.field_list[i].value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        return this.msg</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="38-serializer之元祖类型怎么展示名字"><a href="#38-serializer之元祖类型怎么展示名字" class="headerlink" title="38 serializer之元祖类型怎么展示名字"></a>38 serializer之元祖类型怎么展示名字</h3><h4 id="38-1-models字段"><a href="#38-1-models字段" class="headerlink" title="38.1 models字段"></a>38.1 models字段</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkOrderModel</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    status_choices = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;审批中&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;被驳回&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;完成&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    order_status = models.CharField(<span class="string">&#x27;工单状态&#x27;</span>, help_text=<span class="string">&#x27;审批中/被驳回/完成&#x27;</span>, choices=status_choices, default=<span class="string">&#x27;1&#x27;</span>, max_length=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><h4 id="38-2-serializers写法"><a href="#38-2-serializers写法" class="headerlink" title="38.2 serializers写法"></a>38.2 serializers写法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkOrderSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    order_status_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = WorkOrderModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_order_status_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        status_choices = <span class="built_in">dict</span>(row.status_choices)</span><br><span class="line">        <span class="keyword">return</span> status_choices[row.order_status]</span><br></pre></td></tr></table></figure><h3 id="39-Vue前端json格式注意事项"><a href="#39-Vue前端json格式注意事项" class="headerlink" title="39 Vue前端json格式注意事项"></a>39 Vue前端json格式注意事项</h3><ul><li>前端接收到的数据只有在是json字符串格式（双引号）的情况下才能转换成json格式！</li><li>从数据库获取到的数据默认是单引号！</li></ul><h4 id="39-1-Vue把单引号变成双引号的方法"><a href="#39-1-Vue把单引号变成双引号的方法" class="headerlink" title="39.1 Vue把单引号变成双引号的方法"></a>39.1 Vue把单引号变成双引号的方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const data &#x3D; res.results              </span><br><span class="line">var dic &#x3D; data.replace(&#x2F;&#39;&#x2F;g, &#39;&quot;&#39;)</span><br></pre></td></tr></table></figure><h4 id="39-2-把双引号数据变成json格式"><a href="#39-2-把双引号数据变成json格式" class="headerlink" title="39.2 把双引号数据变成json格式"></a>39.2 把双引号数据变成json格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.form &#x3D; JSON.parse(dic)</span><br></pre></td></tr></table></figure><h3 id="40-后端常见问题（filter-amp-get）"><a href="#40-后端常见问题（filter-amp-get）" class="headerlink" title="40 后端常见问题（filter&amp;get）"></a>40 后端常见问题（filter&amp;get）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obj1 = FlowConf.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>)<span class="comment"># 这是个列表（嵌套字典形式），是queryset对象</span></span><br><span class="line">obj2 = FlowConf.objects.get(<span class="built_in">id</span>=<span class="number">1</span>)  <span class="comment"># 找不到会报错，具体值</span></span><br><span class="line">obj3 = FlowConf.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>)[<span class="number">0</span>]<span class="comment"># obj对象（字典形式，.name可以取出具体值）</span></span><br></pre></td></tr></table></figure><h3 id="41-前端常见问题（登录不上）"><a href="#41-前端常见问题（登录不上）" class="headerlink" title="41 前端常见问题（登录不上）"></a>41 前端常见问题（登录不上）</h3><ul><li>前端登录不上<ul><li>login页面有问题：登录成功没有设置token（页面就能查看）</li><li>main.js有问题：查看全局过滤配置，可能没有设置token</li><li>http/index.js有问题：后端身份验证失败：错误token/token过期</li></ul></li></ul><h3 id="42-VUE端v-for循环解决textarea框重复输入的问题"><a href="#42-VUE端v-for循环解决textarea框重复输入的问题" class="headerlink" title="42 VUE端v-for循环解决textarea框重复输入的问题"></a>42 VUE端v-for循环解决textarea框重复输入的问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">         &lt;div v-for&#x3D;&quot; (self, item) in list&quot; :key&#x3D;&quot;item&quot;&gt;                         </span><br><span class="line">           &lt;a-textarea</span><br><span class="line">               v-model&#x3D;&quot;value[item]&quot;</span><br><span class="line">           &#x2F;&gt;</span><br><span class="line">   &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            value:[],</span><br><span class="line">            list:[</span><br><span class="line">                &#123;&#39;id&#39;:1&#125;,</span><br><span class="line">                &#123;&#39;id&#39;:2&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="43-自己写的一个权限验证"><a href="#43-自己写的一个权限验证" class="headerlink" title="43 自己写的一个权限验证"></a>43 自己写的一个权限验证</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubOrderView</span>(<span class="params">APIView</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        token = request.META.get(<span class="string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)</span><br><span class="line">        <span class="comment"># 用户id和角色</span></span><br><span class="line">        user_info = jwt_decode_handler(token[<span class="number">4</span>:])</span><br><span class="line">        user_id = user_info.get(<span class="string">&#x27;user_id&#x27;</span>)</span><br><span class="line">        role_info = UserRole.objects.<span class="built_in">filter</span>(user_id=user_id).values(<span class="string">&#x27;role_id&#x27;</span>)</span><br><span class="line">        role_list = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> role_info:</span><br><span class="line">            role_list.append(i.get(<span class="string">&#x27;role_id&#x27;</span>))</span><br><span class="line">        <span class="comment"># 实例化子工单id</span></span><br><span class="line">        suborder_id = request.query_params.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">        <span class="comment"># 审批类型id，1角色审批，2指定人审批</span></span><br><span class="line">        approve_type_id = SubOrderModel.objects.<span class="built_in">filter</span>(pk=suborder_id).first().approve_type_id</span><br><span class="line">        <span class="keyword">if</span> approve_type_id == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            approve_userrole_id = SubOrderModel.objects.<span class="built_in">filter</span>(pk=suborder_id).first().approve_userrole_id</span><br><span class="line">            <span class="keyword">if</span> approve_userrole_id <span class="keyword">in</span> role_list:</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;有审批权限&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;无审批权限&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>: <span class="number">0</span>&#125;)</span><br><span class="line">        <span class="keyword">elif</span> approve_type_id == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            approve_user = SubOrderModel.objects.<span class="built_in">filter</span>(pk=suborder_id).first().approve_user</span><br><span class="line">            <span class="keyword">if</span> user_id == approve_user:</span><br><span class="line">                <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;有审批权限&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>: <span class="number">1</span>&#125;)</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;无审批权限&#x27;</span>, <span class="string">&#x27;code&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;type&#x27;</span>: <span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="44-JWT生成token"><a href="#44-JWT生成token" class="headerlink" title="44 JWT生成token"></a>44 JWT生成token</h3><h4 id="44-1-settings-py"><a href="#44-1-settings-py" class="headerlink" title="44.1 settings.py"></a>44.1 settings.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Django settings for opwf project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Generated by &#x27;django-admin startproject&#x27; using Django 2.0.13.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on this file, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/2.0/topics/settings/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For the full list of settings and their values, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/2.0/ref/settings/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Build paths inside the project like this: os.path.join(BASE_DIR, ...)</span></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line">sys.path.insert(<span class="number">0</span>, os.path.join(BASE_DIR, <span class="string">&#x27;apps&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Quick-start development settings - unsuitable for production</span></span><br><span class="line"><span class="comment"># See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: keep the secret key used in production secret!</span></span><br><span class="line">SECRET_KEY = <span class="string">&#x27;uorj1ni^mnut@wo@c%)iv)%5=8dxlml4-j0!f3b%4#f*8a5)3t&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span></span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rest_framework&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user.apps.UserConfig&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;workflow.apps.WorkflowConfig&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;workerorder.apps.WorkerorderConfig&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;jwt&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;rest_framework_jwt&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;rest_framework.authentication&#x27;</span></span><br><span class="line"></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = <span class="string">&#x27;opwf.urls&#x27;</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">    <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class="line">)</span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [],</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = <span class="string">&#x27;opwf.wsgi.application&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Database</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/ref/settings/#databases</span></span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;opwf_db&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Password validation</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators</span></span><br><span class="line"></span><br><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment"># 文档报错： AttributeError: ‘AutoSchema’ object has no attribute ‘get_link’</span></span><br><span class="line">    <span class="comment"># 用下面的设置可以解决</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_SCHEMA_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.schemas.AutoSchema&#x27;</span>,</span><br><span class="line">    <span class="comment"># 默认设置是:</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;rest_framework.schemas.openapi.AutoSchema&#x27;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 异常处理器</span></span><br><span class="line">    <span class="comment"># &#x27;EXCEPTION_HANDLER&#x27;: &#x27;user.utils.exception_handler&#x27;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Base API policies    　　默认渲染器类</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.BrowsableAPIRenderer&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 默认解析器类</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PARSER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.JSONParser&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.FormParser&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.parsers.MultiPartParser&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 1.认证器（全局）</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework_jwt.authentication.JSONWebTokenAuthentication&#x27;</span>,  <span class="comment"># 在 DRF中配置JWT认证</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.authentication.SessionAuthentication&#x27;,  # 使用session时的认证器</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.authentication.BasicAuthentication&#x27;  # 提交表单时的认证器</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.权限配置（全局）： 顺序靠上的严格</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAdminUser&#x27;,  # 管理员可以访问</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAuthenticated&#x27;,  # 认证用户可以访问</span></span><br><span class="line">        <span class="comment"># &#x27;rest_framework.permissions.IsAuthenticatedOrReadOnly&#x27;,  # 认证用户可以访问, 否则只能读取</span></span><br><span class="line">        <span class="string">&#x27;rest_framework.permissions.AllowAny&#x27;</span>,  <span class="comment"># 所有用户都可以访问</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 3.限流（防爬虫）</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_THROTTLE_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.AnonRateThrottle&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.throttling.UserRateThrottle&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment"># 3.1限流策略</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_THROTTLE_RATES&#x27;: &#123;</span></span><br><span class="line">    <span class="comment">#     &#x27;user&#x27;: &#x27;100/hour&#x27;,  # 认证用户每小时100次</span></span><br><span class="line">    <span class="comment">#     &#x27;anon&#x27;: &#x27;300/day&#x27;,  # 未认证用户每天能访问3次</span></span><br><span class="line">    <span class="comment"># &#125;,</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;DEFAULT_CONTENT_NEGOTIATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.negotiation.DefaultContentNegotiation&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DEFAULT_METADATA_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.metadata.SimpleMetadata&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DEFAULT_VERSIONING_CLASS&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.分页（全局）：全局分页器, 例如 省市区的数据自定义分页器, 不需要分页</span></span><br><span class="line">    <span class="comment"># &#x27;DEFAULT_PAGINATION_CLASS&#x27;: &#x27;rest_framework.pagination.PageNumberPagination&#x27;,</span></span><br><span class="line">    <span class="comment"># # 每页返回数量</span></span><br><span class="line">    <span class="comment"># &#x27;PAGE_SIZE&#x27;: 3,</span></span><br><span class="line">    <span class="comment"># 5.过滤器后端</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>,</span><br><span class="line">        <span class="comment"># &#x27;django_filters.rest_framework.backends.DjangoFilterBackend&#x27;, 包路径有变化</span></span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5.1过滤排序（全局）：Filtering 过滤排序</span></span><br><span class="line">    <span class="string">&#x27;SEARCH_PARAM&#x27;</span>: <span class="string">&#x27;search&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ORDERING_PARAM&#x27;</span>: <span class="string">&#x27;ordering&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;NUM_PROXIES&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6.版本控制：Versioning  接口版本控制</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT_VERSION&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&#x27;ALLOWED_VERSIONS&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">    <span class="string">&#x27;VERSION_PARAM&#x27;</span>: <span class="string">&#x27;version&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Authentication  认证</span></span><br><span class="line">    <span class="comment"># 未认证用户使用的用户类型</span></span><br><span class="line">    <span class="string">&#x27;UNAUTHENTICATED_USER&#x27;</span>: <span class="string">&#x27;django.contrib.auth.models.AnonymousUser&#x27;</span>,</span><br><span class="line">    <span class="comment"># 未认证用户使用的Token值</span></span><br><span class="line">    <span class="string">&#x27;UNAUTHENTICATED_TOKEN&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># View configuration</span></span><br><span class="line">    <span class="string">&#x27;VIEW_NAME_FUNCTION&#x27;</span>: <span class="string">&#x27;rest_framework.views.get_view_name&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;VIEW_DESCRIPTION_FUNCTION&#x27;</span>: <span class="string">&#x27;rest_framework.views.get_view_description&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;NON_FIELD_ERRORS_KEY&#x27;</span>: <span class="string">&#x27;non_field_errors&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Testing</span></span><br><span class="line">    <span class="string">&#x27;TEST_REQUEST_RENDERER_CLASSES&#x27;</span>: [</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.MultiPartRenderer&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.renderers.JSONRenderer&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;TEST_REQUEST_DEFAULT_FORMAT&#x27;</span>: <span class="string">&#x27;multipart&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Hyperlink settings</span></span><br><span class="line">    <span class="string">&#x27;URL_FORMAT_OVERRIDE&#x27;</span>: <span class="string">&#x27;format&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;FORMAT_SUFFIX_KWARG&#x27;</span>: <span class="string">&#x27;format&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;URL_FIELD_NAME&#x27;</span>: <span class="string">&#x27;url&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Encoding</span></span><br><span class="line">    <span class="string">&#x27;UNICODE_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;COMPACT_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;STRICT_JSON&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;COERCE_DECIMAL_TO_STRING&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;UPLOADED_FILES_USE_URL&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Browseable API</span></span><br><span class="line">    <span class="string">&#x27;HTML_SELECT_CUTOFF&#x27;</span>: <span class="number">1000</span>,</span><br><span class="line">    <span class="string">&#x27;HTML_SELECT_CUTOFF_TEXT&#x27;</span>: <span class="string">&quot;More than &#123;count&#125; items...&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Schemas</span></span><br><span class="line">    <span class="string">&#x27;SCHEMA_COERCE_PATH_PK&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;SCHEMA_COERCE_METHOD_NAMES&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;retrieve&#x27;</span>: <span class="string">&#x27;read&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;destroy&#x27;</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x27;Access-Control-Allow-Origin&#x27;:&#x27;http://localhost:8080&#x27;,</span></span><br><span class="line">    <span class="comment"># &#x27;Access-Control-Allow-Credentials&#x27;: True</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Internationalization</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/topics/i18n/</span></span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line">USE_I18N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_L10N = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">USE_TZ = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files (CSS, JavaScript, Images)</span></span><br><span class="line"><span class="comment"># https://docs.djangoproject.com/en/2.0/howto/static-files/</span></span><br><span class="line"></span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">AUTH_USER_MODEL = <span class="string">&#x27;user.User&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jwt载荷中的有效期设置</span></span><br><span class="line">JWT_AUTH = &#123;</span><br><span class="line">    <span class="comment"># 1.token前缀：headers中 Authorization 值的前缀</span></span><br><span class="line">    <span class="string">&#x27;JWT_AUTH_HEADER_PREFIX&#x27;</span>: <span class="string">&#x27;JWT&#x27;</span>,</span><br><span class="line">    <span class="comment"># 2.token有效期：一天有效</span></span><br><span class="line">    <span class="string">&#x27;JWT_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(days=<span class="number">1</span>),</span><br><span class="line">    <span class="comment"># 3.刷新token：允许使用旧的token换新token</span></span><br><span class="line">    <span class="string">&#x27;JWT_ALLOW_REFRESH&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="comment"># 4.token有效期：token在24小时内过期, 可续期token</span></span><br><span class="line">    <span class="string">&#x27;JWT_REFRESH_EXPIRATION_DELTA&#x27;</span>: datetime.timedelta(hours=<span class="number">24</span>),</span><br><span class="line">    <span class="comment"># 5.自定义JWT载荷信息：自定义返回格式，需要手工创建</span></span><br><span class="line">    <span class="string">&#x27;JWT_RESPONSE_PAYLOAD_HANDLER&#x27;</span>: <span class="string">&#x27;user.utils.jwt_response_payload_handler&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="44-2-utils-py"><a href="#44-2-utils-py" class="headerlink" title="44.2 utils.py"></a>44.2 utils.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jwt_response_payload_handler</span>(<span class="params">token, user=<span class="literal">None</span>, request=<span class="literal">None</span>, role=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        自定义jwt认证成功返回数据</span></span><br><span class="line"><span class="string">        :token 返回的jwt</span></span><br><span class="line"><span class="string">        :user 当前登录的用户信息[对象]</span></span><br><span class="line"><span class="string">        :request 当前本次客户端提交过来的数据</span></span><br><span class="line"><span class="string">        :role 角色</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> user.first_name:</span><br><span class="line">        name = user.first_name</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = user.username</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;authenticated&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;id&#x27;</span>: user.<span class="built_in">id</span>,</span><br><span class="line">             <span class="string">&quot;role&quot;</span>: role,</span><br><span class="line">             <span class="string">&#x27;name&#x27;</span>: name,</span><br><span class="line">             <span class="string">&#x27;username&#x27;</span>: user.username,</span><br><span class="line">             <span class="string">&#x27;email&#x27;</span>: user.email,</span><br><span class="line">             <span class="string">&#x27;token&#x27;</span>: token,</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="44-3-models-py"><a href="#44-3-models-py" class="headerlink" title="44.3 models.py"></a>44.3 models.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">AbstractUser</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    username：用户名</span></span><br><span class="line"><span class="string">    password：密码</span></span><br><span class="line"><span class="string">    mobile：手机号</span></span><br><span class="line"><span class="string">    email：邮箱</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">30</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 写上 unique=True 就可以指定唯一，验证字段的时候自动验证</span></span><br><span class="line">    password = models.CharField(max_length=<span class="number">256</span>)</span><br><span class="line">    mobile = models.CharField(max_length=<span class="number">11</span>)</span><br><span class="line">    email = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    token = models.CharField(max_length=<span class="number">256</span>, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    weixin = models.CharField(max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    date_joined = models.DateField(auto_now_add=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;user_user&#x27;</span></span><br><span class="line">        verbose_name = <span class="string">&#x27;用户表&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><h4 id="44-4-serializers-py"><a href="#44-4-serializers-py" class="headerlink" title="44.4 serializers.py"></a>44.4 serializers.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.serializers <span class="keyword">import</span> jwt_payload_handler</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.settings <span class="keyword">import</span> api_settings</span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserSerializer</span>(<span class="params">serializers.Serializer</span>):</span></span><br><span class="line">    <span class="built_in">id</span> = serializers.IntegerField(read_only=<span class="literal">True</span>)</span><br><span class="line">    username = serializers.CharField()</span><br><span class="line">    password = serializers.CharField()</span><br><span class="line">    mobile = serializers.CharField()</span><br><span class="line">    email = serializers.EmailField()</span><br><span class="line">    weixin = serializers.CharField()</span><br><span class="line">    token = serializers.CharField(read_only=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        username = data.get(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        password = data.get(<span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        mobile = data.get(<span class="string">&#x27;mobile&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        email = data.get(<span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        weixin = data.get(<span class="string">&#x27;weixin&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        user = User(username=username, email=email, mobile=mobile, weixin=weixin)</span><br><span class="line">        user.set_password(password)</span><br><span class="line">        user.save()</span><br><span class="line">        <span class="comment"># 补充生成记录登录状态的token</span></span><br><span class="line">        jwt_payload_handler = api_settings.JWT_PAYLOAD_HANDLER</span><br><span class="line">        jwt_encode_handler = api_settings.JWT_ENCODE_HANDLER</span><br><span class="line">        payload = jwt_payload_handler(user)</span><br><span class="line">        token = jwt_encode_handler(payload)</span><br><span class="line">        user.token = token</span><br><span class="line">        <span class="keyword">return</span> user</span><br></pre></td></tr></table></figure><h4 id="44-5-urls-py"><a href="#44-5-urls-py" class="headerlink" title="44.5 urls.py"></a>44.5 urls.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.views <span class="keyword">import</span> obtain_jwt_token</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> user <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r&#x27;user&#x27;</span>, views.UserViewSet)</span><br><span class="line">router.register(<span class="string">r&#x27;user_get&#x27;</span>, views.UserGetViewSet)</span><br><span class="line">router.register(<span class="string">r&#x27;role&#x27;</span>, views.RoleViewSet)</span><br><span class="line">router.register(<span class="string">r&#x27;role_get&#x27;</span>, views.RoleGetViewSet)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, obtain_jwt_token),</span><br><span class="line">    path(<span class="string">&#x27;register/&#x27;</span>, views.RegisterView.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="45-token解码"><a href="#45-token解码" class="headerlink" title="45 token解码"></a>45 token解码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果是APIView获取的，在VUE中定义的，可以使用以下方式解密</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> rest_framework_jwt.utils <span class="keyword">import</span> jwt_decode_handler</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        token = request.META.get(<span class="string">&#x27;HTTP_AUTHORIZATION&#x27;</span>)</span><br><span class="line">        <span class="comment"># 用户id和角色</span></span><br><span class="line">        user_info = jwt_decode_handler(token[<span class="number">4</span>:])</span><br></pre></td></tr></table></figure><h3 id="46-serializer-关于查询"><a href="#46-serializer-关于查询" class="headerlink" title="46 serializer 关于查询"></a>46 serializer 关于查询</h3><ul><li>以工单表和工单子表为例</li></ul><h4 id="46-1-models-py"><a href="#46-1-models-py" class="headerlink" title="46.1 models.py"></a>46.1 models.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">from</span> utils.MyBaseModel <span class="keyword">import</span> BaseModel</span><br><span class="line"><span class="keyword">from</span> user.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> workflow.models <span class="keyword">import</span> FlowConf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkOrderModel</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    flowconf：工单名称（一对多，FlowConf）</span></span><br><span class="line"><span class="string">    create_user：工单创建用户（一对多，User表）</span></span><br><span class="line"><span class="string">    create_ts：创建时间</span></span><br><span class="line"><span class="string">    order_status：工单状态（审批中/被驳回/完成）</span></span><br><span class="line"><span class="string">    description：描述（text，存储用户工单描述）</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    status_choices = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;审批中&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;被驳回&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;完成&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    flowconf = models.ForeignKey(FlowConf, on_delete=models.CASCADE, null=<span class="literal">True</span>)</span><br><span class="line">    create_user = models.ForeignKey(User, on_delete=models.CASCADE)</span><br><span class="line">    order_status = models.CharField(<span class="string">&#x27;工单状态&#x27;</span>, help_text=<span class="string">&#x27;审批中/被驳回/完成&#x27;</span>, choices=status_choices, default=<span class="string">&#x27;1&#x27;</span>, max_length=<span class="number">30</span>)</span><br><span class="line">    parameter = models.TextField(default=<span class="string">&#x27;&#123;&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># description = models.TextField(&#x27;描述&#x27;, help_text=&#x27;存储用户工单描述&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;workerorder_workerorder&#x27;</span></span><br><span class="line">        verbose_name = <span class="string">&#x27;实例化工单&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubOrderModel</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    mainorder：一对多（WorkOrder）实例化工单相连</span></span><br><span class="line"><span class="string">    approve_user：一对多（内置User表）审批人</span></span><br><span class="line"><span class="string">    approbe_user_role：审批角色</span></span><br><span class="line"><span class="string">    approve_userrole_id：审批角色id</span></span><br><span class="line"><span class="string">    sequence_number：审批序号</span></span><br><span class="line"><span class="string">    approve_ts：审批时间</span></span><br><span class="line"><span class="string">    action_status：审批状态（待审批/通过/拒绝/退回）</span></span><br><span class="line"><span class="string">    suborder_status：子任务状态（待处理/已经处理/待上一节点处理）</span></span><br><span class="line"><span class="string">    approve_text：审批意见</span></span><br><span class="line"><span class="string">    approve_type_id: 审批类型</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    action_status_choices = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;待审批&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;通过&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;拒绝&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;退回&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    suborder_status_choices = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;待处理&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;已经处理&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;待上一节点处理&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    mainorder = models.ForeignKey(WorkOrderModel, on_delete=models.CASCADE)</span><br><span class="line">    approve_user = models.ForeignKey(User, null=<span class="literal">True</span>, blank=<span class="literal">True</span>, on_delete=models.SET_NULL, default=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    approbe_user_role = models.CharField(<span class="string">&#x27;审批角色&#x27;</span>, max_length=<span class="number">30</span>, null=<span class="literal">True</span>)</span><br><span class="line">    approve_userrole_id = models.IntegerField(<span class="string">&#x27;审批角色id&#x27;</span>)</span><br><span class="line">    sequence_number = models.IntegerField(<span class="string">&#x27;审批序号&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    approve_ts = models.DateTimeField(<span class="string">&#x27;审批时间&#x27;</span>, auto_now_add=<span class="literal">True</span>)</span><br><span class="line">    action_status = models.CharField(<span class="string">&#x27;审批状态&#x27;</span>, help_text=<span class="string">&#x27;待审批/通过/拒绝/退回&#x27;</span>, choices=action_status_choices, default=<span class="string">&#x27;1&#x27;</span>, max_length=<span class="number">30</span>)</span><br><span class="line">    suborder_status = models.CharField(<span class="string">&#x27;子任务状态&#x27;</span>, help_text=<span class="string">&#x27;待处理/已经处理/待上一节点处理&#x27;</span>, choices=suborder_status_choices, default=<span class="string">&#x27;1&#x27;</span>, max_length=<span class="number">30</span>)</span><br><span class="line">    approve_text = models.TextField(<span class="string">&#x27;审批意见&#x27;</span>)</span><br><span class="line">    type_choice = (</span><br><span class="line">        (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;角色审批&#x27;</span>),</span><br><span class="line">        (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;指定人员审批&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">    approve_type_id = models.CharField(max_length=<span class="number">30</span>, choices=type_choice)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        db_table = <span class="string">&#x27;workerorder_suborder&#x27;</span></span><br><span class="line">        verbose_name = <span class="string">&#x27;实例化子工单&#x27;</span></span><br><span class="line">        verbose_name_plural = verbose_name</span><br></pre></td></tr></table></figure><h4 id="46-2-serializer-py"><a href="#46-2-serializer-py" class="headerlink" title="46.2 serializer.py"></a>46.2 serializer.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> serializers</span><br><span class="line"><span class="keyword">from</span> workerorder.models <span class="keyword">import</span> WorkOrderModel, SubOrderModel</span><br><span class="line"><span class="keyword">from</span> workflow.models <span class="keyword">import</span> FlowConf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkOrderSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    order_status_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    create_user_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    flowconf_name = serializers.CharField(required=<span class="literal">False</span>, source=<span class="string">&#x27;flowconf.name&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = WorkOrderModel</span><br><span class="line">        fields = <span class="string">&#x27;__all__&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_order_status_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        status_choices = <span class="built_in">dict</span>(row.status_choices)</span><br><span class="line">        <span class="keyword">return</span> status_choices[row.order_status]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_create_user_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="comment"># print(type(row.create_user.username))</span></span><br><span class="line">        <span class="comment"># str</span></span><br><span class="line">        <span class="keyword">return</span> row.create_user.username</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubOrderSerializer</span>(<span class="params">serializers.ModelSerializer</span>):</span></span><br><span class="line">    approve_user_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    action_status_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    suborder_status_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    flowconf_name = serializers.SerializerMethodField(required=<span class="literal">False</span>)</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        model = SubOrderModel</span><br><span class="line">        fields = <span class="string">&quot;__all__&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_action_status_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dict</span>(row.action_status_choices)[row.action_status]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_suborder_status_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dict</span>(row.suborder_status_choices)[row.suborder_status]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_approve_user_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="keyword">if</span> row.approve_user:</span><br><span class="line">            <span class="keyword">return</span> row.approve_user.username</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_flowconf_name</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        <span class="keyword">return</span> row.mainorder.flowconf.name</span><br></pre></td></tr></table></figure><h3 id="47-Model字段类型"><a href="#47-Model字段类型" class="headerlink" title="47 Model字段类型"></a>47 Model字段类型</h3><h4 id="47-1-常用字段类型"><a href="#47-1-常用字段类型" class="headerlink" title="47.1 常用字段类型"></a>47.1 常用字段类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserGroup</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    uid = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>,null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    email = models.EmailField(max_length=<span class="number">32</span>)</span><br><span class="line">    text = models.TextField()</span><br><span class="line"></span><br><span class="line">    ctime = models.DateTimeField(auto_now_add=<span class="literal">True</span>)      <span class="comment"># 只有添加时才会更新时间</span></span><br><span class="line">    uptime = models.DateTimeField(auto_now=<span class="literal">True</span>)         <span class="comment"># 只要修改就会更新时间</span></span><br><span class="line"></span><br><span class="line">    ip1 = models.IPAddressField()                  <span class="comment"># 字符串类型，Django Admin以及ModelForm中提供验证 IPV4 机制</span></span><br><span class="line">    ip2 = models.GenericIPAddressField()           <span class="comment"># 字符串类型，Django Admin以及ModelForm中提供验证 Ipv4和Ipv6</span></span><br><span class="line"></span><br><span class="line">    active = models.BooleanField(default=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    data01 = models.DateTimeField()                      <span class="comment"># 日期+时间格式 YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ</span></span><br><span class="line">    data02 = models.DateField()                          <span class="comment"># 日期格式      YYYY-MM-DD</span></span><br><span class="line">    data03 = models.TimeField()                          <span class="comment"># 时间格式      HH:MM[:ss[.uuuuuu]]</span></span><br><span class="line"></span><br><span class="line">    age = models.PositiveIntegerField()           <span class="comment"># 正小整数 0 ～ 32767</span></span><br><span class="line">    balance = models.SmallIntegerField()          <span class="comment"># 小整数 -32768 ～ 32767</span></span><br><span class="line">    money = models.PositiveIntegerField()         <span class="comment"># 正整数 0 ～ 2147483647</span></span><br><span class="line">    bignum = models.BigIntegerField()             <span class="comment"># 长整型(有符号的) -9223372036854775808 ～ 9223372036854775807</span></span><br><span class="line">    </span><br><span class="line">    user_type_choices = (</span><br><span class="line">        (<span class="number">1</span>, <span class="string">&quot;超级用户&quot;</span>),</span><br><span class="line">        (<span class="number">2</span>, <span class="string">&quot;普通用户&quot;</span>),</span><br><span class="line">        (<span class="number">3</span>, <span class="string">&quot;普普通用户&quot;</span>),</span><br><span class="line">    )</span><br><span class="line">    user_type_id = models.IntegerField(choices=user_type_choices, default=<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="47-2-不常用字段类型"><a href="#47-2-不常用字段类型" class="headerlink" title="47.2 不常用字段类型"></a>47.2 不常用字段类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">URLField(CharField)</span><br><span class="line">        - 字符串类型，Django Admin以及ModelForm中提供验证 URL</span><br><span class="line"></span><br><span class="line">    SlugField(CharField)</span><br><span class="line">        - 字符串类型，Django Admin以及ModelForm中提供验证支持 字母、数字、下划线、连接符（减号）</span><br><span class="line"></span><br><span class="line">    CommaSeparatedIntegerField(CharField)</span><br><span class="line">        - 字符串类型，格式必须为逗号分割的数字</span><br><span class="line"></span><br><span class="line">    UUIDField(Field)</span><br><span class="line">        - 字符串类型，Django Admin以及ModelForm中提供对UUID格式的验证</span><br><span class="line"></span><br><span class="line">    FilePathField(Field)</span><br><span class="line">        - 字符串，Django Admin以及ModelForm中提供读取文件夹下文件的功能</span><br><span class="line">        - 参数：</span><br><span class="line">                path,                      文件夹路径</span><br><span class="line">                match=<span class="literal">None</span>,                正则匹配</span><br><span class="line">                recursive=<span class="literal">False</span>,           递归下面的文件夹</span><br><span class="line">                allow_files=<span class="literal">True</span>,          允许文件</span><br><span class="line">                allow_folders=<span class="literal">False</span>,       允许文件夹</span><br><span class="line"></span><br><span class="line">    FileField(Field)</span><br><span class="line">        - 字符串，路径保存在数据库，文件上传到指定目录</span><br><span class="line">        - 参数：</span><br><span class="line">            upload_to = <span class="string">&quot;&quot;</span>      上传文件的保存路径</span><br><span class="line">            storage = <span class="literal">None</span>      存储组件，默认django.core.files.storage.FileSystemStorage</span><br><span class="line"></span><br><span class="line">    ImageField(FileField)</span><br><span class="line">        - 字符串，路径保存在数据库，文件上传到指定目录</span><br><span class="line">        - 参数：</span><br><span class="line">            upload_to = <span class="string">&quot;&quot;</span>      上传文件的保存路径</span><br><span class="line">            storage = <span class="literal">None</span>      存储组件，默认django.core.files.storage.FileSystemStorage</span><br><span class="line">            width_field=<span class="literal">None</span>,   上传图片的高度保存的数据库字段名（字符串）</span><br><span class="line">            height_field=<span class="literal">None</span>   上传图片的宽度保存的数据库字段名（字符串）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    DurationField(Field)</span><br><span class="line">        - 长整数，时间间隔，数据库中按照bigint存储，ORM中获取的值为datetime.timedelta类型</span><br><span class="line"></span><br><span class="line">    FloatField(Field)</span><br><span class="line">        - 浮点型</span><br><span class="line"></span><br><span class="line">    DecimalField(Field)</span><br><span class="line">        - <span class="number">10</span>进制小数</span><br><span class="line">        - 参数：</span><br><span class="line">            max_digits，小数总长度</span><br><span class="line">            decimal_places，小数位长度</span><br><span class="line"></span><br><span class="line">    BinaryField(Field)</span><br><span class="line">        - 二进制类型</span><br></pre></td></tr></table></figure><h3 id="48-一对多ForeignKey可选参数"><a href="#48-一对多ForeignKey可选参数" class="headerlink" title="48 一对多ForeignKey可选参数"></a>48 一对多ForeignKey可选参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、to,                                          <span class="comment"># 要进行关联的表名</span></span><br><span class="line"><span class="number">2</span>、to_field=<span class="literal">None</span>,                               <span class="comment"># 要关联的表中的字段名称</span></span><br><span class="line"><span class="number">3</span>、on_delete=<span class="literal">None</span>,                              <span class="comment"># 当删除关联表中的数据时，当前表与其关联的行的行为</span></span><br><span class="line">            - models.CASCADE                    <span class="comment"># ，删除关联数据，与之关联也删除</span></span><br><span class="line">            - models.DO_NOTHING                 <span class="comment"># ，删除关联数据，引发错误IntegrityError</span></span><br><span class="line">            - models.PROTECT                    <span class="comment"># ，删除关联数据，引发错误ProtectedError</span></span><br><span class="line">            - models.SET_NULL                   <span class="comment"># ，删除关联数据，与之关联的值设置为null（前提FK字段需要设置为可空）</span></span><br><span class="line">            - models.SET_DEFAULT                <span class="comment"># ，删除关联数据，与之关联的值设置为默认值（前提FK字段需要设置默认值）</span></span><br><span class="line">            - models.SET                        <span class="comment"># ，删除关联数据，</span></span><br><span class="line"><span class="number">4</span>、related_name=<span class="literal">None</span>,                           <span class="comment"># 反向操作时，使用的字段名，用于代替 【表名_set】 如： obj.表名_set.all()</span></span><br><span class="line">                                                <span class="comment"># 在做自关联时必须指定此字段，防止查找冲突</span></span><br><span class="line"><span class="number">5</span>、delated_query_name=<span class="literal">None</span>,                     <span class="comment"># 反向操作时，使用的连接前缀，用于替换【表名】</span></span><br><span class="line">                                                <span class="comment"># 如：models.UserGroup.objects.filter(表名__字段名=1).values(&#x27;表名__字段名&#x27;)</span></span><br><span class="line"><span class="number">6</span>、limit_choices_to=<span class="literal">None</span>,                       <span class="comment"># 在Admin或ModelForm中显示关联数据时，提供的条件：</span></span><br><span class="line">            - limit_choices_to=&#123;<span class="string">&#x27;nid__gt&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">            - limit_choices_to=<span class="keyword">lambda</span> : &#123;<span class="string">&#x27;nid__gt&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="number">7</span>、db_constraint=<span class="literal">True</span>                           <span class="comment"># 是否在数据库中创建外键约束</span></span><br><span class="line"><span class="number">8</span>、parent_link=<span class="literal">False</span>                            <span class="comment"># 在Admin中是否显示关联数据</span></span><br><span class="line">一对多ForeignKey可选参数</span><br></pre></td></tr></table></figure><h3 id="49-Django-一对多表结构操作"><a href="#49-Django-一对多表结构操作" class="headerlink" title="49 Django 一对多表结构操作"></a>49 Django 一对多表结构操作</h3><h4 id="49-1-一对多基本增删改查"><a href="#49-1-一对多基本增删改查" class="headerlink" title="49.1 一对多基本增删改查"></a>49.1 一对多基本增删改查</h4><ul><li>models.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">64</span>,unique=<span class="literal">True</span>)</span><br><span class="line">    ut = models.ForeignKey(to=<span class="string">&#x27;UserType&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserType</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    type_name = models.CharField(max_length=<span class="number">64</span>,unique=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>views.py</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render,HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 1 创建</span></span><br><span class="line">    <span class="comment"># 创建数据方法一</span></span><br><span class="line">    models.UserInfo.objects.create(name=<span class="string">&#x27;root&#x27;</span>, ut_id=<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 创建数据方法二</span></span><br><span class="line">    obj = models.UserInfo(name=<span class="string">&#x27;root&#x27;</span>, ut_id=<span class="number">2</span>)</span><br><span class="line">    obj.save()</span><br><span class="line">    <span class="comment"># 创建数据库方法三(传入字典必须在字典前加两个星号)</span></span><br><span class="line">    dic = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;ut_id&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line">    models.UserInfo.objects.create(**dic)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2 删除</span></span><br><span class="line">    <span class="comment"># models.UserInfo.objects.all().delete()  # 删除所有</span></span><br><span class="line">    models.UserInfo.objects.<span class="built_in">filter</span>(name=<span class="string">&#x27;root&#x27;</span>).delete()  <span class="comment"># 删除指定</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3 更新</span></span><br><span class="line">    <span class="comment"># models.UserInfo.objects.all().update(ut_id=1)</span></span><br><span class="line">    <span class="comment"># models.UserInfo.objects.filter(name=&#x27;zhangsan&#x27;).update(ut_id=4)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.1 正向查找 user_obj.ut.type_name</span></span><br><span class="line">    print( models.UserInfo.objects.get(name=<span class="string">&#x27;zhangsan&#x27;</span>).ut.type_name )</span><br><span class="line">    print( models.UserInfo.objects.<span class="built_in">filter</span>(ut__type_name=<span class="string">&#x27;student&#x27;</span>) )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.2 反向查找 type_obj.userinfo_set.all()</span></span><br><span class="line">    print( models.UserType.objects.get(type_name=<span class="string">&#x27;student&#x27;</span>).userinfo_set.<span class="built_in">all</span>() )</span><br><span class="line">    print( models.UserType.objects.get(type_name=<span class="string">&#x27;student&#x27;</span>).userinfo_set.<span class="built_in">filter</span>(name=<span class="string">&#x27;zhangsan&#x27;</span>) )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br><span class="line"></span><br><span class="line">views.py</span><br></pre></td></tr></table></figure><h4 id="49-2-一对多更多查询"><a href="#49-2-一对多更多查询" class="headerlink" title="49.2 一对多更多查询"></a>49.2 一对多更多查询</h4><ul><li>一对多创建表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserType</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    user_type_name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.user_type_name            <span class="comment">#只有加上这个，Django admin才会显示表名</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    pwd = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">    ut = models.ForeignKey(</span><br><span class="line">        to=<span class="string">&#x27;UserType&#x27;</span>,</span><br><span class="line">        to_field=<span class="string">&#x27;id&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1、反向操作时，使用的连接前缀，用于替换【表名】</span></span><br><span class="line">        <span class="comment"># 如： models.UserGroup.objects.filter(a__字段名=1).values(&#x27;a__字段名&#x27;)</span></span><br><span class="line">        related_query_name=<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">#2、反向操作时，使用的字段名，用于代替 【表名_set】 如： obj.b_set.all()</span></span><br><span class="line">        <span class="comment"># 使用时查找报错</span></span><br><span class="line">        <span class="comment"># related_name=&#x27;b&#x27;,</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><ul><li>一对多正向反向查找</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 1 正向查找</span></span><br><span class="line">    <span class="comment">#1.1 正向查找user表用户名</span></span><br><span class="line">    print(models.User.objects.get(username=<span class="string">&#x27;zhangsan&#x27;</span>).username)           <span class="comment"># zhangsan</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1.2 正向跨表查找用户类型</span></span><br><span class="line">    print(models.User.objects.get(username=<span class="string">&#x27;zhangsan&#x27;</span>).ut.user_type_name)  <span class="comment"># student</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1.3 双下划线正向跨表正向查找</span></span><br><span class="line">    print( models.User.objects.<span class="built_in">all</span>().values(<span class="string">&#x27;ut__user_type_name&#x27;</span>,<span class="string">&#x27;username&#x27;</span>) )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2 反向查找</span></span><br><span class="line">    <span class="comment"># 2.1：【表名_set】，反向查找user表中用户类型为student 的所有用户</span></span><br><span class="line">    print( models.UserType.objects.get(user_type_name=<span class="string">&#x27;student&#x27;</span>).user_set.<span class="built_in">all</span>() )           <span class="comment"># [&lt;User: lisi&gt;, &lt;User: wangwu&gt;]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.2：【a__字段名】反向查找user表中张三在UserType表中的类型：（[&lt;UserType: teacher&gt;]）</span></span><br><span class="line">    print( models.UserType.objects.<span class="built_in">filter</span>(a__username=<span class="string">&#x27;zhangsan&#x27;</span>) )                         <span class="comment"># student</span></span><br><span class="line">    <span class="comment"># 这里的a是user表的ForeignKey字段的参数：related_query_name=&#x27;a&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.3: 双下划线跨表反向查找</span></span><br><span class="line">    print( models.UserType.objects.<span class="built_in">all</span>().values(<span class="string">&#x27;a__username&#x27;</span>, <span class="string">&#x27;user_type_name&#x27;</span>) )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3 自动创建User表和UserType表中的数据</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    username = [&#123;&#x27;username&#x27;:&#x27;zhangsan&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;lisi&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;wangwu&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    user_type = [&#123;&#x27;user_type_name&#x27;:&#x27;student&#x27;&#125;,&#123;&#x27;user_type_name&#x27;:&#x27;teacher&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for type_dic in user_type:</span></span><br><span class="line"><span class="string">        models.UserType.objects.create(**type_dic)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for user_dic in username:</span></span><br><span class="line"><span class="string">        models.User.objects.create(**user_dic)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>一对多使用values和values_list结合双下划线跨表查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 第一种：values-----获取的内部是字典  拿固定列数</span></span><br><span class="line">    <span class="comment"># 1.1 正向查找： 使用ForeignKey字段名ut结合双下划线查询</span></span><br><span class="line">    models.User.objects.<span class="built_in">filter</span>(username=<span class="string">&#x27;zhangsan&#x27;</span>).values(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;ut__user_type_name&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.2 向查找： 使用ForeignKey的related_query_name=&#x27;a&#x27;,的字段</span></span><br><span class="line">    models.UserType.objects.<span class="built_in">all</span>().values(<span class="string">&#x27;user_type_name&#x27;</span>, <span class="string">&#x27;a__username&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第二种：values_list-----获取的是元组  拿固定列数</span></span><br><span class="line">    <span class="comment"># 1.1 正向查找： 使用ForeignKey字段名ut结合双下划线查询</span></span><br><span class="line">    stus = models.User.objects.<span class="built_in">filter</span>(username=<span class="string">&#x27;zhangsan&#x27;</span>).values_list(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;ut__user_type_name&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.2 反向查找： 使用ForeignKey的related_query_name=&#x27;a&#x27;,的字段</span></span><br><span class="line">    utype = models.UserType.objects.<span class="built_in">all</span>().values_list(<span class="string">&#x27;user_type_name&#x27;</span>, <span class="string">&#x27;a__username&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3 自动创建User表和UserType表中的数据</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    username = [&#123;&#x27;username&#x27;:&#x27;zhangsan&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;lisi&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;wangwu&#x27;,&#x27;pwd&#x27;:&#x27;123&#x27;,&#x27;ut_id&#x27;:&#x27;1&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    user_type = [&#123;&#x27;user_type_name&#x27;:&#x27;student&#x27;&#125;,&#123;&#x27;user_type_name&#x27;:&#x27;teacher&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for type_dic in user_type:</span></span><br><span class="line"><span class="string">        models.UserType.objects.create(**type_dic)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for user_dic in username:</span></span><br><span class="line"><span class="string">        models.User.objects.create(**user_dic)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="50-Django-多对多表结构操作"><a href="#50-Django-多对多表结构操作" class="headerlink" title="50 Django 多对多表结构操作"></a>50 Django 多对多表结构操作</h3><h4 id="50-1-创建并操作多对多表"><a href="#50-1-创建并操作多对多表" class="headerlink" title="50.1 创建并操作多对多表"></a>50.1 创建并操作多对多表</h4><h5 id="50-1-1-m2m字段创建"><a href="#50-1-1-m2m字段创建" class="headerlink" title="50.1.1 m2m字段创建"></a>50.1.1 m2m字段创建</h5><ul><li>自己不创建第三张关系表，有m2m字段: 根据queryset对象增删改查（推荐）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    user_info_obj = models.UserInfo.objects.get(username=<span class="string">&#x27;zhangsan&#x27;</span>)</span><br><span class="line">    user_info_objs = models.UserInfo.objects.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line">    group_obj = models.UserGroup.objects.get(group_name=<span class="string">&#x27;group_python&#x27;</span>)</span><br><span class="line">    group_objs = models.UserGroup.objects.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加: 正向</span></span><br><span class="line">    group_obj.user_info.add(user_info_obj)</span><br><span class="line">    group_obj.user_info.add(*user_info_objs)</span><br><span class="line">    <span class="comment"># 删除：正向</span></span><br><span class="line">    group_obj.user_info.remove(user_info_obj)</span><br><span class="line">    group_obj.user_info.remove(*user_info_objs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加: 反向</span></span><br><span class="line">    user_info_obj.usergroup_set.add(group_obj)</span><br><span class="line">    user_info_obj.usergroup_set.add(*group_objs)</span><br><span class="line">    <span class="comment"># 删除：反向</span></span><br><span class="line">    user_info_obj.usergroup_set.remove(group_obj)</span><br><span class="line">    user_info_obj.usergroup_set.remove(*group_objs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查找：正向</span></span><br><span class="line">    print(group_obj.user_info.<span class="built_in">all</span>())                                <span class="comment"># 查找group_python组中所有用户</span></span><br><span class="line">    print(group_obj.user_info.<span class="built_in">all</span>().<span class="built_in">filter</span>(username=<span class="string">&#x27;zhangsan&#x27;</span>))</span><br><span class="line">    <span class="comment"># 查找：反向</span></span><br><span class="line">    print(user_info_obj.usergroup_set.<span class="built_in">all</span>())                        <span class="comment"># 查找用户zhangsan属于那些组</span></span><br><span class="line">    print(user_info_obj.usergroup_set.<span class="built_in">all</span>().<span class="built_in">filter</span>(group_name=<span class="string">&#x27;group_python&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 双下划线 正向、反向查找</span></span><br><span class="line">    <span class="comment"># 正向：从用户组表中查找zhangsan属于哪个用户组：[&lt;UserGroup: group_python&gt;]</span></span><br><span class="line">    print( models.UserGroup.objects.<span class="built_in">filter</span>(user_info__username=<span class="string">&#x27;zhangsan&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 反向：从用户表中查询group_python组中有哪些用户：related_query_name=&#x27;m2m&#x27;</span></span><br><span class="line">    print( models.UserInfo.objects.<span class="built_in">filter</span>(m2m__group_name=<span class="string">&#x27;group_python&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自动创建UserInfo表和UserGroup表中的数据</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    user_list = [&#123;&#x27;username&#x27;:&#x27;zhangsan&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;lisi&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;wangwu&#x27;&#125;,]</span></span><br><span class="line"><span class="string">    group_list = [&#123;&#x27;group_name&#x27;:&#x27;group_python&#x27;&#125;,</span></span><br><span class="line"><span class="string">               &#123;&#x27;group_name&#x27;:&#x27;group_linux&#x27;&#125;,</span></span><br><span class="line"><span class="string">               &#123;&#x27;group_name&#x27;:&#x27;group_mysql&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for c in user_list:</span></span><br><span class="line"><span class="string">        models.UserInfo.objects.create(**c)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for l in group_list:</span></span><br><span class="line"><span class="string">        models.UserGroup.objects.create(**l)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="50-1-2-手动创建第三张表"><a href="#50-1-2-手动创建第三张表" class="headerlink" title="50.1.2 手动创建第三张表"></a>50.1.2 手动创建第三张表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment">#表1：主机表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Host</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    nid = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">32</span>,db_index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#表2：应用表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Application</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#表3：自定义第三张关联表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HostToApp</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    hobj = models.ForeignKey(to=<span class="string">&quot;Host&quot;</span>,to_field=<span class="string">&quot;nid&quot;</span>)</span><br><span class="line">    aobj = models.ForeignKey(to=<span class="string">&#x27;Application&#x27;</span>,to_field=<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向第三张表插入数据，建立多对多外键关联</span></span><br><span class="line">HostToApp.objects.create(hobj_id=<span class="number">1</span>,aobj_id=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h5 id="50-1-3-m2m创建（id查询）"><a href="#50-1-3-m2m创建（id查询）" class="headerlink" title="50.1.3 m2m创建（id查询）"></a>50.1.3 m2m创建（id查询）</h5><ul><li>自己不创建第三张关系表，有m2m字段，根据数字id增删改查</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Host</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    hostname = models.CharField(max_length=<span class="number">32</span>,db_index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Group</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    group_name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">    m2m = models.ManyToManyField(<span class="string">&quot;Host&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li>查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 使用间接方法对第三张表操作</span></span><br><span class="line">    obj = models.Group.objects.get(<span class="built_in">id</span>=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1、添加</span></span><br><span class="line">    obj.m2m.add(<span class="number">1</span>)           <span class="comment"># 在第三张表中增加一个条目(1,1)</span></span><br><span class="line">    obj.m2m.add(<span class="number">2</span>, <span class="number">3</span>)        <span class="comment"># 在第三张表中增加条目（1,2）（1,3）两条关系</span></span><br><span class="line">    obj.m2m.add(*[<span class="number">1</span>,<span class="number">3</span>])        <span class="comment"># 在第三张表中增加条目（1,2）（1,3）两条关系</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2、删除</span></span><br><span class="line">    obj.m2m.remove(<span class="number">1</span>)             <span class="comment"># 删除第三张表中的（1,1）条目</span></span><br><span class="line">    obj.m2m.remove(<span class="number">2</span>, <span class="number">3</span>)          <span class="comment"># 删除第三张表中的（1,2）（1,3）条目</span></span><br><span class="line">    obj.m2m.remove(*[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])    <span class="comment"># 删除第三张表中的（1,1）（1,2）（1,3）条目</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3、清空</span></span><br><span class="line">    obj.m2m.clear()                 <span class="comment"># 删除第三张表中application条目等于1的所有条目</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4 更新</span></span><br><span class="line">    obj.m2m.<span class="built_in">set</span>([<span class="number">1</span>, <span class="number">2</span>,])             <span class="comment"># 第三张表中会删除所有条目，然后创建（1,1）（1,2）条目</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5 查找</span></span><br><span class="line">    print( obj.m2m.<span class="built_in">all</span>() )           <span class="comment"># 等价于 models.UserInfo.objects.all()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6 反向查找： 双下划线</span></span><br><span class="line">    hosts = models.Group.objects.<span class="built_in">filter</span>(m2m__id=<span class="number">1</span>)         <span class="comment"># 在Host表中id=1的主机同时属于那些组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自动创建Host表和Group表中的数据</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    hostname = [&#123;&#x27;hostname&#x27;:&#x27;zhangsan&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;hostname&#x27;:&#x27;lisi&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;hostname&#x27;:&#x27;wangwu&#x27;&#125;,]</span></span><br><span class="line"><span class="string">    group_name = [&#123;&#x27;group_name&#x27;:&#x27;DBA&#x27;&#125;,&#123;&#x27;group_name&#x27;:&#x27;public&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for h in hostname:</span></span><br><span class="line"><span class="string">        models.Host.objects.create(**h)</span></span><br><span class="line"><span class="string">    for u in group_name:</span></span><br><span class="line"><span class="string">        models.Group.objects.create(**u)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="50-2-values和values-list结合双下划线跨表查询"><a href="#50-2-values和values-list结合双下划线跨表查询" class="headerlink" title="50.2 values和values_list结合双下划线跨表查询"></a>50.2 values和values_list结合双下划线跨表查询</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> app01 <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orm</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 第一种：values-----获取的内部是字典,拿固定列数</span></span><br><span class="line">    <span class="comment"># 1.1 正向查找： 使用ManyToManyField字段名user_info结合双下划线查询</span></span><br><span class="line">    models.UserGroup.objects.<span class="built_in">filter</span>(group_name=<span class="string">&#x27;group_python&#x27;</span>).values(<span class="string">&#x27;group_name&#x27;</span>, <span class="string">&#x27;user_info__username&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1.2 反向查找： 使用ManyToManyField的related_query_name=&#x27;m2m&#x27;,的字段</span></span><br><span class="line">    models.UserInfo.objects.<span class="built_in">filter</span>(username=<span class="string">&#x27;zhangsan&#x27;</span>).values(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;m2m__group_name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第二种：values_list-----获取的是元组  拿固定列数</span></span><br><span class="line">    <span class="comment"># 2.1 正向查找： 使用ManyToManyField字段名user_info结合双下划线查询</span></span><br><span class="line">    models.UserGroup.objects.<span class="built_in">filter</span>(group_name=<span class="string">&#x27;group_python&#x27;</span>).values_list(<span class="string">&#x27;group_name&#x27;</span>, <span class="string">&#x27;user_info__username&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.2 反向查找： 使用ManyToManyField的related_query_name=&#x27;m2m&#x27;,的字段</span></span><br><span class="line">    lesson = models.UserInfo.objects.<span class="built_in">filter</span>(username=<span class="string">&#x27;zhangsan&#x27;</span>).values_list(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;m2m__group_name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自动创建UserInfo表和UserGroup表中的数据</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    # user_info_obj = models.UserInfo.objects.get(username=&#x27;lisi&#x27;)</span></span><br><span class="line"><span class="string">    # user_info_objs = models.UserInfo.objects.all()</span></span><br><span class="line"><span class="string">    #</span></span><br><span class="line"><span class="string">    # group_obj = models.UserGroup.objects.get(group_name=&#x27;group_python&#x27;)</span></span><br><span class="line"><span class="string">    # group_objs = models.UserGroup.objects.all()</span></span><br><span class="line"><span class="string">    #</span></span><br><span class="line"><span class="string">    # group_obj.user_info.add(*user_info_objs)</span></span><br><span class="line"><span class="string">    # user_info_obj.usergroup_set.add(*group_objs)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    user_list = [&#123;&#x27;username&#x27;:&#x27;zhangsan&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;lisi&#x27;&#125;,</span></span><br><span class="line"><span class="string">                &#123;&#x27;username&#x27;:&#x27;wangwu&#x27;&#125;,]</span></span><br><span class="line"><span class="string">    group_list = [&#123;&#x27;group_name&#x27;:&#x27;group_python&#x27;&#125;,</span></span><br><span class="line"><span class="string">               &#123;&#x27;group_name&#x27;:&#x27;group_linux&#x27;&#125;,</span></span><br><span class="line"><span class="string">               &#123;&#x27;group_name&#x27;:&#x27;group_mysql&#x27;&#125;,]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for c in user_list:</span></span><br><span class="line"><span class="string">        models.UserInfo.objects.create(**c)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for l in group_list:</span></span><br><span class="line"><span class="string">        models.UserGroup.objects.create(**l)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;orm&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="50-3-多对多时ManyToManyField可以添加的参数"><a href="#50-3-多对多时ManyToManyField可以添加的参数" class="headerlink" title="50.3 多对多时ManyToManyField可以添加的参数"></a>50.3 多对多时ManyToManyField可以添加的参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、to,                        <span class="comment"># 要进行关联的表名</span></span><br><span class="line"><span class="number">2</span>、related_name=<span class="literal">None</span>,         <span class="comment"># 反向操作时，使用的字段名，用于代替 【表名_set】如： obj.表名_set.all()</span></span><br><span class="line"><span class="number">3</span>、related_query_name=<span class="literal">None</span>,   <span class="comment"># 反向操作时，使用的连接前缀，用于替换【表名】     </span></span><br><span class="line">                              <span class="comment"># 如： models.UserGroup.objects.filter(表名__字段名=1).values(&#x27;表名__字段名&#x27;)</span></span><br><span class="line"><span class="number">4</span>、limit_choices_to=<span class="literal">None</span>,     <span class="comment"># 在Admin或ModelForm中显示关联数据时，提供的条件：</span></span><br><span class="line">                              <span class="comment"># - limit_choices_to=&#123;&#x27;nid__gt&#x27;: 5&#125;</span></span><br><span class="line"><span class="number">5</span>、symmetrical=<span class="literal">None</span>,          <span class="comment"># 用于多对多自关联，symmetrical用于指定内部是否创建反向操作字段</span></span><br><span class="line"><span class="number">6</span>、through=<span class="literal">None</span>,              <span class="comment"># 自定义第三张表时，使用字段用于指定关系表</span></span><br><span class="line"><span class="number">7</span>、through_fields=<span class="literal">None</span>,       <span class="comment"># 自定义第三张表时，使用字段用于指定关系表中那些字段做多对多关系表</span></span><br><span class="line"><span class="number">8</span>、db_constraint=<span class="literal">True</span>,        <span class="comment"># 是否在数据库中创建外键约束</span></span><br><span class="line">   db_table=<span class="literal">None</span>,             <span class="comment"># 默认创建第三张表时，数据库中表的名称</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
